{"ast":null,"code":"// Automatically generated with Reach 0.1.7 (7b246c0c)\n\n/* eslint-disable */\nexport const _version = '0.1.7';\nexport const _versionHash = '0.1.7 (7b246c0c)';\nexport const _backendVersion = 6;\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getEvents(s) {\n  const stdlib = s.reachStdlib;\n  return {};\n}\n;\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Token;\n  const ctc3 = stdlib.T_Bool;\n  return {\n    infos: {},\n    views: {\n      1: [ctc0],\n      2: [ctc0, ctc0],\n      3: [ctc0, ctc0, ctc1],\n      4: [ctc0, ctc0],\n      5: [ctc0, ctc0, ctc1, ctc2],\n      6: [ctc0, ctc0, ctc1, ctc2],\n      7: [ctc0, ctc0, ctc1, ctc2, ctc1, ctc1],\n      8: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      11: [ctc0, ctc1, ctc2],\n      12: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      15: [ctc0, ctc1, ctc2],\n      16: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      19: [ctc0, ctc1, ctc2],\n      20: [ctc0, ctc0, ctc1, ctc2, ctc1, ctc1],\n      21: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      24: [ctc0, ctc1, ctc2],\n      25: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      28: [ctc0, ctc1, ctc2],\n      29: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      32: [ctc0, ctc1, ctc2],\n      33: [ctc0, ctc0, ctc1, ctc2, ctc1, ctc3],\n      34: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      37: [ctc0, ctc1, ctc2],\n      38: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      41: [ctc0, ctc1, ctc2],\n      42: [ctc0, ctc0, ctc1, ctc2],\n      45: [ctc0, ctc1, ctc2]\n    }\n  };\n}\n;\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n  };\n}\n;\nexport async function ProjectOwner(ctcTop, interact) {\n  if (typeof ctcTop !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for ProjectOwner expects to receive a contract as its first argument.`));\n  }\n\n  if (typeof interact !== 'object') {\n    return Promise.reject(new Error(`The backend for ProjectOwner expects to receive an interact object as its second argument.`));\n  }\n\n  const ctc = ctcTop._initialize();\n\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 28));\n  const ctc2 = stdlib.T_Object({\n    contractDuration: ctc0,\n    fundraisingGoal: ctc0,\n    projectDetails: ctc1,\n    projectName: ctc1,\n    share: ctc0\n  });\n  const ctc3 = stdlib.T_Null;\n  const ctc4 = stdlib.T_Bool;\n  const ctc5 = stdlib.T_Object({\n    amt: ctc0,\n    contribute: ctc4\n  });\n  const ctc6 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 32));\n  const ctc7 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 8));\n  const ctc8 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 96));\n  const ctc9 = stdlib.T_Object({\n    amt: ctc0,\n    metadata: ctc6,\n    name: ctc6,\n    supply: ctc0,\n    symbol: ctc7,\n    url: ctc8\n  });\n  const ctc10 = stdlib.T_Token;\n  const ctc11 = stdlib.T_Address;\n  const v354 = stdlib.protect(ctc2, interact.projectInfo, 'for ProjectOwner\\'s interact field projectInfo');\n  const txn1 = await ctc.sendrecv({\n    args: [v354],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:67:6:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc2],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:67:6:decimal', stdlib.UInt_max, 0), []],\n    sim_p: async txn1 => {\n      const sim_r = {\n        txns: [],\n        mapRefs: [],\n        mapsPrev: [],\n        mapsNext: []\n      };\n      const {\n        data: [v358],\n        secs: v360,\n        time: v359,\n        didSend: v28,\n        from: v357\n      } = txn1;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:67:6:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      sim_r.isHalt = false;\n      return sim_r;\n    },\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc2],\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v358],\n    secs: v360,\n    time: v359,\n    didSend: v28,\n    from: v357\n  } = txn1;\n  ;\n  stdlib.protect(ctc3, await interact.reportReady(), {\n    at: './index.rsh:1:39:application',\n    fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:69:26:application call to \"liftedInteract\" (defined at: ./index.rsh:69:26:application)'],\n    msg: 'reportReady',\n    who: 'ProjectOwner'\n  });\n  const txn2 = await ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 1,\n    out_tys: [ctc5],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v367],\n    secs: v369,\n    time: v368,\n    didSend: v42,\n    from: v366\n  } = txn2;\n  ;\n  const v371 = v367.contribute;\n\n  if (v371) {\n    const v381 = v358.fundraisingGoal;\n    const txn3 = await ctc.sendrecv({\n      args: [v357, v366, v381],\n      evt_cnt: 1,\n      funcNum: 2,\n      lct: v368,\n      onlyIf: true,\n      out_tys: [ctc0],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:90:6:decimal', stdlib.UInt_max, 0), []],\n      sim_p: async txn3 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [v383],\n          secs: v385,\n          time: v384,\n          didSend: v69,\n          from: v382\n        } = txn3;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:90:6:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const v387 = stdlib.addressEq(v357, v382);\n        stdlib.assert(v387, {\n          at: './index.rsh:90:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n        });\n        sim_r.isHalt = false;\n        return sim_r;\n      },\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc11, ctc11, ctc0],\n      waitIfNotPresent: false\n    });\n    const {\n      data: [v383],\n      secs: v385,\n      time: v384,\n      didSend: v69,\n      from: v382\n    } = txn3;\n    ;\n    const v387 = stdlib.addressEq(v357, v382);\n    stdlib.assert(v387, {\n      at: './index.rsh:90:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n    });\n    const txn4 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 3,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n    });\n    const {\n      data: [],\n      secs: v390,\n      time: v389,\n      didSend: v76,\n      from: v388\n    } = txn4;\n    ;\n    const v393 = stdlib.addressEq(v366, v388);\n    stdlib.assert(v393, {\n      at: './index.rsh:94:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n    });\n    stdlib.protect(ctc3, await interact.reportPayment(v383), {\n      at: './index.rsh:95:45:application',\n      fs: ['at ./index.rsh:95:7:application call to [unknown function] (defined at: ./index.rsh:95:20:function exp)'],\n      msg: 'reportPayment',\n      who: 'ProjectOwner'\n    });\n    ;\n    stdlib.protect(ctc3, await interact.reportTransfer(v383), {\n      at: './index.rsh:97:46:application',\n      fs: ['at ./index.rsh:97:7:application call to [unknown function] (defined at: ./index.rsh:97:20:function exp)'],\n      msg: 'reportTransfer',\n      who: 'ProjectOwner'\n    });\n    const v404 = stdlib.protect(ctc9, await interact.getParams(), {\n      at: './index.rsh:103:25:application',\n      fs: ['at ./index.rsh:101:10:application call to [unknown function] (defined at: ./index.rsh:101:14:function exp)'],\n      msg: 'getParams',\n      who: 'ProjectOwner'\n    });\n    const v405 = v404.name;\n    const v406 = v404.symbol;\n    const v407 = v404.url;\n    const v408 = v404.metadata;\n    const v409 = v404.supply;\n    const v410 = v404.amt;\n    const txn5 = await ctc.sendrecv({\n      args: [v357, v366, v405, v406, v407, v408, v409, v410],\n      evt_cnt: 6,\n      funcNum: 4,\n      lct: v389,\n      onlyIf: true,\n      out_tys: [ctc6, ctc7, ctc8, ctc6, ctc0, ctc0],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:107:6:decimal', stdlib.UInt_max, 0), []],\n      sim_p: async txn5 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [v412, v413, v414, v415, v416, v417],\n          secs: v419,\n          time: v418,\n          didSend: v114,\n          from: v411\n        } = txn5;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:107:6:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const v421 = stdlib.addressEq(v357, v411);\n        stdlib.assert(v421, {\n          at: './index.rsh:107:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n        });\n        const v422 = stdlib.simTokenNew(sim_r, v412, v413, v414, v415, v416, undefined);\n        const v423 = await txn5.getOutput('internal', 'v422', ctc10, v422);\n        sim_r.isHalt = false;\n        return sim_r;\n      },\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc11, ctc11, ctc6, ctc7, ctc8, ctc6, ctc0, ctc0],\n      waitIfNotPresent: false\n    });\n    const {\n      data: [v412, v413, v414, v415, v416, v417],\n      secs: v419,\n      time: v418,\n      didSend: v114,\n      from: v411\n    } = txn5;\n    ;\n    const v421 = stdlib.addressEq(v357, v411);\n    stdlib.assert(v421, {\n      at: './index.rsh:107:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n    });\n    const v422 = undefined;\n    const v423 = await txn5.getOutput('internal', 'v422', ctc10, v422);\n    const v425 = {\n      metadata: v415,\n      name: v412,\n      supply: v416,\n      symbol: v413,\n      url: v414\n    };\n    stdlib.protect(ctc3, await interact.reportTokenMinted(v423, v425), {\n      at: './index.rsh:1:39:application',\n      fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:113:32:application call to \"liftedInteract\" (defined at: ./index.rsh:113:32:application)'],\n      msg: 'reportTokenMinted',\n      who: 'ProjectOwner'\n    });\n    const txn6 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 5,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n    });\n    const {\n      data: [],\n      secs: v428,\n      time: v427,\n      didSend: v127,\n      from: v426\n    } = txn6;\n    ;\n    const v430 = stdlib.addressEq(v366, v426);\n    stdlib.assert(v430, {\n      at: './index.rsh:116:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n    });\n    const txn7 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 6,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n    });\n    const {\n      data: [],\n      secs: v435,\n      time: v434,\n      didSend: v138,\n      from: v433\n    } = txn7;\n    ;\n    const v437 = stdlib.addressEq(v366, v433);\n    stdlib.assert(v437, {\n      at: './index.rsh:132:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n    });\n    const v438 = stdlib.addressEq(v366, v357);\n    const v440 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:121:40:decimal', stdlib.UInt_max, 40), v416);\n    const v441 = stdlib.div(v440, stdlib.checkedBigNumberify('./index.rsh:121:55:decimal', stdlib.UInt_max, 100));\n    const v442 = stdlib.ge(v416, v441);\n    const v443 = v438 ? v442 : false;\n\n    if (v443) {\n      const v449 = stdlib.sub(v416, v441);\n      ;\n      const txn8 = await ctc.sendrecv({\n        args: [v357, v366, v416, v423, v441, v449],\n        evt_cnt: 0,\n        funcNum: 7,\n        lct: v434,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0), []],\n        sim_p: async txn8 => {\n          const sim_r = {\n            txns: [],\n            mapRefs: [],\n            mapsPrev: [],\n            mapsNext: []\n          };\n          const {\n            data: [],\n            secs: v456,\n            time: v455,\n            didSend: v179,\n            from: v454\n          } = txn8;\n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n          });\n          const v458 = stdlib.addressEq(v357, v454);\n          stdlib.assert(v458, {\n            at: './index.rsh:135:6:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n          });\n          const v459 = stdlib.addressEq(v357, v357);\n          const v463 = stdlib.ge(v449, v441);\n          const v464 = v459 ? v463 : false;\n\n          if (v464) {\n            const v470 = stdlib.sub(v449, v441);\n            sim_r.txns.push({\n              amt: v441,\n              kind: 'from',\n              to: v357,\n              tok: v423\n            });\n            sim_r.isHalt = false;\n          } else {\n            if (v463) {\n              const v529 = stdlib.sub(v449, v441);\n              sim_r.txns.push({\n                amt: v441,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              sim_r.isHalt = false;\n            } else {\n              sim_r.isHalt = false;\n            }\n          }\n\n          return sim_r;\n        },\n        soloSend: true,\n        timeoutAt: undefined,\n        tys: [ctc11, ctc11, ctc0, ctc10, ctc0, ctc0],\n        waitIfNotPresent: false\n      });\n      const {\n        data: [],\n        secs: v456,\n        time: v455,\n        didSend: v179,\n        from: v454\n      } = txn8;\n      ;\n      const v458 = stdlib.addressEq(v357, v454);\n      stdlib.assert(v458, {\n        at: './index.rsh:135:6:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'ProjectOwner'\n      });\n      const v459 = stdlib.addressEq(v357, v357);\n      const v463 = stdlib.ge(v449, v441);\n      const v464 = v459 ? v463 : false;\n\n      if (v464) {\n        const v470 = stdlib.sub(v449, v441);\n        ;\n        stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n          at: './index.rsh:1:39:application',\n          fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n          msg: 'didTransfer',\n          who: 'ProjectOwner'\n        });\n        const txn9 = await ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 8,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n        });\n        const {\n          data: [],\n          secs: v477,\n          time: v476,\n          didSend: v220,\n          from: v475\n        } = txn9;\n        ;\n        const v479 = stdlib.addressEq(v366, v475);\n        stdlib.assert(v479, {\n          at: './index.rsh:139:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n        });\n        ;\n        stdlib.protect(ctc3, await interact.programEnded(), {\n          at: './index.rsh:141:44:application',\n          fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n          msg: 'programEnded',\n          who: 'ProjectOwner'\n        });\n        let v487 = v476;\n\n        while (await (async () => {\n          return true;\n        })()) {\n          const txn10 = await ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 10,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v499,\n            time: v498,\n            didSend: v239,\n            from: v497\n          } = txn10;\n          ;\n          const v501 = stdlib.addressEq(v366, v497);\n          stdlib.assert(v501, {\n            at: './index.rsh:146:7:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n          });\n          const cv487 = v498;\n          v487 = cv487;\n          continue;\n        }\n\n        undefined;\n        undefined;\n        stdlib.protect(ctc3, await interact.reportExit(), {\n          at: './index.rsh:152:42:application',\n          fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n          msg: 'reportExit',\n          who: 'ProjectOwner'\n        });\n        return;\n      } else {\n        if (v463) {\n          const v529 = stdlib.sub(v449, v441);\n          ;\n          stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n            at: './index.rsh:1:39:application',\n            fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n            msg: 'didTransfer',\n            who: 'ProjectOwner'\n          });\n          const txn9 = await ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 11,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v536,\n            time: v535,\n            didSend: v220,\n            from: v534\n          } = txn9;\n          ;\n          const v538 = stdlib.addressEq(v366, v534);\n          stdlib.assert(v538, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n          });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n          });\n          let v546 = v535;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 13,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v558,\n              time: v557,\n              didSend: v239,\n              from: v556\n            } = txn10;\n            ;\n            const v560 = stdlib.addressEq(v366, v556);\n            stdlib.assert(v560, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            const cv546 = v557;\n            v546 = cv546;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n          });\n          return;\n        } else {\n          const txn9 = await ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 14,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v582,\n            time: v581,\n            didSend: v220,\n            from: v580\n          } = txn9;\n          ;\n          const v584 = stdlib.addressEq(v366, v580);\n          stdlib.assert(v584, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n          });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n          });\n          let v592 = v581;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 16,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v604,\n              time: v603,\n              didSend: v239,\n              from: v602\n            } = txn10;\n            ;\n            const v606 = stdlib.addressEq(v366, v602);\n            stdlib.assert(v606, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            const cv592 = v603;\n            v592 = cv592;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n          });\n          return;\n        }\n      }\n    } else {\n      if (v442) {\n        const v634 = stdlib.sub(v416, v441);\n        ;\n        const txn8 = await ctc.sendrecv({\n          args: [v357, v366, v416, v423, v441, v634],\n          evt_cnt: 0,\n          funcNum: 17,\n          lct: v434,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0), []],\n          sim_p: async txn8 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            const {\n              data: [],\n              secs: v641,\n              time: v640,\n              didSend: v179,\n              from: v639\n            } = txn8;\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const v643 = stdlib.addressEq(v357, v639);\n            stdlib.assert(v643, {\n              at: './index.rsh:135:6:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            const v644 = stdlib.addressEq(v357, v357);\n            const v648 = stdlib.ge(v634, v441);\n            const v649 = v644 ? v648 : false;\n\n            if (v649) {\n              const v655 = stdlib.sub(v634, v441);\n              sim_r.txns.push({\n                amt: v441,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              sim_r.isHalt = false;\n            } else {\n              if (v648) {\n                const v714 = stdlib.sub(v634, v441);\n                sim_r.txns.push({\n                  amt: v441,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                });\n                sim_r.isHalt = false;\n              } else {\n                sim_r.isHalt = false;\n              }\n            }\n\n            return sim_r;\n          },\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc11, ctc11, ctc0, ctc10, ctc0, ctc0],\n          waitIfNotPresent: false\n        });\n        const {\n          data: [],\n          secs: v641,\n          time: v640,\n          didSend: v179,\n          from: v639\n        } = txn8;\n        ;\n        const v643 = stdlib.addressEq(v357, v639);\n        stdlib.assert(v643, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n        });\n        const v644 = stdlib.addressEq(v357, v357);\n        const v648 = stdlib.ge(v634, v441);\n        const v649 = v644 ? v648 : false;\n\n        if (v649) {\n          const v655 = stdlib.sub(v634, v441);\n          ;\n          stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n            at: './index.rsh:1:39:application',\n            fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n            msg: 'didTransfer',\n            who: 'ProjectOwner'\n          });\n          const txn9 = await ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 18,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v662,\n            time: v661,\n            didSend: v220,\n            from: v660\n          } = txn9;\n          ;\n          const v664 = stdlib.addressEq(v366, v660);\n          stdlib.assert(v664, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n          });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n          });\n          let v672 = v661;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 20,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v684,\n              time: v683,\n              didSend: v239,\n              from: v682\n            } = txn10;\n            ;\n            const v686 = stdlib.addressEq(v366, v682);\n            stdlib.assert(v686, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            const cv672 = v683;\n            v672 = cv672;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n          });\n          return;\n        } else {\n          if (v648) {\n            const v714 = stdlib.sub(v634, v441);\n            ;\n            stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n              at: './index.rsh:1:39:application',\n              fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n              msg: 'didTransfer',\n              who: 'ProjectOwner'\n            });\n            const txn9 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 21,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v721,\n              time: v720,\n              didSend: v220,\n              from: v719\n            } = txn9;\n            ;\n            const v723 = stdlib.addressEq(v366, v719);\n            stdlib.assert(v723, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n            });\n            let v731 = v720;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 23,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v743,\n                time: v742,\n                didSend: v239,\n                from: v741\n              } = txn10;\n              ;\n              const v745 = stdlib.addressEq(v366, v741);\n              stdlib.assert(v745, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n              });\n              const cv731 = v742;\n              v731 = cv731;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n            });\n            return;\n          } else {\n            const txn9 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 24,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v767,\n              time: v766,\n              didSend: v220,\n              from: v765\n            } = txn9;\n            ;\n            const v769 = stdlib.addressEq(v366, v765);\n            stdlib.assert(v769, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n            });\n            let v777 = v766;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 26,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v789,\n                time: v788,\n                didSend: v239,\n                from: v787\n              } = txn10;\n              ;\n              const v791 = stdlib.addressEq(v366, v787);\n              stdlib.assert(v791, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n              });\n              const cv777 = v788;\n              v777 = cv777;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n            });\n            return;\n          }\n        }\n      } else {\n        const txn8 = await ctc.sendrecv({\n          args: [v357, v366, v416, v423, v441, v442],\n          evt_cnt: 0,\n          funcNum: 27,\n          lct: v434,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0), []],\n          sim_p: async txn8 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            const {\n              data: [],\n              secs: v813,\n              time: v812,\n              didSend: v179,\n              from: v811\n            } = txn8;\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const v815 = stdlib.addressEq(v357, v811);\n            stdlib.assert(v815, {\n              at: './index.rsh:135:6:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            const v816 = stdlib.addressEq(v357, v357);\n            const v821 = v816 ? v442 : false;\n\n            if (v821) {\n              const v827 = stdlib.sub(v416, v441);\n              sim_r.txns.push({\n                amt: v441,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              sim_r.isHalt = false;\n            } else {\n              if (v442) {\n                const v886 = stdlib.sub(v416, v441);\n                sim_r.txns.push({\n                  amt: v441,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                });\n                sim_r.isHalt = false;\n              } else {\n                sim_r.isHalt = false;\n              }\n            }\n\n            return sim_r;\n          },\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc11, ctc11, ctc0, ctc10, ctc0, ctc4],\n          waitIfNotPresent: false\n        });\n        const {\n          data: [],\n          secs: v813,\n          time: v812,\n          didSend: v179,\n          from: v811\n        } = txn8;\n        ;\n        const v815 = stdlib.addressEq(v357, v811);\n        stdlib.assert(v815, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n        });\n        const v816 = stdlib.addressEq(v357, v357);\n        const v821 = v816 ? v442 : false;\n\n        if (v821) {\n          const v827 = stdlib.sub(v416, v441);\n          ;\n          stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n            at: './index.rsh:1:39:application',\n            fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n            msg: 'didTransfer',\n            who: 'ProjectOwner'\n          });\n          const txn9 = await ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 28,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v834,\n            time: v833,\n            didSend: v220,\n            from: v832\n          } = txn9;\n          ;\n          const v836 = stdlib.addressEq(v366, v832);\n          stdlib.assert(v836, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n          });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n          });\n          let v844 = v833;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 30,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v856,\n              time: v855,\n              didSend: v239,\n              from: v854\n            } = txn10;\n            ;\n            const v858 = stdlib.addressEq(v366, v854);\n            stdlib.assert(v858, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            const cv844 = v855;\n            v844 = cv844;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n          });\n          return;\n        } else {\n          if (v442) {\n            const v886 = stdlib.sub(v416, v441);\n            ;\n            stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n              at: './index.rsh:1:39:application',\n              fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n              msg: 'didTransfer',\n              who: 'ProjectOwner'\n            });\n            const txn9 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 31,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v893,\n              time: v892,\n              didSend: v220,\n              from: v891\n            } = txn9;\n            ;\n            const v895 = stdlib.addressEq(v366, v891);\n            stdlib.assert(v895, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n            });\n            let v903 = v892;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 33,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v915,\n                time: v914,\n                didSend: v239,\n                from: v913\n              } = txn10;\n              ;\n              const v917 = stdlib.addressEq(v366, v913);\n              stdlib.assert(v917, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n              });\n              const cv903 = v914;\n              v903 = cv903;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n            });\n            return;\n          } else {\n            const txn9 = await ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 34,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v939,\n              time: v938,\n              didSend: v220,\n              from: v937\n            } = txn9;\n            ;\n            const v941 = stdlib.addressEq(v366, v937);\n            stdlib.assert(v941, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n            });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n            });\n            let v949 = v938;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 36,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v961,\n                time: v960,\n                didSend: v239,\n                from: v959\n              } = txn10;\n              ;\n              const v963 = stdlib.addressEq(v366, v959);\n              stdlib.assert(v963, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n              });\n              const cv949 = v960;\n              v949 = cv949;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n            });\n            return;\n          }\n        }\n      }\n    }\n  } else {\n    stdlib.protect(ctc3, await interact.reportCancellation(), {\n      at: './index.rsh:79:52:application',\n      fs: ['at ./index.rsh:79:9:application call to [unknown function] (defined at: ./index.rsh:79:22:function exp)'],\n      msg: 'reportCancellation',\n      who: 'ProjectOwner'\n    });\n    stdlib.protect(ctc3, await interact.reportExit(), {\n      at: './index.rsh:80:44:application',\n      fs: ['at ./index.rsh:80:9:application call to [unknown function] (defined at: ./index.rsh:80:22:function exp)'],\n      msg: 'reportExit',\n      who: 'ProjectOwner'\n    });\n    return;\n  }\n}\n_c = ProjectOwner;\n;\nexport async function Sponsor(ctcTop, interact) {\n  if (typeof ctcTop !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Sponsor expects to receive a contract as its first argument.`));\n  }\n\n  if (typeof interact !== 'object') {\n    return Promise.reject(new Error(`The backend for Sponsor expects to receive an interact object as its second argument.`));\n  }\n\n  const ctc = ctcTop._initialize();\n\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 28));\n  const ctc2 = stdlib.T_Object({\n    contractDuration: ctc0,\n    fundraisingGoal: ctc0,\n    projectDetails: ctc1,\n    projectName: ctc1,\n    share: ctc0\n  });\n  const ctc3 = stdlib.T_Bool;\n  const ctc4 = stdlib.T_Object({\n    amt: ctc0,\n    contribute: ctc3\n  });\n  const ctc5 = stdlib.T_Null;\n  const ctc6 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 32));\n  const ctc7 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 8));\n  const ctc8 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 96));\n  const ctc9 = stdlib.T_Token;\n  const ctc10 = stdlib.T_Address;\n  const txn1 = await ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc2],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v358],\n    secs: v360,\n    time: v359,\n    didSend: v28,\n    from: v357\n  } = txn1;\n  ;\n  const v365 = stdlib.protect(ctc4, await interact.sponsor(v358), {\n    at: './index.rsh:74:48:application',\n    fs: ['at ./index.rsh:73:9:application call to [unknown function] (defined at: ./index.rsh:73:13:function exp)'],\n    msg: 'sponsor',\n    who: 'Sponsor'\n  });\n  const txn2 = await ctc.sendrecv({\n    args: [v357, v365],\n    evt_cnt: 1,\n    funcNum: 1,\n    lct: v359,\n    onlyIf: true,\n    out_tys: [ctc4],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:76:5:decimal', stdlib.UInt_max, 0), []],\n    sim_p: async txn2 => {\n      const sim_r = {\n        txns: [],\n        mapRefs: [],\n        mapsPrev: [],\n        mapsNext: []\n      };\n      const {\n        data: [v367],\n        secs: v369,\n        time: v368,\n        didSend: v42,\n        from: v366\n      } = txn2;\n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:76:5:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n      });\n      const v371 = v367.contribute;\n\n      if (v371) {\n        sim_r.isHalt = false;\n      } else {\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n        });\n        sim_r.isHalt = true;\n      }\n\n      return sim_r;\n    },\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc10, ctc4],\n    waitIfNotPresent: false\n  });\n  const {\n    data: [v367],\n    secs: v369,\n    time: v368,\n    didSend: v42,\n    from: v366\n  } = txn2;\n  ;\n  const v371 = v367.contribute;\n\n  if (v371) {\n    const txn3 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 1,\n      funcNum: 2,\n      out_tys: [ctc0],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n    });\n    const {\n      data: [v383],\n      secs: v385,\n      time: v384,\n      didSend: v69,\n      from: v382\n    } = txn3;\n    ;\n    const v387 = stdlib.addressEq(v357, v382);\n    stdlib.assert(v387, {\n      at: './index.rsh:90:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n    });\n    const txn4 = await ctc.sendrecv({\n      args: [v357, v366, v383],\n      evt_cnt: 0,\n      funcNum: 3,\n      lct: v384,\n      onlyIf: true,\n      out_tys: [],\n      pay: [v383, []],\n      sim_p: async txn4 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [],\n          secs: v390,\n          time: v389,\n          didSend: v76,\n          from: v388\n        } = txn4;\n        sim_r.txns.push({\n          amt: v383,\n          kind: 'to',\n          tok: undefined\n        });\n        const v393 = stdlib.addressEq(v366, v388);\n        stdlib.assert(v393, {\n          at: './index.rsh:94:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n        });\n        sim_r.txns.push({\n          amt: v383,\n          kind: 'from',\n          to: v357,\n          tok: undefined\n        });\n        sim_r.isHalt = false;\n        return sim_r;\n      },\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc10, ctc10, ctc0],\n      waitIfNotPresent: false\n    });\n    const {\n      data: [],\n      secs: v390,\n      time: v389,\n      didSend: v76,\n      from: v388\n    } = txn4;\n    ;\n    const v393 = stdlib.addressEq(v366, v388);\n    stdlib.assert(v393, {\n      at: './index.rsh:94:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n    });\n    stdlib.protect(ctc5, await interact.reportPayment(v383), {\n      at: './index.rsh:95:45:application',\n      fs: ['at ./index.rsh:95:7:application call to [unknown function] (defined at: ./index.rsh:95:20:function exp)'],\n      msg: 'reportPayment',\n      who: 'Sponsor'\n    });\n    ;\n    stdlib.protect(ctc5, await interact.reportTransfer(v383), {\n      at: './index.rsh:97:46:application',\n      fs: ['at ./index.rsh:97:7:application call to [unknown function] (defined at: ./index.rsh:97:20:function exp)'],\n      msg: 'reportTransfer',\n      who: 'Sponsor'\n    });\n    const txn5 = await ctc.recv({\n      didSend: false,\n      evt_cnt: 6,\n      funcNum: 4,\n      out_tys: [ctc6, ctc7, ctc8, ctc6, ctc0, ctc0],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n    });\n    const {\n      data: [v412, v413, v414, v415, v416, v417],\n      secs: v419,\n      time: v418,\n      didSend: v114,\n      from: v411\n    } = txn5;\n    ;\n    const v421 = stdlib.addressEq(v357, v411);\n    stdlib.assert(v421, {\n      at: './index.rsh:107:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n    });\n    const v422 = undefined;\n    const v423 = await txn5.getOutput('internal', 'v422', ctc9, v422);\n    const txn6 = await ctc.sendrecv({\n      args: [v357, v366, v416, v423],\n      evt_cnt: 0,\n      funcNum: 5,\n      lct: v418,\n      onlyIf: true,\n      out_tys: [],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:116:5:decimal', stdlib.UInt_max, 0), []],\n      sim_p: async txn6 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [],\n          secs: v428,\n          time: v427,\n          didSend: v127,\n          from: v426\n        } = txn6;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:116:5:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const v430 = stdlib.addressEq(v366, v426);\n        stdlib.assert(v430, {\n          at: './index.rsh:116:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n        });\n        sim_r.isHalt = false;\n        return sim_r;\n      },\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc10, ctc10, ctc0, ctc9],\n      waitIfNotPresent: false\n    });\n    const {\n      data: [],\n      secs: v428,\n      time: v427,\n      didSend: v127,\n      from: v426\n    } = txn6;\n    ;\n    const v430 = stdlib.addressEq(v366, v426);\n    stdlib.assert(v430, {\n      at: './index.rsh:116:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n    });\n    const v432 = {\n      metadata: v415,\n      name: v412,\n      supply: v416,\n      symbol: v413,\n      url: v414\n    };\n    stdlib.protect(ctc5, await interact.reportTokenMinted(v423, v432), {\n      at: './index.rsh:1:39:application',\n      fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:117:31:application call to \"liftedInteract\" (defined at: ./index.rsh:117:31:application)'],\n      msg: 'reportTokenMinted',\n      who: 'Sponsor'\n    });\n    const txn7 = await ctc.sendrecv({\n      args: [v357, v366, v416, v423],\n      evt_cnt: 0,\n      funcNum: 6,\n      lct: v427,\n      onlyIf: true,\n      out_tys: [],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:132:5:decimal', stdlib.UInt_max, 0), []],\n      sim_p: async txn7 => {\n        const sim_r = {\n          txns: [],\n          mapRefs: [],\n          mapsPrev: [],\n          mapsNext: []\n        };\n        const {\n          data: [],\n          secs: v435,\n          time: v434,\n          didSend: v138,\n          from: v433\n        } = txn7;\n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:132:5:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n        });\n        const v437 = stdlib.addressEq(v366, v433);\n        stdlib.assert(v437, {\n          at: './index.rsh:132:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n        });\n        const v438 = stdlib.addressEq(v366, v357);\n        const v440 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:121:40:decimal', stdlib.UInt_max, 40), v416);\n        const v441 = stdlib.div(v440, stdlib.checkedBigNumberify('./index.rsh:121:55:decimal', stdlib.UInt_max, 100));\n        const v442 = stdlib.ge(v416, v441);\n        const v443 = v438 ? v442 : false;\n\n        if (v443) {\n          const v449 = stdlib.sub(v416, v441);\n          sim_r.txns.push({\n            amt: v441,\n            kind: 'from',\n            to: v366,\n            tok: v423\n          });\n          sim_r.isHalt = false;\n        } else {\n          if (v442) {\n            const v634 = stdlib.sub(v416, v441);\n            sim_r.txns.push({\n              amt: v441,\n              kind: 'from',\n              to: v366,\n              tok: v423\n            });\n            sim_r.isHalt = false;\n          } else {\n            sim_r.isHalt = false;\n          }\n        }\n\n        return sim_r;\n      },\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc10, ctc10, ctc0, ctc9],\n      waitIfNotPresent: false\n    });\n    const {\n      data: [],\n      secs: v435,\n      time: v434,\n      didSend: v138,\n      from: v433\n    } = txn7;\n    ;\n    const v437 = stdlib.addressEq(v366, v433);\n    stdlib.assert(v437, {\n      at: './index.rsh:132:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n    });\n    const v438 = stdlib.addressEq(v366, v357);\n    const v440 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:121:40:decimal', stdlib.UInt_max, 40), v416);\n    const v441 = stdlib.div(v440, stdlib.checkedBigNumberify('./index.rsh:121:55:decimal', stdlib.UInt_max, 100));\n    const v442 = stdlib.ge(v416, v441);\n    const v443 = v438 ? v442 : false;\n\n    if (v443) {\n      const v449 = stdlib.sub(v416, v441);\n      ;\n      stdlib.protect(ctc5, await interact.didTransfer(true, v441), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:133:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n        msg: 'didTransfer',\n        who: 'Sponsor'\n      });\n      const txn8 = await ctc.recv({\n        didSend: false,\n        evt_cnt: 0,\n        funcNum: 7,\n        out_tys: [],\n        timeoutAt: undefined,\n        waitIfNotPresent: false\n      });\n      const {\n        data: [],\n        secs: v456,\n        time: v455,\n        didSend: v179,\n        from: v454\n      } = txn8;\n      ;\n      const v458 = stdlib.addressEq(v357, v454);\n      stdlib.assert(v458, {\n        at: './index.rsh:135:6:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Sponsor'\n      });\n      const v459 = stdlib.addressEq(v357, v357);\n      const v463 = stdlib.ge(v449, v441);\n      const v464 = v459 ? v463 : false;\n\n      if (v464) {\n        const v470 = stdlib.sub(v449, v441);\n        ;\n        const txn9 = await ctc.sendrecv({\n          args: [v357, v366, v416, v423, v470],\n          evt_cnt: 0,\n          funcNum: 8,\n          lct: v455,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n          sim_p: async txn9 => {\n            const sim_r = {\n              txns: [],\n              mapRefs: [],\n              mapsPrev: [],\n              mapsNext: []\n            };\n            const {\n              data: [],\n              secs: v477,\n              time: v476,\n              didSend: v220,\n              from: v475\n            } = txn9;\n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n            });\n            const v479 = stdlib.addressEq(v366, v475);\n            stdlib.assert(v479, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            sim_r.txns.push({\n              amt: v470,\n              kind: 'from',\n              to: v357,\n              tok: v423\n            });\n            const v487 = v476;\n\n            if (await (async () => {\n              return true;\n            })()) {\n              sim_r.isHalt = false;\n            } else {\n              stdlib.simTokenBurn(sim_r, v423, v416);\n              stdlib.simTokenDestroy(sim_r, v423);\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n              });\n              sim_r.isHalt = true;\n            }\n\n            return sim_r;\n          },\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n          waitIfNotPresent: false\n        });\n        const {\n          data: [],\n          secs: v477,\n          time: v476,\n          didSend: v220,\n          from: v475\n        } = txn9;\n        ;\n        const v479 = stdlib.addressEq(v366, v475);\n        stdlib.assert(v479, {\n          at: './index.rsh:139:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n        });\n        ;\n        stdlib.protect(ctc5, await interact.programEnded(), {\n          at: './index.rsh:141:44:application',\n          fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n          msg: 'programEnded',\n          who: 'Sponsor'\n        });\n        let v487 = v476;\n\n        while (await (async () => {\n          return true;\n        })()) {\n          const txn10 = await ctc.sendrecv({\n            args: [v366, v416, v423],\n            evt_cnt: 0,\n            funcNum: 10,\n            lct: v487,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n            sim_p: async txn10 => {\n              const sim_r = {\n                txns: [],\n                mapRefs: [],\n                mapsPrev: [],\n                mapsNext: []\n              };\n              const {\n                data: [],\n                secs: v499,\n                time: v498,\n                didSend: v239,\n                from: v497\n              } = txn10;\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v501 = stdlib.addressEq(v366, v497);\n              stdlib.assert(v501, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              const cv487 = v498;\n              await (async () => {\n                const v487 = cv487;\n\n                if (await (async () => {\n                  return true;\n                })()) {\n                  sim_r.isHalt = false;\n                } else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  });\n                  sim_r.isHalt = true;\n                }\n              })();\n              return sim_r;\n            },\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc0, ctc9],\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v499,\n            time: v498,\n            didSend: v239,\n            from: v497\n          } = txn10;\n          ;\n          const v501 = stdlib.addressEq(v366, v497);\n          stdlib.assert(v501, {\n            at: './index.rsh:146:7:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n          });\n          const cv487 = v498;\n          v487 = cv487;\n          continue;\n        }\n\n        undefined;\n        undefined;\n        stdlib.protect(ctc5, await interact.reportExit(), {\n          at: './index.rsh:152:42:application',\n          fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n          msg: 'reportExit',\n          who: 'Sponsor'\n        });\n        return;\n      } else {\n        if (v463) {\n          const v529 = stdlib.sub(v449, v441);\n          ;\n          const txn9 = await ctc.sendrecv({\n            args: [v357, v366, v416, v423, v529],\n            evt_cnt: 0,\n            funcNum: 11,\n            lct: v455,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: async txn9 => {\n              const sim_r = {\n                txns: [],\n                mapRefs: [],\n                mapsPrev: [],\n                mapsNext: []\n              };\n              const {\n                data: [],\n                secs: v536,\n                time: v535,\n                didSend: v220,\n                from: v534\n              } = txn9;\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v538 = stdlib.addressEq(v366, v534);\n              stdlib.assert(v538, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              sim_r.txns.push({\n                amt: v529,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              const v546 = v535;\n\n              if (await (async () => {\n                return true;\n              })()) {\n                sim_r.isHalt = false;\n              } else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              }\n\n              return sim_r;\n            },\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v536,\n            time: v535,\n            didSend: v220,\n            from: v534\n          } = txn9;\n          ;\n          const v538 = stdlib.addressEq(v366, v534);\n          stdlib.assert(v538, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n          });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n          });\n          let v546 = v535;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 13,\n              lct: v546,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn10 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v558,\n                  time: v557,\n                  didSend: v239,\n                  from: v556\n                } = txn10;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v560 = stdlib.addressEq(v366, v556);\n                stdlib.assert(v560, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                const cv546 = v557;\n                await (async () => {\n                  const v546 = cv546;\n\n                  if (await (async () => {\n                    return true;\n                  })()) {\n                    sim_r.isHalt = false;\n                  } else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                    });\n                    sim_r.isHalt = true;\n                  }\n                })();\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v558,\n              time: v557,\n              didSend: v239,\n              from: v556\n            } = txn10;\n            ;\n            const v560 = stdlib.addressEq(v366, v556);\n            stdlib.assert(v560, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            const cv546 = v557;\n            v546 = cv546;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n          });\n          return;\n        } else {\n          const txn9 = await ctc.sendrecv({\n            args: [v357, v366, v416, v423, v449],\n            evt_cnt: 0,\n            funcNum: 14,\n            lct: v455,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: async txn9 => {\n              const sim_r = {\n                txns: [],\n                mapRefs: [],\n                mapsPrev: [],\n                mapsNext: []\n              };\n              const {\n                data: [],\n                secs: v582,\n                time: v581,\n                didSend: v220,\n                from: v580\n              } = txn9;\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v584 = stdlib.addressEq(v366, v580);\n              stdlib.assert(v584, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              sim_r.txns.push({\n                amt: v449,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              const v592 = v581;\n\n              if (await (async () => {\n                return true;\n              })()) {\n                sim_r.isHalt = false;\n              } else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              }\n\n              return sim_r;\n            },\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v582,\n            time: v581,\n            didSend: v220,\n            from: v580\n          } = txn9;\n          ;\n          const v584 = stdlib.addressEq(v366, v580);\n          stdlib.assert(v584, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n          });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n          });\n          let v592 = v581;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 16,\n              lct: v592,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn10 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v604,\n                  time: v603,\n                  didSend: v239,\n                  from: v602\n                } = txn10;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v606 = stdlib.addressEq(v366, v602);\n                stdlib.assert(v606, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                const cv592 = v603;\n                await (async () => {\n                  const v592 = cv592;\n\n                  if (await (async () => {\n                    return true;\n                  })()) {\n                    sim_r.isHalt = false;\n                  } else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                    });\n                    sim_r.isHalt = true;\n                  }\n                })();\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v604,\n              time: v603,\n              didSend: v239,\n              from: v602\n            } = txn10;\n            ;\n            const v606 = stdlib.addressEq(v366, v602);\n            stdlib.assert(v606, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            const cv592 = v603;\n            v592 = cv592;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n          });\n          return;\n        }\n      }\n    } else {\n      if (v442) {\n        const v634 = stdlib.sub(v416, v441);\n        ;\n        stdlib.protect(ctc5, await interact.didTransfer(true, v441), {\n          at: './index.rsh:1:39:application',\n          fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:133:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n          msg: 'didTransfer',\n          who: 'Sponsor'\n        });\n        const txn8 = await ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 17,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n        });\n        const {\n          data: [],\n          secs: v641,\n          time: v640,\n          didSend: v179,\n          from: v639\n        } = txn8;\n        ;\n        const v643 = stdlib.addressEq(v357, v639);\n        stdlib.assert(v643, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n        });\n        const v644 = stdlib.addressEq(v357, v357);\n        const v648 = stdlib.ge(v634, v441);\n        const v649 = v644 ? v648 : false;\n\n        if (v649) {\n          const v655 = stdlib.sub(v634, v441);\n          ;\n          const txn9 = await ctc.sendrecv({\n            args: [v357, v366, v416, v423, v655],\n            evt_cnt: 0,\n            funcNum: 18,\n            lct: v640,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: async txn9 => {\n              const sim_r = {\n                txns: [],\n                mapRefs: [],\n                mapsPrev: [],\n                mapsNext: []\n              };\n              const {\n                data: [],\n                secs: v662,\n                time: v661,\n                didSend: v220,\n                from: v660\n              } = txn9;\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v664 = stdlib.addressEq(v366, v660);\n              stdlib.assert(v664, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              sim_r.txns.push({\n                amt: v655,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              const v672 = v661;\n\n              if (await (async () => {\n                return true;\n              })()) {\n                sim_r.isHalt = false;\n              } else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              }\n\n              return sim_r;\n            },\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v662,\n            time: v661,\n            didSend: v220,\n            from: v660\n          } = txn9;\n          ;\n          const v664 = stdlib.addressEq(v366, v660);\n          stdlib.assert(v664, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n          });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n          });\n          let v672 = v661;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 20,\n              lct: v672,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn10 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v684,\n                  time: v683,\n                  didSend: v239,\n                  from: v682\n                } = txn10;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v686 = stdlib.addressEq(v366, v682);\n                stdlib.assert(v686, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                const cv672 = v683;\n                await (async () => {\n                  const v672 = cv672;\n\n                  if (await (async () => {\n                    return true;\n                  })()) {\n                    sim_r.isHalt = false;\n                  } else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                    });\n                    sim_r.isHalt = true;\n                  }\n                })();\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v684,\n              time: v683,\n              didSend: v239,\n              from: v682\n            } = txn10;\n            ;\n            const v686 = stdlib.addressEq(v366, v682);\n            stdlib.assert(v686, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            const cv672 = v683;\n            v672 = cv672;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n          });\n          return;\n        } else {\n          if (v648) {\n            const v714 = stdlib.sub(v634, v441);\n            ;\n            const txn9 = await ctc.sendrecv({\n              args: [v357, v366, v416, v423, v714],\n              evt_cnt: 0,\n              funcNum: 21,\n              lct: v640,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn9 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v721,\n                  time: v720,\n                  didSend: v220,\n                  from: v719\n                } = txn9;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v723 = stdlib.addressEq(v366, v719);\n                stdlib.assert(v723, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                sim_r.txns.push({\n                  amt: v714,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                });\n                const v731 = v720;\n\n                if (await (async () => {\n                  return true;\n                })()) {\n                  sim_r.isHalt = false;\n                } else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  });\n                  sim_r.isHalt = true;\n                }\n\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v721,\n              time: v720,\n              didSend: v220,\n              from: v719\n            } = txn9;\n            ;\n            const v723 = stdlib.addressEq(v366, v719);\n            stdlib.assert(v723, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n            });\n            let v731 = v720;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 23,\n                lct: v731,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: async txn10 => {\n                  const sim_r = {\n                    txns: [],\n                    mapRefs: [],\n                    mapsPrev: [],\n                    mapsNext: []\n                  };\n                  const {\n                    data: [],\n                    secs: v743,\n                    time: v742,\n                    didSend: v239,\n                    from: v741\n                  } = txn10;\n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                  });\n                  const v745 = stdlib.addressEq(v366, v741);\n                  stdlib.assert(v745, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                  });\n                  const cv731 = v742;\n                  await (async () => {\n                    const v731 = cv731;\n\n                    if (await (async () => {\n                      return true;\n                    })()) {\n                      sim_r.isHalt = false;\n                    } else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                      });\n                      sim_r.isHalt = true;\n                    }\n                  })();\n                  return sim_r;\n                },\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v743,\n                time: v742,\n                didSend: v239,\n                from: v741\n              } = txn10;\n              ;\n              const v745 = stdlib.addressEq(v366, v741);\n              stdlib.assert(v745, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              const cv731 = v742;\n              v731 = cv731;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n            });\n            return;\n          } else {\n            const txn9 = await ctc.sendrecv({\n              args: [v357, v366, v416, v423, v634],\n              evt_cnt: 0,\n              funcNum: 24,\n              lct: v640,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn9 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v767,\n                  time: v766,\n                  didSend: v220,\n                  from: v765\n                } = txn9;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v769 = stdlib.addressEq(v366, v765);\n                stdlib.assert(v769, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                sim_r.txns.push({\n                  amt: v634,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                });\n                const v777 = v766;\n\n                if (await (async () => {\n                  return true;\n                })()) {\n                  sim_r.isHalt = false;\n                } else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  });\n                  sim_r.isHalt = true;\n                }\n\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v767,\n              time: v766,\n              didSend: v220,\n              from: v765\n            } = txn9;\n            ;\n            const v769 = stdlib.addressEq(v366, v765);\n            stdlib.assert(v769, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n            });\n            let v777 = v766;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 26,\n                lct: v777,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: async txn10 => {\n                  const sim_r = {\n                    txns: [],\n                    mapRefs: [],\n                    mapsPrev: [],\n                    mapsNext: []\n                  };\n                  const {\n                    data: [],\n                    secs: v789,\n                    time: v788,\n                    didSend: v239,\n                    from: v787\n                  } = txn10;\n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                  });\n                  const v791 = stdlib.addressEq(v366, v787);\n                  stdlib.assert(v791, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                  });\n                  const cv777 = v788;\n                  await (async () => {\n                    const v777 = cv777;\n\n                    if (await (async () => {\n                      return true;\n                    })()) {\n                      sim_r.isHalt = false;\n                    } else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                      });\n                      sim_r.isHalt = true;\n                    }\n                  })();\n                  return sim_r;\n                },\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v789,\n                time: v788,\n                didSend: v239,\n                from: v787\n              } = txn10;\n              ;\n              const v791 = stdlib.addressEq(v366, v787);\n              stdlib.assert(v791, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              const cv777 = v788;\n              v777 = cv777;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n            });\n            return;\n          }\n        }\n      } else {\n        const txn8 = await ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 27,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n        });\n        const {\n          data: [],\n          secs: v813,\n          time: v812,\n          didSend: v179,\n          from: v811\n        } = txn8;\n        ;\n        const v815 = stdlib.addressEq(v357, v811);\n        stdlib.assert(v815, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n        });\n        const v816 = stdlib.addressEq(v357, v357);\n        const v821 = v816 ? v442 : false;\n\n        if (v821) {\n          const v827 = stdlib.sub(v416, v441);\n          ;\n          const txn9 = await ctc.sendrecv({\n            args: [v357, v366, v416, v423, v827],\n            evt_cnt: 0,\n            funcNum: 28,\n            lct: v812,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: async txn9 => {\n              const sim_r = {\n                txns: [],\n                mapRefs: [],\n                mapsPrev: [],\n                mapsNext: []\n              };\n              const {\n                data: [],\n                secs: v834,\n                time: v833,\n                didSend: v220,\n                from: v832\n              } = txn9;\n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n              });\n              const v836 = stdlib.addressEq(v366, v832);\n              stdlib.assert(v836, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              sim_r.txns.push({\n                amt: v827,\n                kind: 'from',\n                to: v357,\n                tok: v423\n              });\n              const v844 = v833;\n\n              if (await (async () => {\n                return true;\n              })()) {\n                sim_r.isHalt = false;\n              } else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                });\n                sim_r.isHalt = true;\n              }\n\n              return sim_r;\n            },\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n          });\n          const {\n            data: [],\n            secs: v834,\n            time: v833,\n            didSend: v220,\n            from: v832\n          } = txn9;\n          ;\n          const v836 = stdlib.addressEq(v366, v832);\n          stdlib.assert(v836, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n          });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n          });\n          let v844 = v833;\n\n          while (await (async () => {\n            return true;\n          })()) {\n            const txn10 = await ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 30,\n              lct: v844,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn10 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v856,\n                  time: v855,\n                  didSend: v239,\n                  from: v854\n                } = txn10;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v858 = stdlib.addressEq(v366, v854);\n                stdlib.assert(v858, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                const cv844 = v855;\n                await (async () => {\n                  const v844 = cv844;\n\n                  if (await (async () => {\n                    return true;\n                  })()) {\n                    sim_r.isHalt = false;\n                  } else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                    });\n                    sim_r.isHalt = true;\n                  }\n                })();\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v856,\n              time: v855,\n              didSend: v239,\n              from: v854\n            } = txn10;\n            ;\n            const v858 = stdlib.addressEq(v366, v854);\n            stdlib.assert(v858, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            const cv844 = v855;\n            v844 = cv844;\n            continue;\n          }\n\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n          });\n          return;\n        } else {\n          if (v442) {\n            const v886 = stdlib.sub(v416, v441);\n            ;\n            const txn9 = await ctc.sendrecv({\n              args: [v357, v366, v416, v423, v886],\n              evt_cnt: 0,\n              funcNum: 31,\n              lct: v812,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn9 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v893,\n                  time: v892,\n                  didSend: v220,\n                  from: v891\n                } = txn9;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v895 = stdlib.addressEq(v366, v891);\n                stdlib.assert(v895, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                sim_r.txns.push({\n                  amt: v886,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                });\n                const v903 = v892;\n\n                if (await (async () => {\n                  return true;\n                })()) {\n                  sim_r.isHalt = false;\n                } else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  });\n                  sim_r.isHalt = true;\n                }\n\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v893,\n              time: v892,\n              didSend: v220,\n              from: v891\n            } = txn9;\n            ;\n            const v895 = stdlib.addressEq(v366, v891);\n            stdlib.assert(v895, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n            });\n            let v903 = v892;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 33,\n                lct: v903,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: async txn10 => {\n                  const sim_r = {\n                    txns: [],\n                    mapRefs: [],\n                    mapsPrev: [],\n                    mapsNext: []\n                  };\n                  const {\n                    data: [],\n                    secs: v915,\n                    time: v914,\n                    didSend: v239,\n                    from: v913\n                  } = txn10;\n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                  });\n                  const v917 = stdlib.addressEq(v366, v913);\n                  stdlib.assert(v917, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                  });\n                  const cv903 = v914;\n                  await (async () => {\n                    const v903 = cv903;\n\n                    if (await (async () => {\n                      return true;\n                    })()) {\n                      sim_r.isHalt = false;\n                    } else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                      });\n                      sim_r.isHalt = true;\n                    }\n                  })();\n                  return sim_r;\n                },\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v915,\n                time: v914,\n                didSend: v239,\n                from: v913\n              } = txn10;\n              ;\n              const v917 = stdlib.addressEq(v366, v913);\n              stdlib.assert(v917, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              const cv903 = v914;\n              v903 = cv903;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n            });\n            return;\n          } else {\n            const txn9 = await ctc.sendrecv({\n              args: [v357, v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 34,\n              lct: v812,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: async txn9 => {\n                const sim_r = {\n                  txns: [],\n                  mapRefs: [],\n                  mapsPrev: [],\n                  mapsNext: []\n                };\n                const {\n                  data: [],\n                  secs: v939,\n                  time: v938,\n                  didSend: v220,\n                  from: v937\n                } = txn9;\n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                });\n                const v941 = stdlib.addressEq(v366, v937);\n                stdlib.assert(v941, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                });\n                sim_r.txns.push({\n                  amt: v416,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                });\n                const v949 = v938;\n\n                if (await (async () => {\n                  return true;\n                })()) {\n                  sim_r.isHalt = false;\n                } else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                  });\n                  sim_r.isHalt = true;\n                }\n\n                return sim_r;\n              },\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n            });\n            const {\n              data: [],\n              secs: v939,\n              time: v938,\n              didSend: v220,\n              from: v937\n            } = txn9;\n            ;\n            const v941 = stdlib.addressEq(v366, v937);\n            stdlib.assert(v941, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n            });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n            });\n            let v949 = v938;\n\n            while (await (async () => {\n              return true;\n            })()) {\n              const txn10 = await ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 36,\n                lct: v949,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: async txn10 => {\n                  const sim_r = {\n                    txns: [],\n                    mapRefs: [],\n                    mapsPrev: [],\n                    mapsNext: []\n                  };\n                  const {\n                    data: [],\n                    secs: v961,\n                    time: v960,\n                    didSend: v239,\n                    from: v959\n                  } = txn10;\n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                  });\n                  const v963 = stdlib.addressEq(v366, v959);\n                  stdlib.assert(v963, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                  });\n                  const cv949 = v960;\n                  await (async () => {\n                    const v949 = cv949;\n\n                    if (await (async () => {\n                      return true;\n                    })()) {\n                      sim_r.isHalt = false;\n                    } else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                      });\n                      sim_r.isHalt = true;\n                    }\n                  })();\n                  return sim_r;\n                },\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n              });\n              const {\n                data: [],\n                secs: v961,\n                time: v960,\n                didSend: v239,\n                from: v959\n              } = txn10;\n              ;\n              const v963 = stdlib.addressEq(v366, v959);\n              stdlib.assert(v963, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n              });\n              const cv949 = v960;\n              v949 = cv949;\n              continue;\n            }\n\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n            });\n            return;\n          }\n        }\n      }\n    }\n  } else {\n    stdlib.protect(ctc5, await interact.reportCancellation(), {\n      at: './index.rsh:79:52:application',\n      fs: ['at ./index.rsh:79:9:application call to [unknown function] (defined at: ./index.rsh:79:22:function exp)'],\n      msg: 'reportCancellation',\n      who: 'Sponsor'\n    });\n    stdlib.protect(ctc5, await interact.reportExit(), {\n      at: './index.rsh:80:44:application',\n      fs: ['at ./index.rsh:80:9:application call to [unknown function] (defined at: ./index.rsh:80:22:function exp)'],\n      msg: 'reportExit',\n      who: 'Sponsor'\n    });\n    return;\n  }\n}\n_c2 = Sponsor;\n;\nconst _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\nint 8\nextract_uint64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 80\n==\nassert\ndup\nstore 255\npop\n// \"CheckPay\"\n// \"./index.rsh:67:6:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:67:6:dot\"\n// \"[]\"\ntxn Sender\nint 1\nbzero\ndig 1\nextract 0 32\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l2_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nstore 255\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 9\n==\nassert\ndup\nstore 254\npop\n// \"CheckPay\"\n// \"./index.rsh:76:5:dot\"\n// \"[]\"\nload 254\nextract 8 1\nbtoi\nbz l3_ifF\nload 255\ntxn Sender\nconcat\nint 1\nbzero\ndig 1\nextract 0 64\napp_global_put\npop\nint 2\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl3_ifF:\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl4_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl2_afterHandler1:\n// Handler 2\ndup\nint 2\n==\nbz l5_afterHandler2\npop\n// check step\nint 2\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 253\npop\n// \"CheckPay\"\n// \"./index.rsh:90:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:90:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 72\napp_global_put\npop\nint 3\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl5_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l6_afterHandler3\npop\n// check step\nint 3\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:94:5:dot\"\n// \"[]\"\nload 253\ndup\nbz l7_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl7_checkTxnK:\npop\n// Just \"sender correct\"\n// \"./index.rsh:94:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 253\ndup\nbz l8_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 255\nitxn_field Receiver\nitxn_submit\nint 0\nl8_makeTxnK:\npop\nload 255\nload 254\nconcat\nint 1\nbzero\ndig 1\nextract 0 64\napp_global_put\npop\nint 4\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl6_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l9_afterHandler4\npop\n// check step\nint 4\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 184\n==\nassert\ndup\nextract 0 32\nstore 253\ndup\nextract 32 8\nstore 252\ndup\nextract 40 96\nstore 251\ndup\nextract 136 32\nstore 250\ndup\nint 168\nextract_uint64\nstore 249\ndup\nint 176\nextract_uint64\nstore 248\npop\n// \"CheckPay\"\n// \"./index.rsh:107:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:107:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nint 100000\ndup\nbz l10_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl10_checkTxnK:\npop\nitxn_begin\nint acfg\nitxn_field TypeEnum\nload 249\nitxn_field ConfigAssetTotal\nint 6\nitxn_field ConfigAssetDecimals\nload 252\nitxn_field ConfigAssetUnitName\nload 253\nitxn_field ConfigAssetName\nload 251\nitxn_field ConfigAssetURL\nload 250\nitxn_field ConfigAssetMetadataHash\nglobal CurrentApplicationAddress\nitxn_field ConfigAssetManager\nitxn_submit\nitxn CreatedAssetID\nstore 247\nbyte base64(AAAAAAAAAaY=)\nload 247\nitob\nconcat\nlog // 16\nload 247\nstore 246\nload 255\nload 254\nconcat\nload 249\nitob\nconcat\nload 246\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 80\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_afterHandler4:\n// Handler 5\ndup\nint 5\n==\nbz l11_afterHandler5\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:116:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:116:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 80\napp_global_put\npop\nint 6\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl11_afterHandler5:\n// Handler 6\ndup\nint 6\n==\nbz l12_afterHandler6\npop\n// check step\nint 6\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:132:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:132:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nint 40\nload 253\n*\nint 100\n/\nstore 251\nload 253\nload 251\n>=\nstore 250\nload 254\nload 255\n==\nload 250\n&&\nbz l13_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l14_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 254\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl14_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 96\napp_global_put\npop\nint 7\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl13_ifF:\nload 250\nbz l15_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l16_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 254\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl16_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 96\napp_global_put\npop\nint 20\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl15_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob // bool\nsubstring 7 8\nconcat\nint 1\nbzero\ndig 1\nextract 0 89\napp_global_put\npop\nint 33\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl12_afterHandler6:\n// Handler 7\ndup\nint 7\n==\nbz l17_afterHandler7\npop\n// check step\nint 7\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 250\nload 251\n>=\nstore 249\nload 255\ndup\n==\nload 249\n&&\nbz l18_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l19_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl19_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 8\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl18_ifF:\nload 249\nbz l20_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l21_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl21_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 12\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl20_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 250\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 16\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl17_afterHandler7:\n// Handler 8\ndup\nint 8\n==\nbz l22_afterHandler8\npop\n// check step\nint 8\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l23_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl23_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody9\nl22_afterHandler8:\nl24_afterHandler9:\n// Handler 10\ndup\nint 10\n==\nbz l25_afterHandler10\npop\n// check step\nint 11\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody9\nl25_afterHandler10:\n// Handler 11\ndup\nint 11\n==\nbz l26_afterHandler11\npop\n// check step\nint 12\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l27_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl27_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody12\nl26_afterHandler11:\nl28_afterHandler12:\n// Handler 13\ndup\nint 13\n==\nbz l29_afterHandler13\npop\n// check step\nint 15\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody12\nl29_afterHandler13:\n// Handler 14\ndup\nint 14\n==\nbz l30_afterHandler14\npop\n// check step\nint 16\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l31_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl31_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody15\nl30_afterHandler14:\nl32_afterHandler15:\n// Handler 16\ndup\nint 16\n==\nbz l33_afterHandler16\npop\n// check step\nint 19\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody15\nl33_afterHandler16:\n// Handler 17\ndup\nint 17\n==\nbz l34_afterHandler17\npop\n// check step\nint 20\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 250\nload 251\n>=\nstore 249\nload 255\ndup\n==\nload 249\n&&\nbz l35_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l36_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl36_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 21\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl35_ifF:\nload 249\nbz l37_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l38_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl38_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 25\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl37_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 250\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 29\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl34_afterHandler17:\n// Handler 18\ndup\nint 18\n==\nbz l39_afterHandler18\npop\n// check step\nint 21\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l40_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl40_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody19\nl39_afterHandler18:\nl41_afterHandler19:\n// Handler 20\ndup\nint 20\n==\nbz l42_afterHandler20\npop\n// check step\nint 24\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody19\nl42_afterHandler20:\n// Handler 21\ndup\nint 21\n==\nbz l43_afterHandler21\npop\n// check step\nint 25\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l44_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl44_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody22\nl43_afterHandler21:\nl45_afterHandler22:\n// Handler 23\ndup\nint 23\n==\nbz l46_afterHandler23\npop\n// check step\nint 28\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody22\nl46_afterHandler23:\n// Handler 24\ndup\nint 24\n==\nbz l47_afterHandler24\npop\n// check step\nint 29\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l48_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl48_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody25\nl47_afterHandler24:\nl49_afterHandler25:\n// Handler 26\ndup\nint 26\n==\nbz l50_afterHandler26\npop\n// check step\nint 32\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody25\nl50_afterHandler26:\n// Handler 27\ndup\nint 27\n==\nbz l51_afterHandler27\npop\n// check step\nint 33\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nextract 88 1\nbtoi\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\ndup\n==\nload 250\n&&\nbz l52_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l53_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl53_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 34\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl52_ifF:\nload 250\nbz l54_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l55_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl55_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 38\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl54_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 80\napp_global_put\npop\nint 42\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl51_afterHandler27:\n// Handler 28\ndup\nint 28\n==\nbz l56_afterHandler28\npop\n// check step\nint 34\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l57_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl57_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody29\nl56_afterHandler28:\nl58_afterHandler29:\n// Handler 30\ndup\nint 30\n==\nbz l59_afterHandler30\npop\n// check step\nint 37\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody29\nl59_afterHandler30:\n// Handler 31\ndup\nint 31\n==\nbz l60_afterHandler31\npop\n// check step\nint 38\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l61_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl61_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody32\nl60_afterHandler31:\nl62_afterHandler32:\n// Handler 33\ndup\nint 33\n==\nbz l63_afterHandler33\npop\n// check step\nint 41\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody32\nl63_afterHandler33:\n// Handler 34\ndup\nint 34\n==\nbz l64_afterHandler34\npop\n// check step\nint 42\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 253\ndup\nbz l65_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl65_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody35\nl64_afterHandler34:\nl66_afterHandler35:\n// Handler 36\ndup\nint 36\n==\nbz l67_afterHandler36\npop\n// check step\nint 45\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody35\nl67_afterHandler36:\nint 0\nassert\nloopBody9:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 11\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody12:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 15\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody15:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 19\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody19:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 24\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody22:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 28\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody25:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 32\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody29:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 37\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody32:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 41\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody35:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 45\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 96,\n  unsupported: [],\n  version: 6\n};\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_contractDuration\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_fundraisingGoal\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectDetails\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectName\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_share\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T2\",\n                \"name\": \"v358\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_contractDuration\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_fundraisingGoal\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectDetails\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectName\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_share\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T2\",\n                \"name\": \"v358\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_amt\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_contribute\",\n                    \"type\": \"bool\"\n                  }\n                ],\n                \"internalType\": \"struct T6\",\n                \"name\": \"v367\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e13\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e14\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e16\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e17\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e18\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v383\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e20\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e21\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e23\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e24\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e26\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e27\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e28\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e30\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e31\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e33\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e34\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e36\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v412\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes8\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes8\"\n                  }\n                ],\n                \"internalType\": \"struct T16\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem2\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T17\",\n                \"name\": \"v414\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v415\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v416\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v417\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"v0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_reach_oe_v422\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_amt\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_contribute\",\n                    \"type\": \"bool\"\n                  }\n                ],\n                \"internalType\": \"struct T6\",\n                \"name\": \"v367\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m13\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m14\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m16\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m17\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m18\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v383\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m20\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m21\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m23\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m24\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m26\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m27\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m28\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m30\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m31\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m33\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m34\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m36\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v412\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes8\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes8\"\n                  }\n                ],\n                \"internalType\": \"struct T16\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem2\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T17\",\n                \"name\": \"v414\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v415\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v416\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v417\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060405260405162005be338038062005be38339810160408190526200002691620002a4565b60008055436003556040805182518152602080840151518051828401529081015182840152808301515163ffffffff199081166060808501919091528201515116608080840191909152015160a082015290517fe9c49e48addcb7624d04df619c4e8b0d25e9e4534011f72495595fa65f2e8e709181900360c00190a1620000b13415600762000102565b6040805160208082018352338083526001600081905543905583519182015290910160405160208183030381529060405260029080519060200190620000f99291906200012c565b505050620003a9565b81620001285760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b8280546200013a906200036c565b90600052602060002090601f0160209004810192826200015e5760008555620001a9565b82601f106200017957805160ff1916838001178555620001a9565b82800160010185558215620001a9579182015b82811115620001a95782518255916020019190600101906200018c565b50620001b7929150620001bb565b5090565b5b80821115620001b75760008155600101620001bc565b604051602081016001600160401b03811182821017156200020357634e487b7160e01b600052604160045260246000fd5b60405290565b60405160a081016001600160401b03811182821017156200020357634e487b7160e01b600052604160045260246000fd5b6000602082840312156200024d57600080fd5b604051602081016001600160401b03811182821017156200027e57634e487b7160e01b600052604160045260246000fd5b6040528251909150819063ffffffff19811681146200029c57600080fd5b905292915050565b600081830360c0811215620002b857600080fd5b604080519081016001600160401b0381118282101715620002e957634e487b7160e01b600052604160045260246000fd5b6040528351815260a0601f19830112156200030357600080fd5b6200030d620001d2565b91506200031962000209565b60208501518152604085015160208201526200033986606087016200023a565b60408201526200034d86608087016200023a565b606082015260a094909401516080850152928152602083015250919050565b600181811c908216806200038157607f821691505b60208210811415620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b61582a80620003b96000396000f3fe608060405260043610620001df5760003560e01c80638a46175311620000ff578063ab53f2c6116200009b578063e00acef11162000069578063e00acef1146200045e578063e533a29d1462000475578063f19b4352146200048c578063f605335014620004a357005b8063ab53f2c614620003f1578063b18adbd61462000419578063bf2c5b241462000430578063c7980037146200044757005b80638ebe74ee11620000d95780638ebe74ee1462000395578063907f2d7a14620003ac5780639f25181014620003c3578063a035b2e014620003da57005b80638a46175314620003505780638b9fadc814620003675780638e314769146200037e57005b80634e9deb45116200017b578063681598b31162000149578063681598b314620002f457806373b4522c146200030b57806382a6a447146200032257806383230757146200033957005b80634e9deb4514620002985780635471c5a814620002af578063617e78ba14620002c657806364395e4814620002dd57005b80631e93b0f111620001b95780631e93b0f1146200022e5780633711704a146200025357806342414754146200026a57806345f70396146200028157005b806309fcce8714620001e95780630f6640cf14620002005780631b26a4bf146200021757005b36620001e757005b005b620001e7620001fa36600462003fcd565b620004ba565b620001e76200021136600462003fcd565b62000645565b620001e76200022836600462003fcd565b620007cb565b3480156200023b57600080fd5b506003545b6040519081526020015b60405180910390f35b620001e76200026436600462003fec565b6200096d565b620001e76200027b36600462003fcd565b62000b40565b620001e76200029236600462003fcd565b62000cc6565b620001e7620002a936600462003fcd565b62000e8e565b620001e7620002c036600462003fcd565b62001030565b620001e7620002d736600462003fcd565b620011b6565b620001e7620002ee36600462003fcd565b62001358565b620001e76200030536600462003fcd565b620014de565b620001e76200031c36600462003fcd565b62001680565b620001e76200033336600462003fcd565b6200185d565b3480156200034657600080fd5b5060015462000240565b620001e76200036136600462003fff565b620019e3565b620001e76200037836600462003fcd565b62001cfe565b620001e76200038f36600462003fcd565b62001ea0565b620001e7620003a636600462003fcd565b62002049565b620001e7620003bd36600462003fcd565b62002372565b620001e7620003d436600462003fcd565b62002514565b620001e7620003eb36600462003fcd565b62002861565b348015620003fe57600080fd5b506200040962002a03565b6040516200024a92919062004070565b620001e76200042a36600462003fcd565b62002aa8565b620001e76200044136600462003fcd565b62002c2e565b620001e76200045836600462003fcd565b62002f7b565b620001e76200046f36600462003fcd565b6200338b565b620001e76200048636600462003fcd565b62003511565b620001e76200049d36600462003fcd565b620036b3565b620001e7620004b436600462003fcd565b62003839565b620004cc602d600054146071620039db565b620004e981351580620004e157506001548235145b6072620039db565b600080805560028054620004fd9062004093565b80601f01602080910402602001604051908101604052809291908181526020018280546200052b9062004093565b80156200057c5780601f1062000550576101008083540402835291602001916200057c565b820191906000526020600020905b8154815290600101906020018083116200055e57829003601f168201915b50505050508060200190518101906200059691906200411f565b90507ff56199befcf0b68513215a2a85be1fb4fca1d0e4a1638730935fdb01bc191ac382604051620005c991906200419d565b60405180910390a1620005df3415606f620039db565b8051620005f9906001600160a01b031633146070620039db565b6200060362003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003a02565b505050565b620006576029600054146069620039db565b62000674813515806200066c57506001548235145b606a620039db565b600080805560028054620006889062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620006b69062004093565b8015620007075780601f10620006db5761010080835404028352916020019162000707565b820191906000526020600020905b815481529060010190602001808311620006e957829003601f168201915b50505050508060200190518101906200072191906200411f565b90507f8efda6143ea80087ba44ea5c132867e37dde35ab01b6c0e6eecefc253da97158826040516200075491906200419d565b60405180910390a16200076a34156067620039db565b805162000784906001600160a01b031633146068620039db565b6200078e62003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003a82565b620007dd6019600054146049620039db565b620007fa81351580620007f257506001548235145b604a620039db565b6000808055600280546200080e9062004093565b80601f01602080910402602001604051908101604052809291908181526020018280546200083c9062004093565b80156200088d5780601f1062000861576101008083540402835291602001916200088d565b820191906000526020600020905b8154815290600101906020018083116200086f57829003601f168201915b5050505050806020019051810190620008a791906200424c565b90507fc994af732d7092e2f923c670a05dd06dcc39938b89e46c484127f784f4b213a182604051620008da91906200419d565b60405180910390a1620008f034156047620039db565b60208101516200090d906001600160a01b031633146048620039db565b6200092681606001518260000151836080015162003adc565b6200093062003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003af3565b6200097f6001600054146009620039db565b6200099c813515806200099457506001548235145b600a620039db565b600080805560028054620009b09062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620009de9062004093565b801562000a2f5780601f1062000a035761010080835404028352916020019162000a2f565b820191906000526020600020905b81548152906001019060200180831162000a1157829003601f168201915b505050505080602001905181019062000a4991906200426b565b90507f9ea6e8c055e86924b5db5f9635a4bdc97514ead0c112e90b6cc9dedc308452d48260405162000a7c9190620042c7565b60405180910390a162000a9234156008620039db565b62000aa46060830160408401620042e1565b1562000b2457604080518082019091526000808252602082015281516001600160a01b0390811680835233602080850191825260026000554360015560408051918201939093529051909216908201526060015b6040516020818303038152906040526002908051906020019062000b1e92919062003ebe565b50505050565b6000808055600181905562000b3c9060029062003f4d565b5050565b62000b526018600054146045620039db565b62000b6f8135158062000b6757506001548235145b6046620039db565b60008080556002805462000b839062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb19062004093565b801562000c025780601f1062000bd65761010080835404028352916020019162000c02565b820191906000526020600020905b81548152906001019060200180831162000be457829003601f168201915b505050505080602001905181019062000c1c91906200411f565b90507f427a9e8a08f0cc8f967a8e2dce4ce18b8f4de10aac559fe4af87cd3e759e131d8260405162000c4f91906200419d565b60405180910390a162000c6534156043620039db565b805162000c7f906001600160a01b031633146044620039db565b62000c8962003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003b4d565b62000cd8600260005414600d620039db565b62000cf58135158062000ced57506001548235145b600e620039db565b60008080556002805462000d099062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462000d379062004093565b801562000d885780601f1062000d5c5761010080835404028352916020019162000d88565b820191906000526020600020905b81548152906001019060200180831162000d6a57829003601f168201915b505050505080602001905181019062000da2919062004301565b6040805184358152602080860135908201529192507fa8de7fa57e96b1b344028051973cc20a5275cd64ccacf1c4ebc1e38bc2945cb6910160405180910390a162000df03415600b620039db565b805162000e0a906001600160a01b03163314600c620039db565b60408051606080820183526000808352602080840182815284860183815287516001600160a01b0390811680885289850151821684528a850135835260039095554360015587518085019590955291519091168387015251828401528451808303909301835260809091019093528051919262000b1e926002929091019062003ebe565b62000ea0602260005414605d620039db565b62000ebd8135158062000eb557506001548235145b605e620039db565b60008080556002805462000ed19062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462000eff9062004093565b801562000f505780601f1062000f245761010080835404028352916020019162000f50565b820191906000526020600020905b81548152906001019060200180831162000f3257829003601f168201915b505050505080602001905181019062000f6a91906200424c565b90507fbed89dd74cae374ab40e56da43251935a72e507a975ba8088fa10a6f3a45a6448260405162000f9d91906200419d565b60405180910390a162000fb33415605b620039db565b602081015162000fd0906001600160a01b03163314605c620039db565b62000fe981606001518260000151836080015162003adc565b62000ff362003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003ba7565b62001042600f600054146031620039db565b6200105f813515806200105757506001548235145b6032620039db565b600080805560028054620010739062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620010a19062004093565b8015620010f25780601f10620010c657610100808354040283529160200191620010f2565b820191906000526020600020905b815481529060010190602001808311620010d457829003601f168201915b50505050508060200190518101906200110c91906200411f565b90507f07e6cc8e2fc82a9375e0bae2c8fb95cb33ae4f7121cc887b7bcd23b343d8ec05826040516200113f91906200419d565b60405180910390a1620011553415602f620039db565b80516200116f906001600160a01b031633146030620039db565b6200117962003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003c01565b620011c8602a60005414606d620039db565b620011e581351580620011dd57506001548235145b606e620039db565b600080805560028054620011f99062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620012279062004093565b8015620012785780601f106200124c5761010080835404028352916020019162001278565b820191906000526020600020905b8154815290600101906020018083116200125a57829003601f168201915b505050505080602001905181019062001292919062004370565b90507f4f0186e9075baafc83f7eee3c4df6a72d4de867fa2569e7e3631da47c772903482604051620012c591906200419d565b60405180910390a1620012db3415606b620039db565b6020810151620012f8906001600160a01b03163314606c620039db565b6200131181606001518260000151836040015162003adc565b6200131b62003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003a02565b6200136a6020600054146055620039db565b62001387813515806200137f57506001548235145b6056620039db565b6000808055600280546200139b9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620013c99062004093565b80156200141a5780601f10620013ee576101008083540402835291602001916200141a565b820191906000526020600020905b815481529060010190602001808311620013fc57829003601f168201915b50505050508060200190518101906200143491906200411f565b90507f2b7e9b090ddec9424c868da5fc141d6fe9bae66d67fdb80e00f08d3b57ac325c826040516200146791906200419d565b60405180910390a16200147d34156053620039db565b805162001497906001600160a01b031633146054620039db565b620014a162003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003c5b565b620014f06026600054146065620039db565b6200150d813515806200150557506001548235145b6066620039db565b600080805560028054620015219062004093565b80601f01602080910402602001604051908101604052809291908181526020018280546200154f9062004093565b8015620015a05780601f106200157457610100808354040283529160200191620015a0565b820191906000526020600020905b8154815290600101906020018083116200158257829003601f168201915b5050505050806020019051810190620015ba91906200424c565b90507fd0734acd0adcce68cacb1df6655f24aef982e646fa3b47a57745808e833fc81582604051620015ed91906200419d565b60405180910390a16200160334156063620039db565b602081015162001620906001600160a01b031633146064620039db565b6200163981606001518260000151836080015162003adc565b6200164362003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003a82565b620016926003600054146011620039db565b620016af81351580620016a757506001548235145b6012620039db565b600080805560028054620016c39062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620016f19062004093565b8015620017425780601f10620017165761010080835404028352916020019162001742565b820191906000526020600020905b8154815290600101906020018083116200172457829003601f168201915b50505050508060200190518101906200175c9190620043fc565b90507f25e9400ad0fddc8c71fc4eb2845b4d0fc13ca66f2a17e1b7e0f544d275234c09826040516200178f91906200419d565b60405180910390a1620017aa81604001513414600f620039db565b6020810151620017c7906001600160a01b031633146010620039db565b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801562001805573d6000803e3d6000fd5b50604080518082019091526000808252602082015281516001600160a01b0390811680835260208085015183168185019081526004600055436001556040805192830193909352519092169082015260600162000af8565b6200186f6025600054146061620039db565b6200188c813515806200188457506001548235145b6062620039db565b600080805560028054620018a09062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620018ce9062004093565b80156200191f5780601f10620018f3576101008083540402835291602001916200191f565b820191906000526020600020905b8154815290600101906020018083116200190157829003601f168201915b50505050508060200190518101906200193991906200411f565b90507f5a27435c7f32d712493066de1d9824e76f41cceef3f7574d14d3e5383ae9eda5826040516200196c91906200419d565b60405180910390a1620019823415605f620039db565b80516200199c906001600160a01b031633146060620039db565b620019a662003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003ba7565b620019f56004600054146015620039db565b62001a128135158062001a0a57506001548235145b6016620039db565b60008080556002805462001a269062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462001a549062004093565b801562001aa55780601f1062001a795761010080835404028352916020019162001aa5565b820191906000526020600020905b81548152906001019060200180831162001a8757829003601f168201915b505050505080602001905181019062001abf919062004301565b60408051808201909152600080825260208201529091507f982860f8d27e8cc7c0ebb9e4cd916f47e6690c6b4a3744b1369dcf0abfce34f48360405162001b07919062004466565b60405180910390a162001b1d34156013620039db565b815162001b37906001600160a01b031633146014620039db565b60408051602085810135908201520160408051601f1981840301815291815262001b689060608601908601620044da565b6040516001600160c01b0319909116602082015260280160408051808303601f1901815282825260608781013560208501526080808901359385019390935260a088013590840152910160408051808303601f1901815282825260c0880135602084015291016040516020818303038152906040528660200160c00135601260405162001bf59062003f8f565b62001c0696959493929190620044f8565b604051809103906000f08015801562001c23573d6000803e3d6000fd5b506001600160a01b031680825260208083018290526040519182527f528b3f8941a843fa23117200e61a4350675a25723ff95a96c24db55eb0a93cb6910160405180910390a160408051608081018252600080825260208083018281528385018381526060850184815288516001600160a01b03908116875289850151811690935260e08a01359091528683015190911690526005909155436001559151909162001cd19183910162004563565b6040516020818303038152906040526002908051906020019062001cf792919062003ebe565b5050505050565b62001d10600c60005414602d620039db565b62001d2d8135158062001d2557506001548235145b602e620039db565b60008080556002805462001d419062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462001d6f9062004093565b801562001dc05780601f1062001d945761010080835404028352916020019162001dc0565b820191906000526020600020905b81548152906001019060200180831162001da257829003601f168201915b505050505080602001905181019062001dda91906200424c565b90507f5fe72957f5855f25860ec325face1305075da64ba42ea3b56918fbe46e26b4048260405162001e0d91906200419d565b60405180910390a162001e233415602b620039db565b602081015162001e40906001600160a01b03163314602c620039db565b62001e5981606001518260000151836080015162003adc565b62001e6362003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003c01565b62001eb26005600054146019620039db565b62001ecf8135158062001ec757506001548235145b601a620039db565b60008080556002805462001ee39062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462001f119062004093565b801562001f625780601f1062001f365761010080835404028352916020019162001f62565b820191906000526020600020905b81548152906001019060200180831162001f4457829003601f168201915b505050505080602001905181019062001f7c919062004370565b90507f9cdba579557d44a893ea7929682d6795d48dd5c40dc981d852842d4b18914de88260405162001faf91906200419d565b60405180910390a162001fc534156017620039db565b602081015162001fe2906001600160a01b031633146018620039db565b6040805160808101825260008082526020808301828152838501838152606080860185815288516001600160a01b0390811688528986015181169094528888015190925287015190911690526006909155436001559151909162000af89183910162004563565b6200205b6021600054146059620039db565b62002078813515806200207057506001548235145b605a620039db565b6000808055600280546200208c9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620020ba9062004093565b80156200210b5780601f10620020df576101008083540402835291602001916200210b565b820191906000526020600020905b815481529060010190602001808311620020ed57829003601f168201915b50505050508060200190518101906200212591906200459c565b905062002145604051806040016040528060008152602001600081525090565b7f35e4198bc89d52fd314a8c5d55a40a219ff4262da074ac272b1fb352f981787f836040516200217691906200419d565b60405180910390a16200218c34156057620039db565b8151620021a6906001600160a01b031633146058620039db565b8160a0015115620022565781608001518260400151620021c791906200465d565b8152606082015182516080840151620021e292919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a89015190935290890151909216909152855190526022909155436001559151909162001cd19183910162004677565b8160a00151156200230b57816080015182604001516200227791906200465d565b60208201526060820151825160808401516200229592919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528582015190526026909155436001559151909162001cd19183910162004677565b6040805160808101825260008082526020808301828152838501838152606080860185815289516001600160a01b0390811688528a8601518116909452898801519092528801519091169052602a909155436001559151909162001cd19183910162004563565b620023846015600054146041620039db565b620023a1813515806200239957506001548235145b6042620039db565b600080805560028054620023b59062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620023e39062004093565b8015620024345780601f10620024085761010080835404028352916020019162002434565b820191906000526020600020905b8154815290600101906020018083116200241657829003601f168201915b50505050508060200190518101906200244e91906200424c565b90507fc1e55c0eda497be6c786e1629355e9ba4b0e7536499c9916eca91e0c92561733826040516200248191906200419d565b60405180910390a1620024973415603f620039db565b6020810151620024b4906001600160a01b031633146040620039db565b620024cd81606001518260000151836080015162003adc565b620024d762003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003b4d565b62002526601460005414603d620039db565b62002543813515806200253b57506001548235145b603e620039db565b600080805560028054620025579062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620025859062004093565b8015620025d65780601f10620025aa57610100808354040283529160200191620025d6565b820191906000526020600020905b815481529060010190602001808311620025b857829003601f168201915b5050505050806020019051810190620025f0919062004760565b905062002619604051806060016040528060001515815260200160008152602001600081525090565b7fa2bfcfc2bf018598bf89847a2aa2dc48cb8eec269fecfd468afbe606d78101bd836040516200264a91906200419d565b60405180910390a1620026603415603b620039db565b81516200267a906001600160a01b03163314603c620039db565b608082015160a08301511080158252620027385781608001518260a00151620026a491906200465d565b6020820152606082015182516080840151620026c292919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528582015190526015909155436001559151909162001cd19183910162004677565b805115620027ea5781608001518260a001516200275691906200465d565b60408201526060820151825160808401516200277492919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528585015190526019909155436001559151909162001cd19183910162004677565b6040805160a08082018352600080835260208084018281528486018381526060808701858152608088018681528b516001600160a01b039081168a528c87015181169095528b8a0151909352908a015190921690915292870151909252601d9055436001559151909162001cd19183910162004677565b620028736010600054146035620039db565b62002890813515806200288857506001548235145b6036620039db565b600080805560028054620028a49062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620028d29062004093565b8015620029235780601f10620028f75761010080835404028352916020019162002923565b820191906000526020600020905b8154815290600101906020018083116200290557829003601f168201915b50505050508060200190518101906200293d91906200424c565b90507fe0a2e1387b485a156cf7c3e3303f6334b1f0a305dca44d49ca15f2f74d8b4bda826040516200297091906200419d565b60405180910390a16200298634156033620039db565b6020810151620029a3906001600160a01b031633146034620039db565b620029bc81606001518260000151836080015162003adc565b620029c662003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003cb4565b60006060600054600280805462002a1a9062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002a489062004093565b801562002a995780601f1062002a6d5761010080835404028352916020019162002a99565b820191906000526020600020905b81548152906001019060200180831162002a7b57829003601f168201915b50505050509050915091509091565b62002aba601c60005414604d620039db565b62002ad78135158062002acf57506001548235145b604e620039db565b60008080556002805462002aeb9062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002b199062004093565b801562002b6a5780601f1062002b3e5761010080835404028352916020019162002b6a565b820191906000526020600020905b81548152906001019060200180831162002b4c57829003601f168201915b505050505080602001905181019062002b8491906200411f565b90507f45559a3e180426ea195ce9b1df999c27f7e94d43b1c391fb910072ded4de54958260405162002bb791906200419d565b60405180910390a162002bcd3415604b620039db565b805162002be7906001600160a01b03163314604c620039db565b62002bf162003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003af3565b62002c406007600054146021620039db565b62002c5d8135158062002c5557506001548235145b6022620039db565b60008080556002805462002c719062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002c9f9062004093565b801562002cf05780601f1062002cc45761010080835404028352916020019162002cf0565b820191906000526020600020905b81548152906001019060200180831162002cd257829003601f168201915b505050505080602001905181019062002d0a919062004760565b905062002d33604051806060016040528060001515815260200160008152602001600081525090565b7fba16100ad25f3c6798bc3b7e9ca316fb231388e6fa4444c0f477e2a4336514e08360405162002d6491906200419d565b60405180910390a162002d7a3415601f620039db565b815162002d94906001600160a01b031633146020620039db565b608082015160a0830151108015825262002e525781608001518260a0015162002dbe91906200465d565b602082015260608201518251608084015162002ddc92919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528582015190526008909155436001559151909162001cd19183910162004677565b80511562002f045781608001518260a0015162002e7091906200465d565b604082015260608201518251608084015162002e8e92919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a89015190935290890151909216909152858501519052600c909155436001559151909162001cd19183910162004677565b6040805160a08082018352600080835260208084018281528486018381526060808701858152608088018681528b516001600160a01b039081168a528c87015181169095528b8a0151909352908a01519092169091529287015190925260109055436001559151909162001cd19183910162004677565b62002f8d600660005414601d620039db565b62002faa8135158062002fa257506001548235145b601e620039db565b60008080556002805462002fbe9062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002fec9062004093565b80156200303d5780601f1062003011576101008083540402835291602001916200303d565b820191906000526020600020905b8154815290600101906020018083116200301f57829003601f168201915b505050505080602001905181019062003057919062004370565b90506200308760405180608001604052806000815260200160001515815260200160008152602001600081525090565b7f4df267dd1a05b613b05cdeee7d7e028d3842cff6f4e5a9d9dde2cdaf4156275983604051620030b891906200419d565b60405180910390a1620030ce3415601b620039db565b6020820151620030eb906001600160a01b03163314601c620039db565b6064826040015160286200310091906200477f565b6200310c9190620047a1565b808252604083015110156020808301919091528251908301516001600160a01b039081169116146200314057600062003146565b80602001515b15620031ff57805160408301516200315f91906200465d565b60408201526060820151602083015182516200317d92919062003adc565b6040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a088018781528b516001600160a01b039081168a528c88015181169096528b8a0151909452918a015190931690925286519091528585015190526007909155436001559151909162001cd191839101620047c4565b806020015115620032c057805160408301516200321d91906200465d565b8160600181815250506200323f82606001518360200151836000015162003adc565b6040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a088018781528b516001600160a01b039081168a528c88015181169096528b8a01519094528a830151909416905287519092529086015190526014909155436001559151909162001cd191839101620047c4565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915282516001600160a01b0390811680835260208086015183168185019081526040808801518187019081526060808a0151871681890190815289516080808b019182528b880151151560a0808d019182526021600055436001558751998a019a909a5296518a169588019590955292519186019190915251909516908301529251918101919091529051151560c082015260e00162001cd1565b6200339d600b600054146029620039db565b620033ba81351580620033b257506001548235145b602a620039db565b600080805560028054620033ce9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620033fc9062004093565b80156200344d5780601f1062003421576101008083540402835291602001916200344d565b820191906000526020600020905b8154815290600101906020018083116200342f57829003601f168201915b50505050508060200190518101906200346791906200411f565b90507f4c8b89b6d291e7da782b3a03ba8192a22dc69ae73b79029441f7242310b1a5a4826040516200349a91906200419d565b60405180910390a1620034b034156027620039db565b8051620034ca906001600160a01b031633146028620039db565b620034d462003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003d0e565b620035236008600054146025620039db565b62003540813515806200353857506001548235145b6026620039db565b600080805560028054620035549062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620035829062004093565b8015620035d35780601f10620035a757610100808354040283529160200191620035d3565b820191906000526020600020905b815481529060010190602001808311620035b557829003601f168201915b5050505050806020019051810190620035ed91906200424c565b90507fb9845e39b4c5715a32bc04872bfe1723e638b66042817fdde0a44e5b0466b6dc826040516200362091906200419d565b60405180910390a16200363634156023620039db565b602081015162003653906001600160a01b031633146024620039db565b6200366c81606001518260000151836080015162003adc565b6200367662003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003d0e565b620036c56013600054146039620039db565b620036e281351580620036da57506001548235145b603a620039db565b600080805560028054620036f69062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620037249062004093565b8015620037755780601f10620037495761010080835404028352916020019162003775565b820191906000526020600020905b8154815290600101906020018083116200375757829003601f168201915b50505050508060200190518101906200378f91906200411f565b90507f359a55deeb4d5872fc8fd0567a7ed5063e7b4dc07b55df97304b61bb4b680e1282604051620037c291906200419d565b60405180910390a1620037d834156037620039db565b8051620037f2906001600160a01b031633146038620039db565b620037fc62003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003cb4565b6200384b601d600054146051620039db565b62003868813515806200386057506001548235145b6052620039db565b6000808055600280546200387c9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620038aa9062004093565b8015620038fb5780601f10620038cf57610100808354040283529160200191620038fb565b820191906000526020600020905b815481529060010190602001808311620038dd57829003601f168201915b50505050508060200190518101906200391591906200424c565b90507f322ee4284cfff566341927d6f2f7e2d1a5c0f8fa56564384979fc8a9b75ff941826040516200394891906200419d565b60405180910390a16200395e3415604f620039db565b60208101516200397b906001600160a01b031633146050620039db565b6200399481606001518260000151836080015162003adc565b6200399e62003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003c5b565b8162000b3c5760405163100960cb60e01b8152600481018290526024015b60405180910390fd5b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052602d909155436001559151909162003a5c9183910162004814565b604051602081830303815290604052600290805190602001906200064092919062003ebe565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526029909155436001559151909162003a5c9183910162004814565b62003ae983838362003d68565b6200064057600080fd5b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052601c909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526018909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526025909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052600f909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b03908116865287518401519092528651860151909116905290819055436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526013909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052600b909155436001559151909162003a5c9183910162004814565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392839291881691839162003dc99162004841565b60006040518083038185875af1925050503d806000811462003e08576040519150601f19603f3d011682016040523d82523d6000602084013e62003e0d565b606091505b509150915062003e208282600262003e41565b508080602001905181019062003e3791906200485f565b9695505050505050565b6060831562003e5257508162003e80565b82511562003e635782518084602001fd5b60405163100960cb60e01b815260048101839052602401620039f9565b9392505050565b6040805160a08101825260008183018181526060830182905260808301829052825282516020818101909452908152909182015290565b82805462003ecc9062004093565b90600052602060002090601f01602090048101928262003ef0576000855562003f3b565b82601f1062003f0b57805160ff191683800117855562003f3b565b8280016001018555821562003f3b579182015b8281111562003f3b57825182559160200191906001019062003f1e565b5062003f4992915062003f9d565b5090565b50805462003f5b9062004093565b6000825580601f1062003f6c575050565b601f01602090049060005260206000209081019062003f8c919062003f9d565b50565b610f75806200488083390190565b5b8082111562003f49576000815560010162003f9e565b60006040828403121562003fc757600080fd5b50919050565b60006040828403121562003fe057600080fd5b62003e80838362003fb4565b60006060828403121562003fc757600080fd5b6000610120828403121562003fc757600080fd5b60005b838110156200403057818101518382015260200162004016565b8381111562000b1e5750506000910152565b600081518084526200405c81602086016020860162004013565b601f01601f19169290920160200192915050565b8281526040602082015260006200408b604083018462004042565b949350505050565b600181811c90821680620040a857607f821691505b6020821081141562003fc757634e487b7160e01b600052602260045260246000fd5b6040516060810167ffffffffffffffff81118282101715620040fc57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200411a57600080fd5b919050565b6000606082840312156200413257600080fd5b6200413c620040ca565b620041478362004102565b815260208301516020820152620041616040840162004102565b60408201529392505050565b801515811462003f8c57600080fd5b80358252602081013562004190816200416d565b8015156020840152505050565b60408101620041ad82846200417c565b92915050565b600060a08284031215620041c657600080fd5b60405160a0810181811067ffffffffffffffff82111715620041f857634e487b7160e01b600052604160045260246000fd5b604052905080620042098362004102565b8152620042196020840162004102565b602082015260408301516040820152620042366060840162004102565b6060820152608083015160808201525092915050565b600060a082840312156200425f57600080fd5b62003e808383620041b3565b6000602082840312156200427e57600080fd5b6040516020810181811067ffffffffffffffff82111715620042b057634e487b7160e01b600052604160045260246000fd5b604052620042be8362004102565b81529392505050565b8135815260608101620041ad60208084019085016200417c565b600060208284031215620042f457600080fd5b813562003e80816200416d565b6000604082840312156200431457600080fd5b6040516040810181811067ffffffffffffffff821117156200434657634e487b7160e01b600052604160045260246000fd5b604052620043548362004102565b8152620043646020840162004102565b60208201529392505050565b6000608082840312156200438357600080fd5b6040516080810181811067ffffffffffffffff82111715620043b557634e487b7160e01b600052604160045260246000fd5b604052620043c38362004102565b8152620043d36020840162004102565b602082015260408301516040820152620043f06060840162004102565b60608201529392505050565b6000606082840312156200440f57600080fd5b62004419620040ca565b620044248362004102565b8152620044346020840162004102565b6020820152604083015160408201528091505092915050565b80356001600160c01b0319811681146200411a57600080fd5b813581526020808301359082015261012081016001600160c01b031962004490604085016200444d565b166040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b600060208284031215620044ed57600080fd5b62003e80826200444d565b60c0815260006200450d60c083018962004042565b828103602084015262004521818962004042565b9050828103604084015262004537818862004042565b905082810360608401526200454d818762004042565b6080840195909552505060a00152949350505050565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606092830151169181019190915260800190565b600060c08284031215620045af57600080fd5b60405160c0810181811067ffffffffffffffff82111715620045e157634e487b7160e01b600052604160045260246000fd5b604052620045ef8362004102565b8152620045ff6020840162004102565b6020820152604083015160408201526200461c6060840162004102565b60608201526080830151608082015260a08301516200463b816200416d565b60a08201529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004672576200467262004647565b500390565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606080840151909116908201526080808301519082015260a08101620041ad565b600060c08284031215620046d057600080fd5b60405160c0810181811067ffffffffffffffff821117156200470257634e487b7160e01b600052604160045260246000fd5b604052905080620047138362004102565b8152620047236020840162004102565b602082015260408301516040820152620047406060840162004102565b60608201526080830151608082015260a083015160a08201525092915050565b600060c082840312156200477357600080fd5b62003e808383620046bd565b60008160001904831182151516156200479c576200479c62004647565b500290565b600082620047bf57634e487b7160e01b600052601260045260246000fd5b500490565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606080840151909116908201526080808301519082015260a0808301519082015260c08101620041ad565b81516001600160a01b03908116825260208084015190830152604092830151169181019190915260600190565b600082516200485581846020870162004013565b9190910192915050565b6000602082840312156200487257600080fd5b815162003e80816200416d56fe60806040523480156200001157600080fd5b5060405162000f7538038062000f75833981016040819052620000349162000341565b8551869086906200004d906003906020850190620001ce565b50805162000063906004906020840190620001ce565b506200006f9150503390565b600580546001600160a01b0319166001600160a01b039290921691821790556200009a9083620000e6565b8351620000af906006906020870190620001ce565b508251620000c5906007906020860190620001ce565b506008805460ff191660ff9290921691909117905550620004709350505050565b6001600160a01b038216620001415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015591906200040c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001849084906200040c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001dc9062000433565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b60008060008060008060c087890312156200035b57600080fd5b86516001600160401b03808211156200037357600080fd5b620003818a838b016200028a565b975060208901519150808211156200039857600080fd5b620003a68a838b016200028a565b96506040890151915080821115620003bd57600080fd5b620003cb8a838b016200028a565b95506060890151915080821115620003e257600080fd5b50620003f189828a016200028a565b9350506080870151915060a087015190509295509295509295565b600082198211156200042e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610af580620004806000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806383197ef01161006657806383197ef01461019b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806342966c68146101575780635600f04f1461016a57806370a082311461017257600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063392f37e91461014f575b600080fd5b6100dc6101f9565b6040516100e991906108fa565b60405180910390f35b61010561010036600461096b565b61028b565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610995565b6102a1565b60085460405160ff90911681526020016100e9565b6100dc610357565b6101056101653660046109d1565b610366565b6100dc6103dc565b6101196101803660046109ea565b6001600160a01b031660009081526020819052604090205490565b6101a36103eb565b005b6100dc610492565b6101056101bb36600461096b565b6104a1565b6101196101ce366004610a0c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020890610a3f565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610a3f565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b60006102983384846104ae565b50600192915050565b60006102ae8484846105d3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61034c85336103478685610a90565b6104ae565b506001949350505050565b60606007805461020890610a3f565b6005546000906001600160a01b0316336001600160a01b0316146103be5760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b6005546103d4906001600160a01b0316836107ab565b506001919050565b60606006805461020890610a3f565b6005546001600160a01b0316336001600160a01b0316146104405760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b600254156104845760405162461bcd60e51b81526020600482015260116024820152706d757374206265206e6f20737570706c7960781b604482015260640161032f565b6005546001600160a01b0316ff5b60606004805461020890610a3f565b60006102983384846105d3565b6001600160a01b0383166105105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166105715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b038316600090815260208190526040902054818110156107115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b61071b8282610a90565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610751908490610aa7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079d91815260200190565b60405180910390a350505050565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032f565b6001600160a01b0382166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032f565b6108898282610a90565b6001600160a01b038416600090815260208190526040812091909155600280548492906108b7908490610a90565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105c6565b600060208083528351808285015260005b818110156109275785810183015185820160400152820161090b565b81811115610939576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461096657600080fd5b919050565b6000806040838503121561097e57600080fd5b6109878361094f565b946020939093013593505050565b6000806000606084860312156109aa57600080fd5b6109b38461094f565b92506109c16020850161094f565b9150604084013590509250925092565b6000602082840312156109e357600080fd5b5035919050565b6000602082840312156109fc57600080fd5b610a058261094f565b9392505050565b60008060408385031215610a1f57600080fd5b610a288361094f565b9150610a366020840161094f565b90509250929050565b600181811c90821680610a5357607f821691505b60208210811415610a7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa257610aa2610a7a565b500390565b60008219821115610aba57610aba610a7a565b50019056fea264697066735822122031be63d0f5320250996e497a8bfa3440d5b23e1f35d28e15161e842fd946ebff64736f6c63430008090033a2646970667358221220408a2d217661da2475597ce094d31625cd6d99bb309585fc143843a0d70e92e764736f6c63430008090033`,\n  BytecodeLen: 23523,\n  Which: `oD`,\n  version: 5,\n  views: {}\n};\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n};\nexport const _Participants = {\n  \"ProjectOwner\": ProjectOwner,\n  \"Sponsor\": Sponsor\n};\nexport const _APIs = {};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectOwner\");\n$RefreshReg$(_c2, \"Sponsor\");","map":{"version":3,"sources":["/home/david/Desktop/SponsorMe/sponsor/src/build/index.main.mjs"],"names":["_version","_versionHash","_backendVersion","getExports","s","stdlib","reachStdlib","_getEvents","_getViews","viewlib","ctc0","T_Address","ctc1","T_UInt","ctc2","T_Token","ctc3","T_Bool","infos","views","_getMaps","T_Tuple","mapDataTy","ProjectOwner","ctcTop","interact","_initialize","undefined","Promise","reject","Error","ctc","T_Bytes","checkedBigNumberify","UInt_max","T_Object","contractDuration","fundraisingGoal","projectDetails","projectName","share","T_Null","ctc4","ctc5","amt","contribute","ctc6","ctc7","ctc8","ctc9","metadata","name","supply","symbol","url","ctc10","ctc11","v354","protect","projectInfo","txn1","sendrecv","args","evt_cnt","funcNum","lct","onlyIf","out_tys","pay","sim_p","sim_r","txns","mapRefs","mapsPrev","mapsNext","data","v358","secs","v360","time","v359","didSend","v28","from","v357","push","kind","tok","isHalt","soloSend","timeoutAt","tys","waitIfNotPresent","reportReady","at","fs","msg","who","txn2","recv","v367","v369","v368","v42","v366","v371","v381","txn3","v383","v385","v384","v69","v382","v387","addressEq","assert","txn4","v390","v389","v76","v388","v393","reportPayment","reportTransfer","v404","getParams","v405","v406","v407","v408","v409","v410","txn5","v412","v413","v414","v415","v416","v417","v419","v418","v114","v411","v421","v422","simTokenNew","v423","getOutput","v425","reportTokenMinted","txn6","v428","v427","v127","v426","v430","txn7","v435","v434","v138","v433","v437","v438","v440","mul","v441","div","v442","ge","v443","v449","sub","txn8","v456","v455","v179","v454","v458","v459","v463","v464","v470","to","v529","didTransfer","txn9","v477","v476","v220","v475","v479","programEnded","v487","txn10","v499","v498","v239","v497","v501","cv487","reportExit","v536","v535","v534","v538","v546","v558","v557","v556","v560","cv546","v582","v581","v580","v584","v592","v604","v603","v602","v606","cv592","v634","v641","v640","v639","v643","v644","v648","v649","v655","v714","v662","v661","v660","v664","v672","v684","v683","v682","v686","cv672","v721","v720","v719","v723","v731","v743","v742","v741","v745","cv731","v767","v766","v765","v769","v777","v789","v788","v787","v791","cv777","v813","v812","v811","v815","v816","v821","v827","v886","v834","v833","v832","v836","v844","v856","v855","v854","v858","cv844","v893","v892","v891","v895","v903","v915","v914","v913","v917","cv903","v939","v938","v937","v941","v949","v961","v960","v959","v963","cv949","reportCancellation","Sponsor","v365","sponsor","v432","simTokenBurn","simTokenDestroy","_ALGO","appApproval","appClear","mapDataKeys","mapDataSize","stateKeys","stateSize","unsupported","version","_ETH","ABI","Bytecode","BytecodeLen","Which","_Connectors","ALGO","ETH","_Participants","_APIs"],"mappings":"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CA/oGD;AAgpGZC,EAAAA,SAAS,EAAE,CAhpGC;AAipGZC,EAAAA,SAAS,EAAE,EAjpGC;AAkpGZC,EAAAA,WAAW,EAAE,EAlpGD;AAmpGZC,EAAAA,OAAO,EAAE;AAnpGG,CAAd;AAqpGA,MAAMC,IAAI,GAAG;AACXC,EAAAA,GAAG,EAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EApuDa;AAquDXC,EAAAA,QAAQ,EAAG,087CAruDA;AAsuDXC,EAAAA,WAAW,EAAE,KAtuDF;AAuuDXC,EAAAA,KAAK,EAAG,IAvuDG;AAwuDXL,EAAAA,OAAO,EAAE,CAxuDE;AAyuDXvS,EAAAA,KAAK,EAAE;AAzuDI,CAAb;AA4uDA,OAAO,MAAM6S,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAEf,KADmB;AAEzBgB,EAAAA,GAAG,EAAEP;AAFoB,CAApB;AAIP,OAAO,MAAMQ,aAAa,GAAG;AAC3B,kBAAgB5S,YADW;AAE3B,aAAWqR;AAFgB,CAAtB;AAIP,OAAO,MAAMwB,KAAK,GAAG,EAAd","sourcesContent":["// Automatically generated with Reach 0.1.7 (7b246c0c)\n/* eslint-disable */\nexport const _version = '0.1.7';\nexport const _versionHash = '0.1.7 (7b246c0c)';\nexport const _backendVersion = 6;\n\nexport function getExports(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getEvents(s) {\n  const stdlib = s.reachStdlib;\n  return {\n    };\n  };\nexport function _getViews(s, viewlib) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Address;\n  const ctc1 = stdlib.T_UInt;\n  const ctc2 = stdlib.T_Token;\n  const ctc3 = stdlib.T_Bool;\n  \n  return {\n    infos: {\n      },\n    views: {\n      1: [ctc0],\n      2: [ctc0, ctc0],\n      3: [ctc0, ctc0, ctc1],\n      4: [ctc0, ctc0],\n      5: [ctc0, ctc0, ctc1, ctc2],\n      6: [ctc0, ctc0, ctc1, ctc2],\n      7: [ctc0, ctc0, ctc1, ctc2, ctc1, ctc1],\n      8: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      11: [ctc0, ctc1, ctc2],\n      12: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      15: [ctc0, ctc1, ctc2],\n      16: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      19: [ctc0, ctc1, ctc2],\n      20: [ctc0, ctc0, ctc1, ctc2, ctc1, ctc1],\n      21: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      24: [ctc0, ctc1, ctc2],\n      25: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      28: [ctc0, ctc1, ctc2],\n      29: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      32: [ctc0, ctc1, ctc2],\n      33: [ctc0, ctc0, ctc1, ctc2, ctc1, ctc3],\n      34: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      37: [ctc0, ctc1, ctc2],\n      38: [ctc0, ctc0, ctc1, ctc2, ctc1],\n      41: [ctc0, ctc1, ctc2],\n      42: [ctc0, ctc0, ctc1, ctc2],\n      45: [ctc0, ctc1, ctc2]\n      }\n    };\n  \n  };\nexport function _getMaps(s) {\n  const stdlib = s.reachStdlib;\n  const ctc0 = stdlib.T_Tuple([]);\n  return {\n    mapDataTy: ctc0\n    };\n  };\nexport async function ProjectOwner(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for ProjectOwner expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for ProjectOwner expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 28));\n  const ctc2 = stdlib.T_Object({\n    contractDuration: ctc0,\n    fundraisingGoal: ctc0,\n    projectDetails: ctc1,\n    projectName: ctc1,\n    share: ctc0\n    });\n  const ctc3 = stdlib.T_Null;\n  const ctc4 = stdlib.T_Bool;\n  const ctc5 = stdlib.T_Object({\n    amt: ctc0,\n    contribute: ctc4\n    });\n  const ctc6 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 32));\n  const ctc7 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 8));\n  const ctc8 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 96));\n  const ctc9 = stdlib.T_Object({\n    amt: ctc0,\n    metadata: ctc6,\n    name: ctc6,\n    supply: ctc0,\n    symbol: ctc7,\n    url: ctc8\n    });\n  const ctc10 = stdlib.T_Token;\n  const ctc11 = stdlib.T_Address;\n  \n  \n  const v354 = stdlib.protect(ctc2, interact.projectInfo, 'for ProjectOwner\\'s interact field projectInfo');\n  \n  const txn1 = await (ctc.sendrecv({\n    args: [v354],\n    evt_cnt: 1,\n    funcNum: 0,\n    lct: stdlib.checkedBigNumberify('./index.rsh:67:6:dot', stdlib.UInt_max, 0),\n    onlyIf: true,\n    out_tys: [ctc2],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:67:6:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn1) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v358], secs: v360, time: v359, didSend: v28, from: v357 } = txn1;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:67:6:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      \n      sim_r.isHalt = false;\n      \n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc2],\n    waitIfNotPresent: false\n    }));\n  const {data: [v358], secs: v360, time: v359, didSend: v28, from: v357 } = txn1;\n  ;\n  stdlib.protect(ctc3, await interact.reportReady(), {\n    at: './index.rsh:1:39:application',\n    fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:69:26:application call to \"liftedInteract\" (defined at: ./index.rsh:69:26:application)'],\n    msg: 'reportReady',\n    who: 'ProjectOwner'\n    });\n  \n  const txn2 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 1,\n    out_tys: [ctc5],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [v367], secs: v369, time: v368, didSend: v42, from: v366 } = txn2;\n  ;\n  const v371 = v367.contribute;\n  if (v371) {\n    const v381 = v358.fundraisingGoal;\n    \n    const txn3 = await (ctc.sendrecv({\n      args: [v357, v366, v381],\n      evt_cnt: 1,\n      funcNum: 2,\n      lct: v368,\n      onlyIf: true,\n      out_tys: [ctc0],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:90:6:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn3) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v383], secs: v385, time: v384, didSend: v69, from: v382 } = txn3;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:90:6:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v387 = stdlib.addressEq(v357, v382);\n        stdlib.assert(v387, {\n          at: './index.rsh:90:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n          });\n        sim_r.isHalt = false;\n        \n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc11, ctc11, ctc0],\n      waitIfNotPresent: false\n      }));\n    const {data: [v383], secs: v385, time: v384, didSend: v69, from: v382 } = txn3;\n    ;\n    const v387 = stdlib.addressEq(v357, v382);\n    stdlib.assert(v387, {\n      at: './index.rsh:90:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n      });\n    const txn4 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 3,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const {data: [], secs: v390, time: v389, didSend: v76, from: v388 } = txn4;\n    ;\n    const v393 = stdlib.addressEq(v366, v388);\n    stdlib.assert(v393, {\n      at: './index.rsh:94:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n      });\n    stdlib.protect(ctc3, await interact.reportPayment(v383), {\n      at: './index.rsh:95:45:application',\n      fs: ['at ./index.rsh:95:7:application call to [unknown function] (defined at: ./index.rsh:95:20:function exp)'],\n      msg: 'reportPayment',\n      who: 'ProjectOwner'\n      });\n    \n    ;\n    stdlib.protect(ctc3, await interact.reportTransfer(v383), {\n      at: './index.rsh:97:46:application',\n      fs: ['at ./index.rsh:97:7:application call to [unknown function] (defined at: ./index.rsh:97:20:function exp)'],\n      msg: 'reportTransfer',\n      who: 'ProjectOwner'\n      });\n    \n    const v404 = stdlib.protect(ctc9, await interact.getParams(), {\n      at: './index.rsh:103:25:application',\n      fs: ['at ./index.rsh:101:10:application call to [unknown function] (defined at: ./index.rsh:101:14:function exp)'],\n      msg: 'getParams',\n      who: 'ProjectOwner'\n      });\n    const v405 = v404.name;\n    const v406 = v404.symbol;\n    const v407 = v404.url;\n    const v408 = v404.metadata;\n    const v409 = v404.supply;\n    const v410 = v404.amt;\n    \n    const txn5 = await (ctc.sendrecv({\n      args: [v357, v366, v405, v406, v407, v408, v409, v410],\n      evt_cnt: 6,\n      funcNum: 4,\n      lct: v389,\n      onlyIf: true,\n      out_tys: [ctc6, ctc7, ctc8, ctc6, ctc0, ctc0],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:107:6:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn5) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [v412, v413, v414, v415, v416, v417], secs: v419, time: v418, didSend: v114, from: v411 } = txn5;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:107:6:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v421 = stdlib.addressEq(v357, v411);\n        stdlib.assert(v421, {\n          at: './index.rsh:107:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n          });\n        const v422 = stdlib.simTokenNew(sim_r, v412, v413, v414, v415, v416, undefined);\n        const v423 = await txn5.getOutput('internal', 'v422', ctc10, v422);\n        \n        sim_r.isHalt = false;\n        \n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc11, ctc11, ctc6, ctc7, ctc8, ctc6, ctc0, ctc0],\n      waitIfNotPresent: false\n      }));\n    const {data: [v412, v413, v414, v415, v416, v417], secs: v419, time: v418, didSend: v114, from: v411 } = txn5;\n    ;\n    const v421 = stdlib.addressEq(v357, v411);\n    stdlib.assert(v421, {\n      at: './index.rsh:107:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n      });\n    const v422 = undefined;\n    const v423 = await txn5.getOutput('internal', 'v422', ctc10, v422);\n    const v425 = {\n      metadata: v415,\n      name: v412,\n      supply: v416,\n      symbol: v413,\n      url: v414\n      };\n    stdlib.protect(ctc3, await interact.reportTokenMinted(v423, v425), {\n      at: './index.rsh:1:39:application',\n      fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:113:32:application call to \"liftedInteract\" (defined at: ./index.rsh:113:32:application)'],\n      msg: 'reportTokenMinted',\n      who: 'ProjectOwner'\n      });\n    \n    const txn6 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 5,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const {data: [], secs: v428, time: v427, didSend: v127, from: v426 } = txn6;\n    ;\n    const v430 = stdlib.addressEq(v366, v426);\n    stdlib.assert(v430, {\n      at: './index.rsh:116:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n      });\n    const txn7 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 0,\n      funcNum: 6,\n      out_tys: [],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const {data: [], secs: v435, time: v434, didSend: v138, from: v433 } = txn7;\n    ;\n    const v437 = stdlib.addressEq(v366, v433);\n    stdlib.assert(v437, {\n      at: './index.rsh:132:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'ProjectOwner'\n      });\n    const v438 = stdlib.addressEq(v366, v357);\n    const v440 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:121:40:decimal', stdlib.UInt_max, 40), v416);\n    const v441 = stdlib.div(v440, stdlib.checkedBigNumberify('./index.rsh:121:55:decimal', stdlib.UInt_max, 100));\n    const v442 = stdlib.ge(v416, v441);\n    const v443 = v438 ? v442 : false;\n    if (v443) {\n      const v449 = stdlib.sub(v416, v441);\n      ;\n      const txn8 = await (ctc.sendrecv({\n        args: [v357, v366, v416, v423, v441, v449],\n        evt_cnt: 0,\n        funcNum: 7,\n        lct: v434,\n        onlyIf: true,\n        out_tys: [],\n        pay: [stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0), []],\n        sim_p: (async (txn8) => {\n          const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n          \n          const {data: [], secs: v456, time: v455, didSend: v179, from: v454 } = txn8;\n          \n          sim_r.txns.push({\n            amt: stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0),\n            kind: 'to',\n            tok: undefined\n            });\n          const v458 = stdlib.addressEq(v357, v454);\n          stdlib.assert(v458, {\n            at: './index.rsh:135:6:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n            });\n          const v459 = stdlib.addressEq(v357, v357);\n          const v463 = stdlib.ge(v449, v441);\n          const v464 = v459 ? v463 : false;\n          if (v464) {\n            const v470 = stdlib.sub(v449, v441);\n            sim_r.txns.push({\n              amt: v441,\n              kind: 'from',\n              to: v357,\n              tok: v423\n              });\n            \n            sim_r.isHalt = false;\n            }\n          else {\n            if (v463) {\n              const v529 = stdlib.sub(v449, v441);\n              sim_r.txns.push({\n                amt: v441,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              sim_r.isHalt = false;\n              }\n            else {\n              sim_r.isHalt = false;\n              }}\n          return sim_r;\n          }),\n        soloSend: true,\n        timeoutAt: undefined,\n        tys: [ctc11, ctc11, ctc0, ctc10, ctc0, ctc0],\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v456, time: v455, didSend: v179, from: v454 } = txn8;\n      ;\n      const v458 = stdlib.addressEq(v357, v454);\n      stdlib.assert(v458, {\n        at: './index.rsh:135:6:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'ProjectOwner'\n        });\n      const v459 = stdlib.addressEq(v357, v357);\n      const v463 = stdlib.ge(v449, v441);\n      const v464 = v459 ? v463 : false;\n      if (v464) {\n        const v470 = stdlib.sub(v449, v441);\n        ;\n        stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n          at: './index.rsh:1:39:application',\n          fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n          msg: 'didTransfer',\n          who: 'ProjectOwner'\n          });\n        \n        const txn9 = await (ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 8,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v477, time: v476, didSend: v220, from: v475 } = txn9;\n        ;\n        const v479 = stdlib.addressEq(v366, v475);\n        stdlib.assert(v479, {\n          at: './index.rsh:139:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n          });\n        ;\n        stdlib.protect(ctc3, await interact.programEnded(), {\n          at: './index.rsh:141:44:application',\n          fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n          msg: 'programEnded',\n          who: 'ProjectOwner'\n          });\n        \n        let v487 = v476;\n        \n        while (await (async () => {\n          \n          return true;})()) {\n          const txn10 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 10,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v499, time: v498, didSend: v239, from: v497 } = txn10;\n          ;\n          const v501 = stdlib.addressEq(v366, v497);\n          stdlib.assert(v501, {\n            at: './index.rsh:146:7:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n            });\n          const cv487 = v498;\n          \n          v487 = cv487;\n          \n          continue;\n          \n          }\n        undefined;\n        undefined;\n        stdlib.protect(ctc3, await interact.reportExit(), {\n          at: './index.rsh:152:42:application',\n          fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n          msg: 'reportExit',\n          who: 'ProjectOwner'\n          });\n        \n        return;\n        \n        \n        }\n      else {\n        if (v463) {\n          const v529 = stdlib.sub(v449, v441);\n          ;\n          stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n            at: './index.rsh:1:39:application',\n            fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n            msg: 'didTransfer',\n            who: 'ProjectOwner'\n            });\n          \n          const txn9 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 11,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v536, time: v535, didSend: v220, from: v534 } = txn9;\n          ;\n          const v538 = stdlib.addressEq(v366, v534);\n          stdlib.assert(v538, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n            });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n            });\n          \n          let v546 = v535;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 13,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v558, time: v557, didSend: v239, from: v556 } = txn10;\n            ;\n            const v560 = stdlib.addressEq(v366, v556);\n            stdlib.assert(v560, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            const cv546 = v557;\n            \n            v546 = cv546;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n            });\n          \n          return;\n          \n          \n          }\n        else {\n          const txn9 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 14,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v582, time: v581, didSend: v220, from: v580 } = txn9;\n          ;\n          const v584 = stdlib.addressEq(v366, v580);\n          stdlib.assert(v584, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n            });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n            });\n          \n          let v592 = v581;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 16,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v604, time: v603, didSend: v239, from: v602 } = txn10;\n            ;\n            const v606 = stdlib.addressEq(v366, v602);\n            stdlib.assert(v606, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            const cv592 = v603;\n            \n            v592 = cv592;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n            });\n          \n          return;\n          \n          \n          }}\n      \n      }\n    else {\n      if (v442) {\n        const v634 = stdlib.sub(v416, v441);\n        ;\n        const txn8 = await (ctc.sendrecv({\n          args: [v357, v366, v416, v423, v441, v634],\n          evt_cnt: 0,\n          funcNum: 17,\n          lct: v434,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn8) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const {data: [], secs: v641, time: v640, didSend: v179, from: v639 } = txn8;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const v643 = stdlib.addressEq(v357, v639);\n            stdlib.assert(v643, {\n              at: './index.rsh:135:6:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            const v644 = stdlib.addressEq(v357, v357);\n            const v648 = stdlib.ge(v634, v441);\n            const v649 = v644 ? v648 : false;\n            if (v649) {\n              const v655 = stdlib.sub(v634, v441);\n              sim_r.txns.push({\n                amt: v441,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              sim_r.isHalt = false;\n              }\n            else {\n              if (v648) {\n                const v714 = stdlib.sub(v634, v441);\n                sim_r.txns.push({\n                  amt: v441,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                  });\n                \n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.isHalt = false;\n                }}\n            return sim_r;\n            }),\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc11, ctc11, ctc0, ctc10, ctc0, ctc0],\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v641, time: v640, didSend: v179, from: v639 } = txn8;\n        ;\n        const v643 = stdlib.addressEq(v357, v639);\n        stdlib.assert(v643, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n          });\n        const v644 = stdlib.addressEq(v357, v357);\n        const v648 = stdlib.ge(v634, v441);\n        const v649 = v644 ? v648 : false;\n        if (v649) {\n          const v655 = stdlib.sub(v634, v441);\n          ;\n          stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n            at: './index.rsh:1:39:application',\n            fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n            msg: 'didTransfer',\n            who: 'ProjectOwner'\n            });\n          \n          const txn9 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 18,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v662, time: v661, didSend: v220, from: v660 } = txn9;\n          ;\n          const v664 = stdlib.addressEq(v366, v660);\n          stdlib.assert(v664, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n            });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n            });\n          \n          let v672 = v661;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 20,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v684, time: v683, didSend: v239, from: v682 } = txn10;\n            ;\n            const v686 = stdlib.addressEq(v366, v682);\n            stdlib.assert(v686, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            const cv672 = v683;\n            \n            v672 = cv672;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n            });\n          \n          return;\n          \n          \n          }\n        else {\n          if (v648) {\n            const v714 = stdlib.sub(v634, v441);\n            ;\n            stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n              at: './index.rsh:1:39:application',\n              fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n              msg: 'didTransfer',\n              who: 'ProjectOwner'\n              });\n            \n            const txn9 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 21,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v721, time: v720, didSend: v220, from: v719 } = txn9;\n            ;\n            const v723 = stdlib.addressEq(v366, v719);\n            stdlib.assert(v723, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n              });\n            \n            let v731 = v720;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 23,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v743, time: v742, didSend: v239, from: v741 } = txn10;\n              ;\n              const v745 = stdlib.addressEq(v366, v741);\n              stdlib.assert(v745, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n                });\n              const cv731 = v742;\n              \n              v731 = cv731;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n              });\n            \n            return;\n            \n            \n            }\n          else {\n            const txn9 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 24,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v767, time: v766, didSend: v220, from: v765 } = txn9;\n            ;\n            const v769 = stdlib.addressEq(v366, v765);\n            stdlib.assert(v769, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n              });\n            \n            let v777 = v766;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 26,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v789, time: v788, didSend: v239, from: v787 } = txn10;\n              ;\n              const v791 = stdlib.addressEq(v366, v787);\n              stdlib.assert(v791, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n                });\n              const cv777 = v788;\n              \n              v777 = cv777;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n              });\n            \n            return;\n            \n            \n            }}\n        \n        }\n      else {\n        const txn8 = await (ctc.sendrecv({\n          args: [v357, v366, v416, v423, v441, v442],\n          evt_cnt: 0,\n          funcNum: 27,\n          lct: v434,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn8) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const {data: [], secs: v813, time: v812, didSend: v179, from: v811 } = txn8;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:135:6:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const v815 = stdlib.addressEq(v357, v811);\n            stdlib.assert(v815, {\n              at: './index.rsh:135:6:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            const v816 = stdlib.addressEq(v357, v357);\n            const v821 = v816 ? v442 : false;\n            if (v821) {\n              const v827 = stdlib.sub(v416, v441);\n              sim_r.txns.push({\n                amt: v441,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              sim_r.isHalt = false;\n              }\n            else {\n              if (v442) {\n                const v886 = stdlib.sub(v416, v441);\n                sim_r.txns.push({\n                  amt: v441,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                  });\n                \n                sim_r.isHalt = false;\n                }\n              else {\n                sim_r.isHalt = false;\n                }}\n            return sim_r;\n            }),\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc11, ctc11, ctc0, ctc10, ctc0, ctc4],\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v813, time: v812, didSend: v179, from: v811 } = txn8;\n        ;\n        const v815 = stdlib.addressEq(v357, v811);\n        stdlib.assert(v815, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'ProjectOwner'\n          });\n        const v816 = stdlib.addressEq(v357, v357);\n        const v821 = v816 ? v442 : false;\n        if (v821) {\n          const v827 = stdlib.sub(v416, v441);\n          ;\n          stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n            at: './index.rsh:1:39:application',\n            fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n            msg: 'didTransfer',\n            who: 'ProjectOwner'\n            });\n          \n          const txn9 = await (ctc.recv({\n            didSend: false,\n            evt_cnt: 0,\n            funcNum: 28,\n            out_tys: [],\n            timeoutAt: undefined,\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v834, time: v833, didSend: v220, from: v832 } = txn9;\n          ;\n          const v836 = stdlib.addressEq(v366, v832);\n          stdlib.assert(v836, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'ProjectOwner'\n            });\n          ;\n          stdlib.protect(ctc3, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'ProjectOwner'\n            });\n          \n          let v844 = v833;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 30,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v856, time: v855, didSend: v239, from: v854 } = txn10;\n            ;\n            const v858 = stdlib.addressEq(v366, v854);\n            stdlib.assert(v858, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            const cv844 = v855;\n            \n            v844 = cv844;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc3, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'ProjectOwner'\n            });\n          \n          return;\n          \n          \n          }\n        else {\n          if (v442) {\n            const v886 = stdlib.sub(v416, v441);\n            ;\n            stdlib.protect(ctc3, await interact.didTransfer(true, v441), {\n              at: './index.rsh:1:39:application',\n              fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:136:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n              msg: 'didTransfer',\n              who: 'ProjectOwner'\n              });\n            \n            const txn9 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 31,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v893, time: v892, didSend: v220, from: v891 } = txn9;\n            ;\n            const v895 = stdlib.addressEq(v366, v891);\n            stdlib.assert(v895, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n              });\n            \n            let v903 = v892;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 33,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v915, time: v914, didSend: v239, from: v913 } = txn10;\n              ;\n              const v917 = stdlib.addressEq(v366, v913);\n              stdlib.assert(v917, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n                });\n              const cv903 = v914;\n              \n              v903 = cv903;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n              });\n            \n            return;\n            \n            \n            }\n          else {\n            const txn9 = await (ctc.recv({\n              didSend: false,\n              evt_cnt: 0,\n              funcNum: 34,\n              out_tys: [],\n              timeoutAt: undefined,\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v939, time: v938, didSend: v220, from: v937 } = txn9;\n            ;\n            const v941 = stdlib.addressEq(v366, v937);\n            stdlib.assert(v941, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'ProjectOwner'\n              });\n            ;\n            stdlib.protect(ctc3, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'ProjectOwner'\n              });\n            \n            let v949 = v938;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.recv({\n                didSend: false,\n                evt_cnt: 0,\n                funcNum: 36,\n                out_tys: [],\n                timeoutAt: undefined,\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v961, time: v960, didSend: v239, from: v959 } = txn10;\n              ;\n              const v963 = stdlib.addressEq(v366, v959);\n              stdlib.assert(v963, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'ProjectOwner'\n                });\n              const cv949 = v960;\n              \n              v949 = cv949;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc3, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'ProjectOwner'\n              });\n            \n            return;\n            \n            \n            }}\n        \n        }}\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    }\n  else {\n    stdlib.protect(ctc3, await interact.reportCancellation(), {\n      at: './index.rsh:79:52:application',\n      fs: ['at ./index.rsh:79:9:application call to [unknown function] (defined at: ./index.rsh:79:22:function exp)'],\n      msg: 'reportCancellation',\n      who: 'ProjectOwner'\n      });\n    \n    stdlib.protect(ctc3, await interact.reportExit(), {\n      at: './index.rsh:80:44:application',\n      fs: ['at ./index.rsh:80:9:application call to [unknown function] (defined at: ./index.rsh:80:22:function exp)'],\n      msg: 'reportExit',\n      who: 'ProjectOwner'\n      });\n    \n    return;\n    }\n  \n  \n  \n  };\nexport async function Sponsor(ctcTop, interact) {\n  if (typeof(ctcTop) !== 'object' || ctcTop._initialize === undefined) {\n    return Promise.reject(new Error(`The backend for Sponsor expects to receive a contract as its first argument.`));}\n  if (typeof(interact) !== 'object') {\n    return Promise.reject(new Error(`The backend for Sponsor expects to receive an interact object as its second argument.`));}\n  const ctc = ctcTop._initialize();\n  const stdlib = ctc.stdlib;\n  const ctc0 = stdlib.T_UInt;\n  const ctc1 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 28));\n  const ctc2 = stdlib.T_Object({\n    contractDuration: ctc0,\n    fundraisingGoal: ctc0,\n    projectDetails: ctc1,\n    projectName: ctc1,\n    share: ctc0\n    });\n  const ctc3 = stdlib.T_Bool;\n  const ctc4 = stdlib.T_Object({\n    amt: ctc0,\n    contribute: ctc3\n    });\n  const ctc5 = stdlib.T_Null;\n  const ctc6 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 32));\n  const ctc7 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 8));\n  const ctc8 = stdlib.T_Bytes(stdlib.checkedBigNumberify('<builtin>', stdlib.UInt_max, 96));\n  const ctc9 = stdlib.T_Token;\n  const ctc10 = stdlib.T_Address;\n  \n  \n  const txn1 = await (ctc.recv({\n    didSend: false,\n    evt_cnt: 1,\n    funcNum: 0,\n    out_tys: [ctc2],\n    timeoutAt: undefined,\n    waitIfNotPresent: false\n    }));\n  const {data: [v358], secs: v360, time: v359, didSend: v28, from: v357 } = txn1;\n  ;\n  const v365 = stdlib.protect(ctc4, await interact.sponsor(v358), {\n    at: './index.rsh:74:48:application',\n    fs: ['at ./index.rsh:73:9:application call to [unknown function] (defined at: ./index.rsh:73:13:function exp)'],\n    msg: 'sponsor',\n    who: 'Sponsor'\n    });\n  \n  const txn2 = await (ctc.sendrecv({\n    args: [v357, v365],\n    evt_cnt: 1,\n    funcNum: 1,\n    lct: v359,\n    onlyIf: true,\n    out_tys: [ctc4],\n    pay: [stdlib.checkedBigNumberify('./index.rsh:76:5:decimal', stdlib.UInt_max, 0), []],\n    sim_p: (async (txn2) => {\n      const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n      \n      const {data: [v367], secs: v369, time: v368, didSend: v42, from: v366 } = txn2;\n      \n      sim_r.txns.push({\n        amt: stdlib.checkedBigNumberify('./index.rsh:76:5:decimal', stdlib.UInt_max, 0),\n        kind: 'to',\n        tok: undefined\n        });\n      const v371 = v367.contribute;\n      if (v371) {\n        sim_r.isHalt = false;\n        }\n      else {\n        sim_r.txns.push({\n          kind: 'halt',\n          tok: undefined\n          })\n        sim_r.isHalt = true;\n        }\n      return sim_r;\n      }),\n    soloSend: true,\n    timeoutAt: undefined,\n    tys: [ctc10, ctc4],\n    waitIfNotPresent: false\n    }));\n  const {data: [v367], secs: v369, time: v368, didSend: v42, from: v366 } = txn2;\n  ;\n  const v371 = v367.contribute;\n  if (v371) {\n    const txn3 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 1,\n      funcNum: 2,\n      out_tys: [ctc0],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const {data: [v383], secs: v385, time: v384, didSend: v69, from: v382 } = txn3;\n    ;\n    const v387 = stdlib.addressEq(v357, v382);\n    stdlib.assert(v387, {\n      at: './index.rsh:90:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n      });\n    const txn4 = await (ctc.sendrecv({\n      args: [v357, v366, v383],\n      evt_cnt: 0,\n      funcNum: 3,\n      lct: v384,\n      onlyIf: true,\n      out_tys: [],\n      pay: [v383, []],\n      sim_p: (async (txn4) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [], secs: v390, time: v389, didSend: v76, from: v388 } = txn4;\n        \n        sim_r.txns.push({\n          amt: v383,\n          kind: 'to',\n          tok: undefined\n          });\n        const v393 = stdlib.addressEq(v366, v388);\n        stdlib.assert(v393, {\n          at: './index.rsh:94:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n          });\n        \n        sim_r.txns.push({\n          amt: v383,\n          kind: 'from',\n          to: v357,\n          tok: undefined\n          });\n        \n        sim_r.isHalt = false;\n        \n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc10, ctc10, ctc0],\n      waitIfNotPresent: false\n      }));\n    const {data: [], secs: v390, time: v389, didSend: v76, from: v388 } = txn4;\n    ;\n    const v393 = stdlib.addressEq(v366, v388);\n    stdlib.assert(v393, {\n      at: './index.rsh:94:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n      });\n    stdlib.protect(ctc5, await interact.reportPayment(v383), {\n      at: './index.rsh:95:45:application',\n      fs: ['at ./index.rsh:95:7:application call to [unknown function] (defined at: ./index.rsh:95:20:function exp)'],\n      msg: 'reportPayment',\n      who: 'Sponsor'\n      });\n    \n    ;\n    stdlib.protect(ctc5, await interact.reportTransfer(v383), {\n      at: './index.rsh:97:46:application',\n      fs: ['at ./index.rsh:97:7:application call to [unknown function] (defined at: ./index.rsh:97:20:function exp)'],\n      msg: 'reportTransfer',\n      who: 'Sponsor'\n      });\n    \n    const txn5 = await (ctc.recv({\n      didSend: false,\n      evt_cnt: 6,\n      funcNum: 4,\n      out_tys: [ctc6, ctc7, ctc8, ctc6, ctc0, ctc0],\n      timeoutAt: undefined,\n      waitIfNotPresent: false\n      }));\n    const {data: [v412, v413, v414, v415, v416, v417], secs: v419, time: v418, didSend: v114, from: v411 } = txn5;\n    ;\n    const v421 = stdlib.addressEq(v357, v411);\n    stdlib.assert(v421, {\n      at: './index.rsh:107:6:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n      });\n    const v422 = undefined;\n    const v423 = await txn5.getOutput('internal', 'v422', ctc9, v422);\n    const txn6 = await (ctc.sendrecv({\n      args: [v357, v366, v416, v423],\n      evt_cnt: 0,\n      funcNum: 5,\n      lct: v418,\n      onlyIf: true,\n      out_tys: [],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:116:5:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn6) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [], secs: v428, time: v427, didSend: v127, from: v426 } = txn6;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:116:5:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v430 = stdlib.addressEq(v366, v426);\n        stdlib.assert(v430, {\n          at: './index.rsh:116:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n          });\n        \n        sim_r.isHalt = false;\n        \n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc10, ctc10, ctc0, ctc9],\n      waitIfNotPresent: false\n      }));\n    const {data: [], secs: v428, time: v427, didSend: v127, from: v426 } = txn6;\n    ;\n    const v430 = stdlib.addressEq(v366, v426);\n    stdlib.assert(v430, {\n      at: './index.rsh:116:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n      });\n    const v432 = {\n      metadata: v415,\n      name: v412,\n      supply: v416,\n      symbol: v413,\n      url: v414\n      };\n    stdlib.protect(ctc5, await interact.reportTokenMinted(v423, v432), {\n      at: './index.rsh:1:39:application',\n      fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:117:31:application call to \"liftedInteract\" (defined at: ./index.rsh:117:31:application)'],\n      msg: 'reportTokenMinted',\n      who: 'Sponsor'\n      });\n    \n    const txn7 = await (ctc.sendrecv({\n      args: [v357, v366, v416, v423],\n      evt_cnt: 0,\n      funcNum: 6,\n      lct: v427,\n      onlyIf: true,\n      out_tys: [],\n      pay: [stdlib.checkedBigNumberify('./index.rsh:132:5:decimal', stdlib.UInt_max, 0), []],\n      sim_p: (async (txn7) => {\n        const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n        \n        const {data: [], secs: v435, time: v434, didSend: v138, from: v433 } = txn7;\n        \n        sim_r.txns.push({\n          amt: stdlib.checkedBigNumberify('./index.rsh:132:5:decimal', stdlib.UInt_max, 0),\n          kind: 'to',\n          tok: undefined\n          });\n        const v437 = stdlib.addressEq(v366, v433);\n        stdlib.assert(v437, {\n          at: './index.rsh:132:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n          });\n        const v438 = stdlib.addressEq(v366, v357);\n        const v440 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:121:40:decimal', stdlib.UInt_max, 40), v416);\n        const v441 = stdlib.div(v440, stdlib.checkedBigNumberify('./index.rsh:121:55:decimal', stdlib.UInt_max, 100));\n        const v442 = stdlib.ge(v416, v441);\n        const v443 = v438 ? v442 : false;\n        if (v443) {\n          const v449 = stdlib.sub(v416, v441);\n          sim_r.txns.push({\n            amt: v441,\n            kind: 'from',\n            to: v366,\n            tok: v423\n            });\n          \n          sim_r.isHalt = false;\n          }\n        else {\n          if (v442) {\n            const v634 = stdlib.sub(v416, v441);\n            sim_r.txns.push({\n              amt: v441,\n              kind: 'from',\n              to: v366,\n              tok: v423\n              });\n            \n            sim_r.isHalt = false;\n            }\n          else {\n            sim_r.isHalt = false;\n            }}\n        return sim_r;\n        }),\n      soloSend: true,\n      timeoutAt: undefined,\n      tys: [ctc10, ctc10, ctc0, ctc9],\n      waitIfNotPresent: false\n      }));\n    const {data: [], secs: v435, time: v434, didSend: v138, from: v433 } = txn7;\n    ;\n    const v437 = stdlib.addressEq(v366, v433);\n    stdlib.assert(v437, {\n      at: './index.rsh:132:5:dot',\n      fs: [],\n      msg: 'sender correct',\n      who: 'Sponsor'\n      });\n    const v438 = stdlib.addressEq(v366, v357);\n    const v440 = stdlib.mul(stdlib.checkedBigNumberify('./index.rsh:121:40:decimal', stdlib.UInt_max, 40), v416);\n    const v441 = stdlib.div(v440, stdlib.checkedBigNumberify('./index.rsh:121:55:decimal', stdlib.UInt_max, 100));\n    const v442 = stdlib.ge(v416, v441);\n    const v443 = v438 ? v442 : false;\n    if (v443) {\n      const v449 = stdlib.sub(v416, v441);\n      ;\n      stdlib.protect(ctc5, await interact.didTransfer(true, v441), {\n        at: './index.rsh:1:39:application',\n        fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:123:31:application call to \"liftedInteract\" (defined at: ./index.rsh:123:31:application)', 'at ./index.rsh:133:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n        msg: 'didTransfer',\n        who: 'Sponsor'\n        });\n      \n      const txn8 = await (ctc.recv({\n        didSend: false,\n        evt_cnt: 0,\n        funcNum: 7,\n        out_tys: [],\n        timeoutAt: undefined,\n        waitIfNotPresent: false\n        }));\n      const {data: [], secs: v456, time: v455, didSend: v179, from: v454 } = txn8;\n      ;\n      const v458 = stdlib.addressEq(v357, v454);\n      stdlib.assert(v458, {\n        at: './index.rsh:135:6:dot',\n        fs: [],\n        msg: 'sender correct',\n        who: 'Sponsor'\n        });\n      const v459 = stdlib.addressEq(v357, v357);\n      const v463 = stdlib.ge(v449, v441);\n      const v464 = v459 ? v463 : false;\n      if (v464) {\n        const v470 = stdlib.sub(v449, v441);\n        ;\n        const txn9 = await (ctc.sendrecv({\n          args: [v357, v366, v416, v423, v470],\n          evt_cnt: 0,\n          funcNum: 8,\n          lct: v455,\n          onlyIf: true,\n          out_tys: [],\n          pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n          sim_p: (async (txn9) => {\n            const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n            \n            const {data: [], secs: v477, time: v476, didSend: v220, from: v475 } = txn9;\n            \n            sim_r.txns.push({\n              amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n              kind: 'to',\n              tok: undefined\n              });\n            const v479 = stdlib.addressEq(v366, v475);\n            stdlib.assert(v479, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            sim_r.txns.push({\n              amt: v470,\n              kind: 'from',\n              to: v357,\n              tok: v423\n              });\n            \n            const v487 = v476;\n            \n            if (await (async () => {\n              \n              return true;})()) {\n              sim_r.isHalt = false;\n              }\n            else {\n              stdlib.simTokenBurn(sim_r, v423, v416);\n              stdlib.simTokenDestroy(sim_r, v423);\n              sim_r.txns.push({\n                kind: 'halt',\n                tok: undefined\n                })\n              sim_r.isHalt = true;\n              }\n            return sim_r;\n            }),\n          soloSend: true,\n          timeoutAt: undefined,\n          tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v477, time: v476, didSend: v220, from: v475 } = txn9;\n        ;\n        const v479 = stdlib.addressEq(v366, v475);\n        stdlib.assert(v479, {\n          at: './index.rsh:139:5:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n          });\n        ;\n        stdlib.protect(ctc5, await interact.programEnded(), {\n          at: './index.rsh:141:44:application',\n          fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n          msg: 'programEnded',\n          who: 'Sponsor'\n          });\n        \n        let v487 = v476;\n        \n        while (await (async () => {\n          \n          return true;})()) {\n          const txn10 = await (ctc.sendrecv({\n            args: [v366, v416, v423],\n            evt_cnt: 0,\n            funcNum: 10,\n            lct: v487,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn10) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const {data: [], secs: v499, time: v498, didSend: v239, from: v497 } = txn10;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v501 = stdlib.addressEq(v366, v497);\n              stdlib.assert(v501, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              const cv487 = v498;\n              \n              await (async () => {\n                const v487 = cv487;\n                \n                if (await (async () => {\n                  \n                  return true;})()) {\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  }})();\n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc0, ctc9],\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v499, time: v498, didSend: v239, from: v497 } = txn10;\n          ;\n          const v501 = stdlib.addressEq(v366, v497);\n          stdlib.assert(v501, {\n            at: './index.rsh:146:7:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n            });\n          const cv487 = v498;\n          \n          v487 = cv487;\n          \n          continue;\n          \n          }\n        undefined;\n        undefined;\n        stdlib.protect(ctc5, await interact.reportExit(), {\n          at: './index.rsh:152:42:application',\n          fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n          msg: 'reportExit',\n          who: 'Sponsor'\n          });\n        \n        return;\n        \n        \n        }\n      else {\n        if (v463) {\n          const v529 = stdlib.sub(v449, v441);\n          ;\n          const txn9 = await (ctc.sendrecv({\n            args: [v357, v366, v416, v423, v529],\n            evt_cnt: 0,\n            funcNum: 11,\n            lct: v455,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn9) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const {data: [], secs: v536, time: v535, didSend: v220, from: v534 } = txn9;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v538 = stdlib.addressEq(v366, v534);\n              stdlib.assert(v538, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              sim_r.txns.push({\n                amt: v529,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              const v546 = v535;\n              \n              if (await (async () => {\n                \n                return true;})()) {\n                sim_r.isHalt = false;\n                }\n              else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }\n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v536, time: v535, didSend: v220, from: v534 } = txn9;\n          ;\n          const v538 = stdlib.addressEq(v366, v534);\n          stdlib.assert(v538, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n            });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n            });\n          \n          let v546 = v535;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 13,\n              lct: v546,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn10) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v558, time: v557, didSend: v239, from: v556 } = txn10;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v560 = stdlib.addressEq(v366, v556);\n                stdlib.assert(v560, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                const cv546 = v557;\n                \n                await (async () => {\n                  const v546 = cv546;\n                  \n                  if (await (async () => {\n                    \n                    return true;})()) {\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    }})();\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v558, time: v557, didSend: v239, from: v556 } = txn10;\n            ;\n            const v560 = stdlib.addressEq(v366, v556);\n            stdlib.assert(v560, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            const cv546 = v557;\n            \n            v546 = cv546;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n            });\n          \n          return;\n          \n          \n          }\n        else {\n          const txn9 = await (ctc.sendrecv({\n            args: [v357, v366, v416, v423, v449],\n            evt_cnt: 0,\n            funcNum: 14,\n            lct: v455,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn9) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const {data: [], secs: v582, time: v581, didSend: v220, from: v580 } = txn9;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v584 = stdlib.addressEq(v366, v580);\n              stdlib.assert(v584, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              sim_r.txns.push({\n                amt: v449,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              const v592 = v581;\n              \n              if (await (async () => {\n                \n                return true;})()) {\n                sim_r.isHalt = false;\n                }\n              else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }\n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v582, time: v581, didSend: v220, from: v580 } = txn9;\n          ;\n          const v584 = stdlib.addressEq(v366, v580);\n          stdlib.assert(v584, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n            });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n            });\n          \n          let v592 = v581;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 16,\n              lct: v592,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn10) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v604, time: v603, didSend: v239, from: v602 } = txn10;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v606 = stdlib.addressEq(v366, v602);\n                stdlib.assert(v606, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                const cv592 = v603;\n                \n                await (async () => {\n                  const v592 = cv592;\n                  \n                  if (await (async () => {\n                    \n                    return true;})()) {\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    }})();\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v604, time: v603, didSend: v239, from: v602 } = txn10;\n            ;\n            const v606 = stdlib.addressEq(v366, v602);\n            stdlib.assert(v606, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            const cv592 = v603;\n            \n            v592 = cv592;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n            });\n          \n          return;\n          \n          \n          }}\n      \n      }\n    else {\n      if (v442) {\n        const v634 = stdlib.sub(v416, v441);\n        ;\n        stdlib.protect(ctc5, await interact.didTransfer(true, v441), {\n          at: './index.rsh:1:39:application',\n          fs: ['at ./index.rsh:1:21:application call to [unknown function] (defined at: ./index.rsh:1:25:function exp)', 'at ./index.rsh:127:33:application call to \"liftedInteract\" (defined at: ./index.rsh:127:33:application)', 'at ./index.rsh:133:14:application call to \"doTransfer1\" (defined at: ./index.rsh:120:35:function exp)'],\n          msg: 'didTransfer',\n          who: 'Sponsor'\n          });\n        \n        const txn8 = await (ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 17,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v641, time: v640, didSend: v179, from: v639 } = txn8;\n        ;\n        const v643 = stdlib.addressEq(v357, v639);\n        stdlib.assert(v643, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n          });\n        const v644 = stdlib.addressEq(v357, v357);\n        const v648 = stdlib.ge(v634, v441);\n        const v649 = v644 ? v648 : false;\n        if (v649) {\n          const v655 = stdlib.sub(v634, v441);\n          ;\n          const txn9 = await (ctc.sendrecv({\n            args: [v357, v366, v416, v423, v655],\n            evt_cnt: 0,\n            funcNum: 18,\n            lct: v640,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn9) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const {data: [], secs: v662, time: v661, didSend: v220, from: v660 } = txn9;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v664 = stdlib.addressEq(v366, v660);\n              stdlib.assert(v664, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              sim_r.txns.push({\n                amt: v655,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              const v672 = v661;\n              \n              if (await (async () => {\n                \n                return true;})()) {\n                sim_r.isHalt = false;\n                }\n              else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }\n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v662, time: v661, didSend: v220, from: v660 } = txn9;\n          ;\n          const v664 = stdlib.addressEq(v366, v660);\n          stdlib.assert(v664, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n            });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n            });\n          \n          let v672 = v661;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 20,\n              lct: v672,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn10) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v684, time: v683, didSend: v239, from: v682 } = txn10;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v686 = stdlib.addressEq(v366, v682);\n                stdlib.assert(v686, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                const cv672 = v683;\n                \n                await (async () => {\n                  const v672 = cv672;\n                  \n                  if (await (async () => {\n                    \n                    return true;})()) {\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    }})();\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v684, time: v683, didSend: v239, from: v682 } = txn10;\n            ;\n            const v686 = stdlib.addressEq(v366, v682);\n            stdlib.assert(v686, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            const cv672 = v683;\n            \n            v672 = cv672;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n            });\n          \n          return;\n          \n          \n          }\n        else {\n          if (v648) {\n            const v714 = stdlib.sub(v634, v441);\n            ;\n            const txn9 = await (ctc.sendrecv({\n              args: [v357, v366, v416, v423, v714],\n              evt_cnt: 0,\n              funcNum: 21,\n              lct: v640,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn9) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v721, time: v720, didSend: v220, from: v719 } = txn9;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v723 = stdlib.addressEq(v366, v719);\n                stdlib.assert(v723, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                sim_r.txns.push({\n                  amt: v714,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                  });\n                \n                const v731 = v720;\n                \n                if (await (async () => {\n                  \n                  return true;})()) {\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  }\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v721, time: v720, didSend: v220, from: v719 } = txn9;\n            ;\n            const v723 = stdlib.addressEq(v366, v719);\n            stdlib.assert(v723, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n              });\n            \n            let v731 = v720;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 23,\n                lct: v731,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn10) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                  \n                  const {data: [], secs: v743, time: v742, didSend: v239, from: v741 } = txn10;\n                  \n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                    });\n                  const v745 = stdlib.addressEq(v366, v741);\n                  stdlib.assert(v745, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                    });\n                  const cv731 = v742;\n                  \n                  await (async () => {\n                    const v731 = cv731;\n                    \n                    if (await (async () => {\n                      \n                      return true;})()) {\n                      sim_r.isHalt = false;\n                      }\n                    else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                        })\n                      sim_r.isHalt = true;\n                      }})();\n                  return sim_r;\n                  }),\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v743, time: v742, didSend: v239, from: v741 } = txn10;\n              ;\n              const v745 = stdlib.addressEq(v366, v741);\n              stdlib.assert(v745, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              const cv731 = v742;\n              \n              v731 = cv731;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n              });\n            \n            return;\n            \n            \n            }\n          else {\n            const txn9 = await (ctc.sendrecv({\n              args: [v357, v366, v416, v423, v634],\n              evt_cnt: 0,\n              funcNum: 24,\n              lct: v640,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn9) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v767, time: v766, didSend: v220, from: v765 } = txn9;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v769 = stdlib.addressEq(v366, v765);\n                stdlib.assert(v769, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                sim_r.txns.push({\n                  amt: v634,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                  });\n                \n                const v777 = v766;\n                \n                if (await (async () => {\n                  \n                  return true;})()) {\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  }\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v767, time: v766, didSend: v220, from: v765 } = txn9;\n            ;\n            const v769 = stdlib.addressEq(v366, v765);\n            stdlib.assert(v769, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n              });\n            \n            let v777 = v766;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 26,\n                lct: v777,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn10) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                  \n                  const {data: [], secs: v789, time: v788, didSend: v239, from: v787 } = txn10;\n                  \n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                    });\n                  const v791 = stdlib.addressEq(v366, v787);\n                  stdlib.assert(v791, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                    });\n                  const cv777 = v788;\n                  \n                  await (async () => {\n                    const v777 = cv777;\n                    \n                    if (await (async () => {\n                      \n                      return true;})()) {\n                      sim_r.isHalt = false;\n                      }\n                    else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                        })\n                      sim_r.isHalt = true;\n                      }})();\n                  return sim_r;\n                  }),\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v789, time: v788, didSend: v239, from: v787 } = txn10;\n              ;\n              const v791 = stdlib.addressEq(v366, v787);\n              stdlib.assert(v791, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              const cv777 = v788;\n              \n              v777 = cv777;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n              });\n            \n            return;\n            \n            \n            }}\n        \n        }\n      else {\n        const txn8 = await (ctc.recv({\n          didSend: false,\n          evt_cnt: 0,\n          funcNum: 27,\n          out_tys: [],\n          timeoutAt: undefined,\n          waitIfNotPresent: false\n          }));\n        const {data: [], secs: v813, time: v812, didSend: v179, from: v811 } = txn8;\n        ;\n        const v815 = stdlib.addressEq(v357, v811);\n        stdlib.assert(v815, {\n          at: './index.rsh:135:6:dot',\n          fs: [],\n          msg: 'sender correct',\n          who: 'Sponsor'\n          });\n        const v816 = stdlib.addressEq(v357, v357);\n        const v821 = v816 ? v442 : false;\n        if (v821) {\n          const v827 = stdlib.sub(v416, v441);\n          ;\n          const txn9 = await (ctc.sendrecv({\n            args: [v357, v366, v416, v423, v827],\n            evt_cnt: 0,\n            funcNum: 28,\n            lct: v812,\n            onlyIf: true,\n            out_tys: [],\n            pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n            sim_p: (async (txn9) => {\n              const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n              \n              const {data: [], secs: v834, time: v833, didSend: v220, from: v832 } = txn9;\n              \n              sim_r.txns.push({\n                amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                kind: 'to',\n                tok: undefined\n                });\n              const v836 = stdlib.addressEq(v366, v832);\n              stdlib.assert(v836, {\n                at: './index.rsh:139:5:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              sim_r.txns.push({\n                amt: v827,\n                kind: 'from',\n                to: v357,\n                tok: v423\n                });\n              \n              const v844 = v833;\n              \n              if (await (async () => {\n                \n                return true;})()) {\n                sim_r.isHalt = false;\n                }\n              else {\n                stdlib.simTokenBurn(sim_r, v423, v416);\n                stdlib.simTokenDestroy(sim_r, v423);\n                sim_r.txns.push({\n                  kind: 'halt',\n                  tok: undefined\n                  })\n                sim_r.isHalt = true;\n                }\n              return sim_r;\n              }),\n            soloSend: true,\n            timeoutAt: undefined,\n            tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n            waitIfNotPresent: false\n            }));\n          const {data: [], secs: v834, time: v833, didSend: v220, from: v832 } = txn9;\n          ;\n          const v836 = stdlib.addressEq(v366, v832);\n          stdlib.assert(v836, {\n            at: './index.rsh:139:5:dot',\n            fs: [],\n            msg: 'sender correct',\n            who: 'Sponsor'\n            });\n          ;\n          stdlib.protect(ctc5, await interact.programEnded(), {\n            at: './index.rsh:141:44:application',\n            fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n            msg: 'programEnded',\n            who: 'Sponsor'\n            });\n          \n          let v844 = v833;\n          \n          while (await (async () => {\n            \n            return true;})()) {\n            const txn10 = await (ctc.sendrecv({\n              args: [v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 30,\n              lct: v844,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn10) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v856, time: v855, didSend: v239, from: v854 } = txn10;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v858 = stdlib.addressEq(v366, v854);\n                stdlib.assert(v858, {\n                  at: './index.rsh:146:7:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                const cv844 = v855;\n                \n                await (async () => {\n                  const v844 = cv844;\n                  \n                  if (await (async () => {\n                    \n                    return true;})()) {\n                    sim_r.isHalt = false;\n                    }\n                  else {\n                    stdlib.simTokenBurn(sim_r, v423, v416);\n                    stdlib.simTokenDestroy(sim_r, v423);\n                    sim_r.txns.push({\n                      kind: 'halt',\n                      tok: undefined\n                      })\n                    sim_r.isHalt = true;\n                    }})();\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v856, time: v855, didSend: v239, from: v854 } = txn10;\n            ;\n            const v858 = stdlib.addressEq(v366, v854);\n            stdlib.assert(v858, {\n              at: './index.rsh:146:7:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            const cv844 = v855;\n            \n            v844 = cv844;\n            \n            continue;\n            \n            }\n          undefined;\n          undefined;\n          stdlib.protect(ctc5, await interact.reportExit(), {\n            at: './index.rsh:152:42:application',\n            fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n            msg: 'reportExit',\n            who: 'Sponsor'\n            });\n          \n          return;\n          \n          \n          }\n        else {\n          if (v442) {\n            const v886 = stdlib.sub(v416, v441);\n            ;\n            const txn9 = await (ctc.sendrecv({\n              args: [v357, v366, v416, v423, v886],\n              evt_cnt: 0,\n              funcNum: 31,\n              lct: v812,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn9) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v893, time: v892, didSend: v220, from: v891 } = txn9;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v895 = stdlib.addressEq(v366, v891);\n                stdlib.assert(v895, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                sim_r.txns.push({\n                  amt: v886,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                  });\n                \n                const v903 = v892;\n                \n                if (await (async () => {\n                  \n                  return true;})()) {\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  }\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9, ctc0],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v893, time: v892, didSend: v220, from: v891 } = txn9;\n            ;\n            const v895 = stdlib.addressEq(v366, v891);\n            stdlib.assert(v895, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n              });\n            \n            let v903 = v892;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 33,\n                lct: v903,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn10) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                  \n                  const {data: [], secs: v915, time: v914, didSend: v239, from: v913 } = txn10;\n                  \n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                    });\n                  const v917 = stdlib.addressEq(v366, v913);\n                  stdlib.assert(v917, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                    });\n                  const cv903 = v914;\n                  \n                  await (async () => {\n                    const v903 = cv903;\n                    \n                    if (await (async () => {\n                      \n                      return true;})()) {\n                      sim_r.isHalt = false;\n                      }\n                    else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                        })\n                      sim_r.isHalt = true;\n                      }})();\n                  return sim_r;\n                  }),\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v915, time: v914, didSend: v239, from: v913 } = txn10;\n              ;\n              const v917 = stdlib.addressEq(v366, v913);\n              stdlib.assert(v917, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              const cv903 = v914;\n              \n              v903 = cv903;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n              });\n            \n            return;\n            \n            \n            }\n          else {\n            const txn9 = await (ctc.sendrecv({\n              args: [v357, v366, v416, v423],\n              evt_cnt: 0,\n              funcNum: 34,\n              lct: v812,\n              onlyIf: true,\n              out_tys: [],\n              pay: [stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0), []],\n              sim_p: (async (txn9) => {\n                const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                \n                const {data: [], secs: v939, time: v938, didSend: v220, from: v937 } = txn9;\n                \n                sim_r.txns.push({\n                  amt: stdlib.checkedBigNumberify('./index.rsh:139:5:decimal', stdlib.UInt_max, 0),\n                  kind: 'to',\n                  tok: undefined\n                  });\n                const v941 = stdlib.addressEq(v366, v937);\n                stdlib.assert(v941, {\n                  at: './index.rsh:139:5:dot',\n                  fs: [],\n                  msg: 'sender correct',\n                  who: 'Sponsor'\n                  });\n                sim_r.txns.push({\n                  amt: v416,\n                  kind: 'from',\n                  to: v357,\n                  tok: v423\n                  });\n                \n                const v949 = v938;\n                \n                if (await (async () => {\n                  \n                  return true;})()) {\n                  sim_r.isHalt = false;\n                  }\n                else {\n                  stdlib.simTokenBurn(sim_r, v423, v416);\n                  stdlib.simTokenDestroy(sim_r, v423);\n                  sim_r.txns.push({\n                    kind: 'halt',\n                    tok: undefined\n                    })\n                  sim_r.isHalt = true;\n                  }\n                return sim_r;\n                }),\n              soloSend: true,\n              timeoutAt: undefined,\n              tys: [ctc10, ctc10, ctc0, ctc9],\n              waitIfNotPresent: false\n              }));\n            const {data: [], secs: v939, time: v938, didSend: v220, from: v937 } = txn9;\n            ;\n            const v941 = stdlib.addressEq(v366, v937);\n            stdlib.assert(v941, {\n              at: './index.rsh:139:5:dot',\n              fs: [],\n              msg: 'sender correct',\n              who: 'Sponsor'\n              });\n            ;\n            stdlib.protect(ctc5, await interact.programEnded(), {\n              at: './index.rsh:141:44:application',\n              fs: ['at ./index.rsh:141:7:application call to [unknown function] (defined at: ./index.rsh:141:20:function exp)'],\n              msg: 'programEnded',\n              who: 'Sponsor'\n              });\n            \n            let v949 = v938;\n            \n            while (await (async () => {\n              \n              return true;})()) {\n              const txn10 = await (ctc.sendrecv({\n                args: [v366, v416, v423],\n                evt_cnt: 0,\n                funcNum: 36,\n                lct: v949,\n                onlyIf: true,\n                out_tys: [],\n                pay: [stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0), []],\n                sim_p: (async (txn10) => {\n                  const sim_r = { txns: [], mapRefs: [], mapsPrev: [], mapsNext: [] };\n                  \n                  const {data: [], secs: v961, time: v960, didSend: v239, from: v959 } = txn10;\n                  \n                  sim_r.txns.push({\n                    amt: stdlib.checkedBigNumberify('./index.rsh:146:7:decimal', stdlib.UInt_max, 0),\n                    kind: 'to',\n                    tok: undefined\n                    });\n                  const v963 = stdlib.addressEq(v366, v959);\n                  stdlib.assert(v963, {\n                    at: './index.rsh:146:7:dot',\n                    fs: [],\n                    msg: 'sender correct',\n                    who: 'Sponsor'\n                    });\n                  const cv949 = v960;\n                  \n                  await (async () => {\n                    const v949 = cv949;\n                    \n                    if (await (async () => {\n                      \n                      return true;})()) {\n                      sim_r.isHalt = false;\n                      }\n                    else {\n                      stdlib.simTokenBurn(sim_r, v423, v416);\n                      stdlib.simTokenDestroy(sim_r, v423);\n                      sim_r.txns.push({\n                        kind: 'halt',\n                        tok: undefined\n                        })\n                      sim_r.isHalt = true;\n                      }})();\n                  return sim_r;\n                  }),\n                soloSend: true,\n                timeoutAt: undefined,\n                tys: [ctc10, ctc0, ctc9],\n                waitIfNotPresent: false\n                }));\n              const {data: [], secs: v961, time: v960, didSend: v239, from: v959 } = txn10;\n              ;\n              const v963 = stdlib.addressEq(v366, v959);\n              stdlib.assert(v963, {\n                at: './index.rsh:146:7:dot',\n                fs: [],\n                msg: 'sender correct',\n                who: 'Sponsor'\n                });\n              const cv949 = v960;\n              \n              v949 = cv949;\n              \n              continue;\n              \n              }\n            undefined;\n            undefined;\n            stdlib.protect(ctc5, await interact.reportExit(), {\n              at: './index.rsh:152:42:application',\n              fs: ['at ./index.rsh:152:7:application call to [unknown function] (defined at: ./index.rsh:152:20:function exp)'],\n              msg: 'reportExit',\n              who: 'Sponsor'\n              });\n            \n            return;\n            \n            \n            }}\n        \n        }}\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    }\n  else {\n    stdlib.protect(ctc5, await interact.reportCancellation(), {\n      at: './index.rsh:79:52:application',\n      fs: ['at ./index.rsh:79:9:application call to [unknown function] (defined at: ./index.rsh:79:22:function exp)'],\n      msg: 'reportCancellation',\n      who: 'Sponsor'\n      });\n    \n    stdlib.protect(ctc5, await interact.reportExit(), {\n      at: './index.rsh:80:44:application',\n      fs: ['at ./index.rsh:80:9:application call to [unknown function] (defined at: ./index.rsh:80:22:function exp)'],\n      msg: 'reportExit',\n      who: 'Sponsor'\n      });\n    \n    return;\n    }\n  \n  \n  \n  };\nconst _ALGO = {\n  appApproval: `#pragma version 5\ntxn RekeyTo\nglobal ZeroAddress\n==\nassert\ntxn Lease\nglobal ZeroAddress\n==\nassert\nint 0\nstore 0\ntxn ApplicationID\nbz alloc\nbyte base64()\napp_global_get\ndup\nint 0\nextract_uint64\nstore 1\nint 8\nextract_uint64\nstore 2\ntxn NumAppArgs\nint 3\n==\nassert\ntxna ApplicationArgs 0\nbtoi\npreamble:\n// Handler 0\ndup\nint 0\n==\nbz l0_afterHandler0\npop\n// check step\nint 0\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nbyte base64()\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 80\n==\nassert\ndup\nstore 255\npop\n// \"CheckPay\"\n// \"./index.rsh:67:6:dot\"\n// \"[]\"\nint 100000\ndup\nbz l1_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl1_checkTxnK:\npop\n// \"CheckPay\"\n// \"./index.rsh:67:6:dot\"\n// \"[]\"\ntxn Sender\nint 1\nbzero\ndig 1\nextract 0 32\napp_global_put\npop\nint 1\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl0_afterHandler0:\n// Handler 1\ndup\nint 1\n==\nbz l2_afterHandler1\npop\n// check step\nint 1\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nstore 255\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 9\n==\nassert\ndup\nstore 254\npop\n// \"CheckPay\"\n// \"./index.rsh:76:5:dot\"\n// \"[]\"\nload 254\nextract 8 1\nbtoi\nbz l3_ifF\nload 255\ntxn Sender\nconcat\nint 1\nbzero\ndig 1\nextract 0 64\napp_global_put\npop\nint 2\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl3_ifF:\nint 0\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nglobal CreatorAddress\nitxn_field CloseRemainderTo\nglobal CurrentApplicationAddress\nitxn_field Receiver\nitxn_submit\nint 0\nl4_makeTxnK:\npop\ntxn OnCompletion\nint DeleteApplication\n==\nassert\nb updateState\nl2_afterHandler1:\n// Handler 2\ndup\nint 2\n==\nbz l5_afterHandler2\npop\n// check step\nint 2\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 8\n==\nassert\ndup\nbtoi\nstore 253\npop\n// \"CheckPay\"\n// \"./index.rsh:90:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:90:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 72\napp_global_put\npop\nint 3\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl5_afterHandler2:\n// Handler 3\ndup\nint 3\n==\nbz l6_afterHandler3\npop\n// check step\nint 3\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:94:5:dot\"\n// \"[]\"\nload 253\ndup\nbz l7_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl7_checkTxnK:\npop\n// Just \"sender correct\"\n// \"./index.rsh:94:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 253\ndup\nbz l8_makeTxnK\nitxn_begin\nitxn_field Amount\nint pay\nitxn_field TypeEnum\nload 255\nitxn_field Receiver\nitxn_submit\nint 0\nl8_makeTxnK:\npop\nload 255\nload 254\nconcat\nint 1\nbzero\ndig 1\nextract 0 64\napp_global_put\npop\nint 4\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl6_afterHandler3:\n// Handler 4\ndup\nint 4\n==\nbz l9_afterHandler4\npop\n// check step\nint 4\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 184\n==\nassert\ndup\nextract 0 32\nstore 253\ndup\nextract 32 8\nstore 252\ndup\nextract 40 96\nstore 251\ndup\nextract 136 32\nstore 250\ndup\nint 168\nextract_uint64\nstore 249\ndup\nint 176\nextract_uint64\nstore 248\npop\n// \"CheckPay\"\n// \"./index.rsh:107:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:107:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nint 100000\ndup\nbz l10_checkTxnK\nload 0\ndup\nint 1\n+\nstore 0\nswap\ndig 1\ngtxns Amount\n==\nassert\nint pay\ndig 1\ngtxns TypeEnum\n==\nassert\nint 0\ndig 1\ngtxns Fee\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns Lease\n==\nassert\nglobal ZeroAddress\ndig 1\ngtxns RekeyTo\n==\nassert\nglobal CurrentApplicationAddress\ndig 1\ngtxns Receiver\n==\nassert\nl10_checkTxnK:\npop\nitxn_begin\nint acfg\nitxn_field TypeEnum\nload 249\nitxn_field ConfigAssetTotal\nint 6\nitxn_field ConfigAssetDecimals\nload 252\nitxn_field ConfigAssetUnitName\nload 253\nitxn_field ConfigAssetName\nload 251\nitxn_field ConfigAssetURL\nload 250\nitxn_field ConfigAssetMetadataHash\nglobal CurrentApplicationAddress\nitxn_field ConfigAssetManager\nitxn_submit\nitxn CreatedAssetID\nstore 247\nbyte base64(AAAAAAAAAaY=)\nload 247\nitob\nconcat\nlog // 16\nload 247\nstore 246\nload 255\nload 254\nconcat\nload 249\nitob\nconcat\nload 246\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 80\napp_global_put\npop\nint 5\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl9_afterHandler4:\n// Handler 5\ndup\nint 5\n==\nbz l11_afterHandler5\npop\n// check step\nint 5\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:116:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:116:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 80\napp_global_put\npop\nint 6\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl11_afterHandler5:\n// Handler 6\ndup\nint 6\n==\nbz l12_afterHandler6\npop\n// check step\nint 6\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:132:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:132:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nint 40\nload 253\n*\nint 100\n/\nstore 251\nload 253\nload 251\n>=\nstore 250\nload 254\nload 255\n==\nload 250\n&&\nbz l13_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l14_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 254\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl14_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 96\napp_global_put\npop\nint 7\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl13_ifF:\nload 250\nbz l15_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l16_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 254\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl16_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 96\napp_global_put\npop\nint 20\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl15_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 251\nitob\nconcat\nload 250\nitob // bool\nsubstring 7 8\nconcat\nint 1\nbzero\ndig 1\nextract 0 89\napp_global_put\npop\nint 33\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl12_afterHandler6:\n// Handler 7\ndup\nint 7\n==\nbz l17_afterHandler7\npop\n// check step\nint 7\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 250\nload 251\n>=\nstore 249\nload 255\ndup\n==\nload 249\n&&\nbz l18_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l19_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl19_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 8\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl18_ifF:\nload 249\nbz l20_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l21_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl21_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 12\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl20_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 250\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 16\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl17_afterHandler7:\n// Handler 8\ndup\nint 8\n==\nbz l22_afterHandler8\npop\n// check step\nint 8\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l23_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl23_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody9\nl22_afterHandler8:\nl24_afterHandler9:\n// Handler 10\ndup\nint 10\n==\nbz l25_afterHandler10\npop\n// check step\nint 11\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody9\nl25_afterHandler10:\n// Handler 11\ndup\nint 11\n==\nbz l26_afterHandler11\npop\n// check step\nint 12\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l27_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl27_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody12\nl26_afterHandler11:\nl28_afterHandler12:\n// Handler 13\ndup\nint 13\n==\nbz l29_afterHandler13\npop\n// check step\nint 15\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody12\nl29_afterHandler13:\n// Handler 14\ndup\nint 14\n==\nbz l30_afterHandler14\npop\n// check step\nint 16\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l31_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl31_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody15\nl30_afterHandler14:\nl32_afterHandler15:\n// Handler 16\ndup\nint 16\n==\nbz l33_afterHandler16\npop\n// check step\nint 19\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody15\nl33_afterHandler16:\n// Handler 17\ndup\nint 17\n==\nbz l34_afterHandler17\npop\n// check step\nint 20\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nint 88\nextract_uint64\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 250\nload 251\n>=\nstore 249\nload 255\ndup\n==\nload 249\n&&\nbz l35_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l36_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl36_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 21\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl35_ifF:\nload 249\nbz l37_ifF\nload 250\nload 251\n-\nstore 248\nload 251\ndup\nbz l38_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl38_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 248\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 25\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl37_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 250\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 29\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl34_afterHandler17:\n// Handler 18\ndup\nint 18\n==\nbz l39_afterHandler18\npop\n// check step\nint 21\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l40_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl40_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody19\nl39_afterHandler18:\nl41_afterHandler19:\n// Handler 20\ndup\nint 20\n==\nbz l42_afterHandler20\npop\n// check step\nint 24\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody19\nl42_afterHandler20:\n// Handler 21\ndup\nint 21\n==\nbz l43_afterHandler21\npop\n// check step\nint 25\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l44_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl44_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody22\nl43_afterHandler21:\nl45_afterHandler22:\n// Handler 23\ndup\nint 23\n==\nbz l46_afterHandler23\npop\n// check step\nint 28\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody22\nl46_afterHandler23:\n// Handler 24\ndup\nint 24\n==\nbz l47_afterHandler24\npop\n// check step\nint 29\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l48_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl48_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody25\nl47_afterHandler24:\nl49_afterHandler25:\n// Handler 26\ndup\nint 26\n==\nbz l50_afterHandler26\npop\n// check step\nint 32\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody25\nl50_afterHandler26:\n// Handler 27\ndup\nint 27\n==\nbz l51_afterHandler27\npop\n// check step\nint 33\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\ndup\nextract 88 1\nbtoi\nstore 250\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:135:6:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\ndup\n==\nload 250\n&&\nbz l52_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l53_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl53_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 34\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl52_ifF:\nload 250\nbz l54_ifF\nload 253\nload 251\n-\nstore 249\nload 251\ndup\nbz l55_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl55_makeTxnK:\npop\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nload 249\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 88\napp_global_put\npop\nint 38\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl54_ifF:\nload 255\nload 254\nconcat\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 80\napp_global_put\npop\nint 42\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nl51_afterHandler27:\n// Handler 28\ndup\nint 28\n==\nbz l56_afterHandler28\npop\n// check step\nint 34\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l57_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl57_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody29\nl56_afterHandler28:\nl58_afterHandler29:\n// Handler 30\ndup\nint 30\n==\nbz l59_afterHandler30\npop\n// check step\nint 37\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody29\nl59_afterHandler30:\n// Handler 31\ndup\nint 31\n==\nbz l60_afterHandler31\npop\n// check step\nint 38\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\ndup\nint 80\nextract_uint64\nstore 251\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 251\ndup\nbz l61_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl61_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody32\nl60_afterHandler31:\nl62_afterHandler32:\n// Handler 33\ndup\nint 33\n==\nbz l63_afterHandler33\npop\n// check step\nint 41\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody32\nl63_afterHandler33:\n// Handler 34\ndup\nint 34\n==\nbz l64_afterHandler34\npop\n// check step\nint 42\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nextract 32 32\nstore 254\ndup\nint 64\nextract_uint64\nstore 253\ndup\nint 72\nextract_uint64\nstore 252\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:139:5:dot\"\n// \"[]\"\nload 254\ntxn Sender\n==\nassert\nload 253\ndup\nbz l65_makeTxnK\nitxn_begin\nitxn_field AssetAmount\nint axfer\nitxn_field TypeEnum\nload 255\nitxn_field AssetReceiver\nload 252\nitxn_field XferAsset\nitxn_submit\nint 0\nl65_makeTxnK:\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nglobal Round\nitob\nb loopBody35\nl64_afterHandler34:\nl66_afterHandler35:\n// Handler 36\ndup\nint 36\n==\nbz l67_afterHandler36\npop\n// check step\nint 45\nload 1\n==\nassert\n// check time\ntxna ApplicationArgs 1\nbtoi\ndup\nint 0\n==\nswap\nload 2\n==\n||\nassert\nint 1\nbzero\napp_global_get\ndup\nextract 0 32\nstore 255\ndup\nint 32\nextract_uint64\nstore 254\ndup\nint 40\nextract_uint64\nstore 253\npop\ntxna ApplicationArgs 2\ndup\nlen\nint 0\n==\nassert\npop\n// \"CheckPay\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\n// Just \"sender correct\"\n// \"./index.rsh:146:7:dot\"\n// \"[]\"\nload 255\ntxn Sender\n==\nassert\nload 255\nload 254\nitob\nconcat\nload 253\nitob\nconcat\nglobal Round\nitob\nb loopBody35\nl67_afterHandler36:\nint 0\nassert\nloopBody9:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 11\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody12:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 15\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody15:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 19\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody19:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 24\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody22:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 28\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody25:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 32\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody29:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 37\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody32:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 41\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nb updateState\nloopBody35:\ndup\nbtoi\nstore 255\npop\ndup\nextract 0 32\nstore 254\ndup\nint 32\nextract_uint64\nstore 253\ndup\nint 40\nextract_uint64\nstore 252\npop\nload 254\nload 253\nitob\nconcat\nload 252\nitob\nconcat\nint 1\nbzero\ndig 1\nextract 0 48\napp_global_put\npop\nint 45\nstore 1\nglobal Round\nstore 2\ntxn OnCompletion\nint NoOp\n==\nassert\nupdateState:\nbyte base64()\nload 1\nitob\nload 2\nitob\nconcat\napp_global_put\ncheckSize:\nload 0\ndup\ndup\nint 1\n+\nglobal GroupSize\n==\nassert\ntxn GroupIndex\n==\nassert\nint 1000\n*\ntxn Fee\n<=\nassert\ndone:\nint 1\nreturn\nalloc:\ntxn OnCompletion\nint NoOp\n==\nassert\nint 0\nstore 1\nint 0\nstore 2\nb updateState\n`,\n  appClear: `#pragma version 5\nint 0\n`,\n  mapDataKeys: 0,\n  mapDataSize: 0,\n  stateKeys: 1,\n  stateSize: 96,\n  unsupported: [],\n  version: 6\n  };\nconst _ETH = {\n  ABI: `[\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_contractDuration\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_fundraisingGoal\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectDetails\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectName\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_share\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T2\",\n                \"name\": \"v358\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"stateMutability\": \"payable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"msg\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReachError\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_contractDuration\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_fundraisingGoal\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectDetails\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"components\": [\n                      {\n                        \"internalType\": \"bytes28\",\n                        \"name\": \"elem0\",\n                        \"type\": \"bytes28\"\n                      }\n                    ],\n                    \"internalType\": \"struct T1\",\n                    \"name\": \"_projectName\",\n                    \"type\": \"tuple\"\n                  },\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_share\",\n                    \"type\": \"uint256\"\n                  }\n                ],\n                \"internalType\": \"struct T2\",\n                \"name\": \"v358\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T3\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T4\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_amt\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_contribute\",\n                    \"type\": \"bool\"\n                  }\n                ],\n                \"internalType\": \"struct T6\",\n                \"name\": \"v367\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e10\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e11\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e13\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e14\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e16\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e17\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e18\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v383\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e2\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e20\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e21\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e23\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e24\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e26\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e27\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e28\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e3\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e30\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e31\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e33\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e34\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e36\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v412\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes8\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes8\"\n                  }\n                ],\n                \"internalType\": \"struct T16\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem2\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T17\",\n                \"name\": \"v414\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v415\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v416\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v417\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e4\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e5\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e6\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e7\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"indexed\": false,\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_e8\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address payable\",\n        \"name\": \"v0\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_reach_oe_v422\",\n    \"type\": \"event\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCreationTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentState\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"_reachCurrentTime\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_amt\",\n                    \"type\": \"uint256\"\n                  },\n                  {\n                    \"internalType\": \"bool\",\n                    \"name\": \"_contribute\",\n                    \"type\": \"bool\"\n                  }\n                ],\n                \"internalType\": \"struct T6\",\n                \"name\": \"v367\",\n                \"type\": \"tuple\"\n              }\n            ],\n            \"internalType\": \"struct T7\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T8\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m1\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m10\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m11\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m13\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m14\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m16\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m17\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m18\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v383\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T10\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T11\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m2\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m20\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m21\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m23\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m24\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m26\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m27\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m28\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m3\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m30\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m31\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m33\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m34\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m36\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"components\": [\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v412\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes8\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes8\"\n                  }\n                ],\n                \"internalType\": \"struct T16\",\n                \"name\": \"v413\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem1\",\n                    \"type\": \"bytes32\"\n                  },\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem2\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T17\",\n                \"name\": \"v414\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"components\": [\n                  {\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"elem0\",\n                    \"type\": \"bytes32\"\n                  }\n                ],\n                \"internalType\": \"struct T15\",\n                \"name\": \"v415\",\n                \"type\": \"tuple\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v416\",\n                \"type\": \"uint256\"\n              },\n              {\n                \"internalType\": \"uint256\",\n                \"name\": \"v417\",\n                \"type\": \"uint256\"\n              }\n            ],\n            \"internalType\": \"struct T18\",\n            \"name\": \"msg\",\n            \"type\": \"tuple\"\n          }\n        ],\n        \"internalType\": \"struct T19\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m4\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m5\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m6\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m7\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"components\": [\n          {\n            \"internalType\": \"uint256\",\n            \"name\": \"time\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"internalType\": \"bool\",\n            \"name\": \"msg\",\n            \"type\": \"bool\"\n          }\n        ],\n        \"internalType\": \"struct T13\",\n        \"name\": \"_a\",\n        \"type\": \"tuple\"\n      }\n    ],\n    \"name\": \"_reach_m8\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"stateMutability\": \"payable\",\n    \"type\": \"receive\"\n  }\n]`,\n  Bytecode: `0x608060405260405162005be338038062005be38339810160408190526200002691620002a4565b60008055436003556040805182518152602080840151518051828401529081015182840152808301515163ffffffff199081166060808501919091528201515116608080840191909152015160a082015290517fe9c49e48addcb7624d04df619c4e8b0d25e9e4534011f72495595fa65f2e8e709181900360c00190a1620000b13415600762000102565b6040805160208082018352338083526001600081905543905583519182015290910160405160208183030381529060405260029080519060200190620000f99291906200012c565b505050620003a9565b81620001285760405163100960cb60e01b81526004810182905260240160405180910390fd5b5050565b8280546200013a906200036c565b90600052602060002090601f0160209004810192826200015e5760008555620001a9565b82601f106200017957805160ff1916838001178555620001a9565b82800160010185558215620001a9579182015b82811115620001a95782518255916020019190600101906200018c565b50620001b7929150620001bb565b5090565b5b80821115620001b75760008155600101620001bc565b604051602081016001600160401b03811182821017156200020357634e487b7160e01b600052604160045260246000fd5b60405290565b60405160a081016001600160401b03811182821017156200020357634e487b7160e01b600052604160045260246000fd5b6000602082840312156200024d57600080fd5b604051602081016001600160401b03811182821017156200027e57634e487b7160e01b600052604160045260246000fd5b6040528251909150819063ffffffff19811681146200029c57600080fd5b905292915050565b600081830360c0811215620002b857600080fd5b604080519081016001600160401b0381118282101715620002e957634e487b7160e01b600052604160045260246000fd5b6040528351815260a0601f19830112156200030357600080fd5b6200030d620001d2565b91506200031962000209565b60208501518152604085015160208201526200033986606087016200023a565b60408201526200034d86608087016200023a565b606082015260a094909401516080850152928152602083015250919050565b600181811c908216806200038157607f821691505b60208210811415620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b61582a80620003b96000396000f3fe608060405260043610620001df5760003560e01c80638a46175311620000ff578063ab53f2c6116200009b578063e00acef11162000069578063e00acef1146200045e578063e533a29d1462000475578063f19b4352146200048c578063f605335014620004a357005b8063ab53f2c614620003f1578063b18adbd61462000419578063bf2c5b241462000430578063c7980037146200044757005b80638ebe74ee11620000d95780638ebe74ee1462000395578063907f2d7a14620003ac5780639f25181014620003c3578063a035b2e014620003da57005b80638a46175314620003505780638b9fadc814620003675780638e314769146200037e57005b80634e9deb45116200017b578063681598b31162000149578063681598b314620002f457806373b4522c146200030b57806382a6a447146200032257806383230757146200033957005b80634e9deb4514620002985780635471c5a814620002af578063617e78ba14620002c657806364395e4814620002dd57005b80631e93b0f111620001b95780631e93b0f1146200022e5780633711704a146200025357806342414754146200026a57806345f70396146200028157005b806309fcce8714620001e95780630f6640cf14620002005780631b26a4bf146200021757005b36620001e757005b005b620001e7620001fa36600462003fcd565b620004ba565b620001e76200021136600462003fcd565b62000645565b620001e76200022836600462003fcd565b620007cb565b3480156200023b57600080fd5b506003545b6040519081526020015b60405180910390f35b620001e76200026436600462003fec565b6200096d565b620001e76200027b36600462003fcd565b62000b40565b620001e76200029236600462003fcd565b62000cc6565b620001e7620002a936600462003fcd565b62000e8e565b620001e7620002c036600462003fcd565b62001030565b620001e7620002d736600462003fcd565b620011b6565b620001e7620002ee36600462003fcd565b62001358565b620001e76200030536600462003fcd565b620014de565b620001e76200031c36600462003fcd565b62001680565b620001e76200033336600462003fcd565b6200185d565b3480156200034657600080fd5b5060015462000240565b620001e76200036136600462003fff565b620019e3565b620001e76200037836600462003fcd565b62001cfe565b620001e76200038f36600462003fcd565b62001ea0565b620001e7620003a636600462003fcd565b62002049565b620001e7620003bd36600462003fcd565b62002372565b620001e7620003d436600462003fcd565b62002514565b620001e7620003eb36600462003fcd565b62002861565b348015620003fe57600080fd5b506200040962002a03565b6040516200024a92919062004070565b620001e76200042a36600462003fcd565b62002aa8565b620001e76200044136600462003fcd565b62002c2e565b620001e76200045836600462003fcd565b62002f7b565b620001e76200046f36600462003fcd565b6200338b565b620001e76200048636600462003fcd565b62003511565b620001e76200049d36600462003fcd565b620036b3565b620001e7620004b436600462003fcd565b62003839565b620004cc602d600054146071620039db565b620004e981351580620004e157506001548235145b6072620039db565b600080805560028054620004fd9062004093565b80601f01602080910402602001604051908101604052809291908181526020018280546200052b9062004093565b80156200057c5780601f1062000550576101008083540402835291602001916200057c565b820191906000526020600020905b8154815290600101906020018083116200055e57829003601f168201915b50505050508060200190518101906200059691906200411f565b90507ff56199befcf0b68513215a2a85be1fb4fca1d0e4a1638730935fdb01bc191ac382604051620005c991906200419d565b60405180910390a1620005df3415606f620039db565b8051620005f9906001600160a01b031633146070620039db565b6200060362003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003a02565b505050565b620006576029600054146069620039db565b62000674813515806200066c57506001548235145b606a620039db565b600080805560028054620006889062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620006b69062004093565b8015620007075780601f10620006db5761010080835404028352916020019162000707565b820191906000526020600020905b815481529060010190602001808311620006e957829003601f168201915b50505050508060200190518101906200072191906200411f565b90507f8efda6143ea80087ba44ea5c132867e37dde35ab01b6c0e6eecefc253da97158826040516200075491906200419d565b60405180910390a16200076a34156067620039db565b805162000784906001600160a01b031633146068620039db565b6200078e62003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003a82565b620007dd6019600054146049620039db565b620007fa81351580620007f257506001548235145b604a620039db565b6000808055600280546200080e9062004093565b80601f01602080910402602001604051908101604052809291908181526020018280546200083c9062004093565b80156200088d5780601f1062000861576101008083540402835291602001916200088d565b820191906000526020600020905b8154815290600101906020018083116200086f57829003601f168201915b5050505050806020019051810190620008a791906200424c565b90507fc994af732d7092e2f923c670a05dd06dcc39938b89e46c484127f784f4b213a182604051620008da91906200419d565b60405180910390a1620008f034156047620039db565b60208101516200090d906001600160a01b031633146048620039db565b6200092681606001518260000151836080015162003adc565b6200093062003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003af3565b6200097f6001600054146009620039db565b6200099c813515806200099457506001548235145b600a620039db565b600080805560028054620009b09062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620009de9062004093565b801562000a2f5780601f1062000a035761010080835404028352916020019162000a2f565b820191906000526020600020905b81548152906001019060200180831162000a1157829003601f168201915b505050505080602001905181019062000a4991906200426b565b90507f9ea6e8c055e86924b5db5f9635a4bdc97514ead0c112e90b6cc9dedc308452d48260405162000a7c9190620042c7565b60405180910390a162000a9234156008620039db565b62000aa46060830160408401620042e1565b1562000b2457604080518082019091526000808252602082015281516001600160a01b0390811680835233602080850191825260026000554360015560408051918201939093529051909216908201526060015b6040516020818303038152906040526002908051906020019062000b1e92919062003ebe565b50505050565b6000808055600181905562000b3c9060029062003f4d565b5050565b62000b526018600054146045620039db565b62000b6f8135158062000b6757506001548235145b6046620039db565b60008080556002805462000b839062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462000bb19062004093565b801562000c025780601f1062000bd65761010080835404028352916020019162000c02565b820191906000526020600020905b81548152906001019060200180831162000be457829003601f168201915b505050505080602001905181019062000c1c91906200411f565b90507f427a9e8a08f0cc8f967a8e2dce4ce18b8f4de10aac559fe4af87cd3e759e131d8260405162000c4f91906200419d565b60405180910390a162000c6534156043620039db565b805162000c7f906001600160a01b031633146044620039db565b62000c8962003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003b4d565b62000cd8600260005414600d620039db565b62000cf58135158062000ced57506001548235145b600e620039db565b60008080556002805462000d099062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462000d379062004093565b801562000d885780601f1062000d5c5761010080835404028352916020019162000d88565b820191906000526020600020905b81548152906001019060200180831162000d6a57829003601f168201915b505050505080602001905181019062000da2919062004301565b6040805184358152602080860135908201529192507fa8de7fa57e96b1b344028051973cc20a5275cd64ccacf1c4ebc1e38bc2945cb6910160405180910390a162000df03415600b620039db565b805162000e0a906001600160a01b03163314600c620039db565b60408051606080820183526000808352602080840182815284860183815287516001600160a01b0390811680885289850151821684528a850135835260039095554360015587518085019590955291519091168387015251828401528451808303909301835260809091019093528051919262000b1e926002929091019062003ebe565b62000ea0602260005414605d620039db565b62000ebd8135158062000eb557506001548235145b605e620039db565b60008080556002805462000ed19062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462000eff9062004093565b801562000f505780601f1062000f245761010080835404028352916020019162000f50565b820191906000526020600020905b81548152906001019060200180831162000f3257829003601f168201915b505050505080602001905181019062000f6a91906200424c565b90507fbed89dd74cae374ab40e56da43251935a72e507a975ba8088fa10a6f3a45a6448260405162000f9d91906200419d565b60405180910390a162000fb33415605b620039db565b602081015162000fd0906001600160a01b03163314605c620039db565b62000fe981606001518260000151836080015162003adc565b62000ff362003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003ba7565b62001042600f600054146031620039db565b6200105f813515806200105757506001548235145b6032620039db565b600080805560028054620010739062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620010a19062004093565b8015620010f25780601f10620010c657610100808354040283529160200191620010f2565b820191906000526020600020905b815481529060010190602001808311620010d457829003601f168201915b50505050508060200190518101906200110c91906200411f565b90507f07e6cc8e2fc82a9375e0bae2c8fb95cb33ae4f7121cc887b7bcd23b343d8ec05826040516200113f91906200419d565b60405180910390a1620011553415602f620039db565b80516200116f906001600160a01b031633146030620039db565b6200117962003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003c01565b620011c8602a60005414606d620039db565b620011e581351580620011dd57506001548235145b606e620039db565b600080805560028054620011f99062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620012279062004093565b8015620012785780601f106200124c5761010080835404028352916020019162001278565b820191906000526020600020905b8154815290600101906020018083116200125a57829003601f168201915b505050505080602001905181019062001292919062004370565b90507f4f0186e9075baafc83f7eee3c4df6a72d4de867fa2569e7e3631da47c772903482604051620012c591906200419d565b60405180910390a1620012db3415606b620039db565b6020810151620012f8906001600160a01b03163314606c620039db565b6200131181606001518260000151836040015162003adc565b6200131b62003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003a02565b6200136a6020600054146055620039db565b62001387813515806200137f57506001548235145b6056620039db565b6000808055600280546200139b9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620013c99062004093565b80156200141a5780601f10620013ee576101008083540402835291602001916200141a565b820191906000526020600020905b815481529060010190602001808311620013fc57829003601f168201915b50505050508060200190518101906200143491906200411f565b90507f2b7e9b090ddec9424c868da5fc141d6fe9bae66d67fdb80e00f08d3b57ac325c826040516200146791906200419d565b60405180910390a16200147d34156053620039db565b805162001497906001600160a01b031633146054620039db565b620014a162003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003c5b565b620014f06026600054146065620039db565b6200150d813515806200150557506001548235145b6066620039db565b600080805560028054620015219062004093565b80601f01602080910402602001604051908101604052809291908181526020018280546200154f9062004093565b8015620015a05780601f106200157457610100808354040283529160200191620015a0565b820191906000526020600020905b8154815290600101906020018083116200158257829003601f168201915b5050505050806020019051810190620015ba91906200424c565b90507fd0734acd0adcce68cacb1df6655f24aef982e646fa3b47a57745808e833fc81582604051620015ed91906200419d565b60405180910390a16200160334156063620039db565b602081015162001620906001600160a01b031633146064620039db565b6200163981606001518260000151836080015162003adc565b6200164362003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003a82565b620016926003600054146011620039db565b620016af81351580620016a757506001548235145b6012620039db565b600080805560028054620016c39062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620016f19062004093565b8015620017425780601f10620017165761010080835404028352916020019162001742565b820191906000526020600020905b8154815290600101906020018083116200172457829003601f168201915b50505050508060200190518101906200175c9190620043fc565b90507f25e9400ad0fddc8c71fc4eb2845b4d0fc13ca66f2a17e1b7e0f544d275234c09826040516200178f91906200419d565b60405180910390a1620017aa81604001513414600f620039db565b6020810151620017c7906001600160a01b031633146010620039db565b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f1935050505015801562001805573d6000803e3d6000fd5b50604080518082019091526000808252602082015281516001600160a01b0390811680835260208085015183168185019081526004600055436001556040805192830193909352519092169082015260600162000af8565b6200186f6025600054146061620039db565b6200188c813515806200188457506001548235145b6062620039db565b600080805560028054620018a09062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620018ce9062004093565b80156200191f5780601f10620018f3576101008083540402835291602001916200191f565b820191906000526020600020905b8154815290600101906020018083116200190157829003601f168201915b50505050508060200190518101906200193991906200411f565b90507f5a27435c7f32d712493066de1d9824e76f41cceef3f7574d14d3e5383ae9eda5826040516200196c91906200419d565b60405180910390a1620019823415605f620039db565b80516200199c906001600160a01b031633146060620039db565b620019a662003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003ba7565b620019f56004600054146015620039db565b62001a128135158062001a0a57506001548235145b6016620039db565b60008080556002805462001a269062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462001a549062004093565b801562001aa55780601f1062001a795761010080835404028352916020019162001aa5565b820191906000526020600020905b81548152906001019060200180831162001a8757829003601f168201915b505050505080602001905181019062001abf919062004301565b60408051808201909152600080825260208201529091507f982860f8d27e8cc7c0ebb9e4cd916f47e6690c6b4a3744b1369dcf0abfce34f48360405162001b07919062004466565b60405180910390a162001b1d34156013620039db565b815162001b37906001600160a01b031633146014620039db565b60408051602085810135908201520160408051601f1981840301815291815262001b689060608601908601620044da565b6040516001600160c01b0319909116602082015260280160408051808303601f1901815282825260608781013560208501526080808901359385019390935260a088013590840152910160408051808303601f1901815282825260c0880135602084015291016040516020818303038152906040528660200160c00135601260405162001bf59062003f8f565b62001c0696959493929190620044f8565b604051809103906000f08015801562001c23573d6000803e3d6000fd5b506001600160a01b031680825260208083018290526040519182527f528b3f8941a843fa23117200e61a4350675a25723ff95a96c24db55eb0a93cb6910160405180910390a160408051608081018252600080825260208083018281528385018381526060850184815288516001600160a01b03908116875289850151811690935260e08a01359091528683015190911690526005909155436001559151909162001cd19183910162004563565b6040516020818303038152906040526002908051906020019062001cf792919062003ebe565b5050505050565b62001d10600c60005414602d620039db565b62001d2d8135158062001d2557506001548235145b602e620039db565b60008080556002805462001d419062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462001d6f9062004093565b801562001dc05780601f1062001d945761010080835404028352916020019162001dc0565b820191906000526020600020905b81548152906001019060200180831162001da257829003601f168201915b505050505080602001905181019062001dda91906200424c565b90507f5fe72957f5855f25860ec325face1305075da64ba42ea3b56918fbe46e26b4048260405162001e0d91906200419d565b60405180910390a162001e233415602b620039db565b602081015162001e40906001600160a01b03163314602c620039db565b62001e5981606001518260000151836080015162003adc565b62001e6362003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003c01565b62001eb26005600054146019620039db565b62001ecf8135158062001ec757506001548235145b601a620039db565b60008080556002805462001ee39062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462001f119062004093565b801562001f625780601f1062001f365761010080835404028352916020019162001f62565b820191906000526020600020905b81548152906001019060200180831162001f4457829003601f168201915b505050505080602001905181019062001f7c919062004370565b90507f9cdba579557d44a893ea7929682d6795d48dd5c40dc981d852842d4b18914de88260405162001faf91906200419d565b60405180910390a162001fc534156017620039db565b602081015162001fe2906001600160a01b031633146018620039db565b6040805160808101825260008082526020808301828152838501838152606080860185815288516001600160a01b0390811688528986015181169094528888015190925287015190911690526006909155436001559151909162000af89183910162004563565b6200205b6021600054146059620039db565b62002078813515806200207057506001548235145b605a620039db565b6000808055600280546200208c9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620020ba9062004093565b80156200210b5780601f10620020df576101008083540402835291602001916200210b565b820191906000526020600020905b815481529060010190602001808311620020ed57829003601f168201915b50505050508060200190518101906200212591906200459c565b905062002145604051806040016040528060008152602001600081525090565b7f35e4198bc89d52fd314a8c5d55a40a219ff4262da074ac272b1fb352f981787f836040516200217691906200419d565b60405180910390a16200218c34156057620039db565b8151620021a6906001600160a01b031633146058620039db565b8160a0015115620022565781608001518260400151620021c791906200465d565b8152606082015182516080840151620021e292919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a89015190935290890151909216909152855190526022909155436001559151909162001cd19183910162004677565b8160a00151156200230b57816080015182604001516200227791906200465d565b60208201526060820151825160808401516200229592919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528582015190526026909155436001559151909162001cd19183910162004677565b6040805160808101825260008082526020808301828152838501838152606080860185815289516001600160a01b0390811688528a8601518116909452898801519092528801519091169052602a909155436001559151909162001cd19183910162004563565b620023846015600054146041620039db565b620023a1813515806200239957506001548235145b6042620039db565b600080805560028054620023b59062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620023e39062004093565b8015620024345780601f10620024085761010080835404028352916020019162002434565b820191906000526020600020905b8154815290600101906020018083116200241657829003601f168201915b50505050508060200190518101906200244e91906200424c565b90507fc1e55c0eda497be6c786e1629355e9ba4b0e7536499c9916eca91e0c92561733826040516200248191906200419d565b60405180910390a1620024973415603f620039db565b6020810151620024b4906001600160a01b031633146040620039db565b620024cd81606001518260000151836080015162003adc565b620024d762003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003b4d565b62002526601460005414603d620039db565b62002543813515806200253b57506001548235145b603e620039db565b600080805560028054620025579062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620025859062004093565b8015620025d65780601f10620025aa57610100808354040283529160200191620025d6565b820191906000526020600020905b815481529060010190602001808311620025b857829003601f168201915b5050505050806020019051810190620025f0919062004760565b905062002619604051806060016040528060001515815260200160008152602001600081525090565b7fa2bfcfc2bf018598bf89847a2aa2dc48cb8eec269fecfd468afbe606d78101bd836040516200264a91906200419d565b60405180910390a1620026603415603b620039db565b81516200267a906001600160a01b03163314603c620039db565b608082015160a08301511080158252620027385781608001518260a00151620026a491906200465d565b6020820152606082015182516080840151620026c292919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528582015190526015909155436001559151909162001cd19183910162004677565b805115620027ea5781608001518260a001516200275691906200465d565b60408201526060820151825160808401516200277492919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528585015190526019909155436001559151909162001cd19183910162004677565b6040805160a08082018352600080835260208084018281528486018381526060808701858152608088018681528b516001600160a01b039081168a528c87015181169095528b8a0151909352908a015190921690915292870151909252601d9055436001559151909162001cd19183910162004677565b620028736010600054146035620039db565b62002890813515806200288857506001548235145b6036620039db565b600080805560028054620028a49062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620028d29062004093565b8015620029235780601f10620028f75761010080835404028352916020019162002923565b820191906000526020600020905b8154815290600101906020018083116200290557829003601f168201915b50505050508060200190518101906200293d91906200424c565b90507fe0a2e1387b485a156cf7c3e3303f6334b1f0a305dca44d49ca15f2f74d8b4bda826040516200297091906200419d565b60405180910390a16200298634156033620039db565b6020810151620029a3906001600160a01b031633146034620039db565b620029bc81606001518260000151836080015162003adc565b620029c662003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003cb4565b60006060600054600280805462002a1a9062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002a489062004093565b801562002a995780601f1062002a6d5761010080835404028352916020019162002a99565b820191906000526020600020905b81548152906001019060200180831162002a7b57829003601f168201915b50505050509050915091509091565b62002aba601c60005414604d620039db565b62002ad78135158062002acf57506001548235145b604e620039db565b60008080556002805462002aeb9062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002b199062004093565b801562002b6a5780601f1062002b3e5761010080835404028352916020019162002b6a565b820191906000526020600020905b81548152906001019060200180831162002b4c57829003601f168201915b505050505080602001905181019062002b8491906200411f565b90507f45559a3e180426ea195ce9b1df999c27f7e94d43b1c391fb910072ded4de54958260405162002bb791906200419d565b60405180910390a162002bcd3415604b620039db565b805162002be7906001600160a01b03163314604c620039db565b62002bf162003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003af3565b62002c406007600054146021620039db565b62002c5d8135158062002c5557506001548235145b6022620039db565b60008080556002805462002c719062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002c9f9062004093565b801562002cf05780601f1062002cc45761010080835404028352916020019162002cf0565b820191906000526020600020905b81548152906001019060200180831162002cd257829003601f168201915b505050505080602001905181019062002d0a919062004760565b905062002d33604051806060016040528060001515815260200160008152602001600081525090565b7fba16100ad25f3c6798bc3b7e9ca316fb231388e6fa4444c0f477e2a4336514e08360405162002d6491906200419d565b60405180910390a162002d7a3415601f620039db565b815162002d94906001600160a01b031633146020620039db565b608082015160a0830151108015825262002e525781608001518260a0015162002dbe91906200465d565b602082015260608201518251608084015162002ddc92919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a890151909352908901519092169091528582015190526008909155436001559151909162001cd19183910162004677565b80511562002f045781608001518260a0015162002e7091906200465d565b604082015260608201518251608084015162002e8e92919062003adc565b6040805160a081018252600080825260208083018281528385018381526060808601858152608087018681528a516001600160a01b0390811689528b87015181169095528a89015190935290890151909216909152858501519052600c909155436001559151909162001cd19183910162004677565b6040805160a08082018352600080835260208084018281528486018381526060808701858152608088018681528b516001600160a01b039081168a528c87015181169095528b8a0151909352908a01519092169091529287015190925260109055436001559151909162001cd19183910162004677565b62002f8d600660005414601d620039db565b62002faa8135158062002fa257506001548235145b601e620039db565b60008080556002805462002fbe9062004093565b80601f016020809104026020016040519081016040528092919081815260200182805462002fec9062004093565b80156200303d5780601f1062003011576101008083540402835291602001916200303d565b820191906000526020600020905b8154815290600101906020018083116200301f57829003601f168201915b505050505080602001905181019062003057919062004370565b90506200308760405180608001604052806000815260200160001515815260200160008152602001600081525090565b7f4df267dd1a05b613b05cdeee7d7e028d3842cff6f4e5a9d9dde2cdaf4156275983604051620030b891906200419d565b60405180910390a1620030ce3415601b620039db565b6020820151620030eb906001600160a01b03163314601c620039db565b6064826040015160286200310091906200477f565b6200310c9190620047a1565b808252604083015110156020808301919091528251908301516001600160a01b039081169116146200314057600062003146565b80602001515b15620031ff57805160408301516200315f91906200465d565b60408201526060820151602083015182516200317d92919062003adc565b6040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a088018781528b516001600160a01b039081168a528c88015181169096528b8a0151909452918a015190931690925286519091528585015190526007909155436001559151909162001cd191839101620047c4565b806020015115620032c057805160408301516200321d91906200465d565b8160600181815250506200323f82606001518360200151836000015162003adc565b6040805160c0810182526000808252602080830182815283850183815260608086018581526080870186815260a088018781528b516001600160a01b039081168a528c88015181169096528b8a01519094528a830151909416905287519092529086015190526014909155436001559151909162001cd191839101620047c4565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915282516001600160a01b0390811680835260208086015183168185019081526040808801518187019081526060808a0151871681890190815289516080808b019182528b880151151560a0808d019182526021600055436001558751998a019a909a5296518a169588019590955292519186019190915251909516908301529251918101919091529051151560c082015260e00162001cd1565b6200339d600b600054146029620039db565b620033ba81351580620033b257506001548235145b602a620039db565b600080805560028054620033ce9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620033fc9062004093565b80156200344d5780601f1062003421576101008083540402835291602001916200344d565b820191906000526020600020905b8154815290600101906020018083116200342f57829003601f168201915b50505050508060200190518101906200346791906200411f565b90507f4c8b89b6d291e7da782b3a03ba8192a22dc69ae73b79029441f7242310b1a5a4826040516200349a91906200419d565b60405180910390a1620034b034156027620039db565b8051620034ca906001600160a01b031633146028620039db565b620034d462003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003d0e565b620035236008600054146025620039db565b62003540813515806200353857506001548235145b6026620039db565b600080805560028054620035549062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620035829062004093565b8015620035d35780601f10620035a757610100808354040283529160200191620035d3565b820191906000526020600020905b815481529060010190602001808311620035b557829003601f168201915b5050505050806020019051810190620035ed91906200424c565b90507fb9845e39b4c5715a32bc04872bfe1723e638b66042817fdde0a44e5b0466b6dc826040516200362091906200419d565b60405180910390a16200363634156023620039db565b602081015162003653906001600160a01b031633146024620039db565b6200366c81606001518260000151836080015162003adc565b6200367662003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003d0e565b620036c56013600054146039620039db565b620036e281351580620036da57506001548235145b603a620039db565b600080805560028054620036f69062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620037249062004093565b8015620037755780601f10620037495761010080835404028352916020019162003775565b820191906000526020600020905b8154815290600101906020018083116200375757829003601f168201915b50505050508060200190518101906200378f91906200411f565b90507f359a55deeb4d5872fc8fd0567a7ed5063e7b4dc07b55df97304b61bb4b680e1282604051620037c291906200419d565b60405180910390a1620037d834156037620039db565b8051620037f2906001600160a01b031633146038620039db565b620037fc62003e87565b815181516001600160a01b039182169052602080840151835182015260408085015184519316920191909152810151439052620006408162003cb4565b6200384b601d600054146051620039db565b62003868813515806200386057506001548235145b6052620039db565b6000808055600280546200387c9062004093565b80601f0160208091040260200160405190810160405280929190818152602001828054620038aa9062004093565b8015620038fb5780601f10620038cf57610100808354040283529160200191620038fb565b820191906000526020600020905b815481529060010190602001808311620038dd57829003601f168201915b50505050508060200190518101906200391591906200424c565b90507f322ee4284cfff566341927d6f2f7e2d1a5c0f8fa56564384979fc8a9b75ff941826040516200394891906200419d565b60405180910390a16200395e3415604f620039db565b60208101516200397b906001600160a01b031633146050620039db565b6200399481606001518260000151836080015162003adc565b6200399e62003e87565b60208083015182516001600160a01b0391821690526040808501518451840152606085015184519216910152810151439052620006408162003c5b565b8162000b3c5760405163100960cb60e01b8152600481018290526024015b60405180910390fd5b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052602d909155436001559151909162003a5c9183910162004814565b604051602081830303815290604052600290805190602001906200064092919062003ebe565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526029909155436001559151909162003a5c9183910162004814565b62003ae983838362003d68565b6200064057600080fd5b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052601c909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526018909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526025909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052600f909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b03908116865287518401519092528651860151909116905290819055436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b0390811686528751840151909252865186015190911690526013909155436001559151909162003a5c9183910162004814565b60408051606081018252600080825260208083018281528385018381528651516001600160a01b039081168652875184015190925286518601519091169052600b909155436001559151909162003a5c9183910162004814565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392839291881691839162003dc99162004841565b60006040518083038185875af1925050503d806000811462003e08576040519150601f19603f3d011682016040523d82523d6000602084013e62003e0d565b606091505b509150915062003e208282600262003e41565b508080602001905181019062003e3791906200485f565b9695505050505050565b6060831562003e5257508162003e80565b82511562003e635782518084602001fd5b60405163100960cb60e01b815260048101839052602401620039f9565b9392505050565b6040805160a08101825260008183018181526060830182905260808301829052825282516020818101909452908152909182015290565b82805462003ecc9062004093565b90600052602060002090601f01602090048101928262003ef0576000855562003f3b565b82601f1062003f0b57805160ff191683800117855562003f3b565b8280016001018555821562003f3b579182015b8281111562003f3b57825182559160200191906001019062003f1e565b5062003f4992915062003f9d565b5090565b50805462003f5b9062004093565b6000825580601f1062003f6c575050565b601f01602090049060005260206000209081019062003f8c919062003f9d565b50565b610f75806200488083390190565b5b8082111562003f49576000815560010162003f9e565b60006040828403121562003fc757600080fd5b50919050565b60006040828403121562003fe057600080fd5b62003e80838362003fb4565b60006060828403121562003fc757600080fd5b6000610120828403121562003fc757600080fd5b60005b838110156200403057818101518382015260200162004016565b8381111562000b1e5750506000910152565b600081518084526200405c81602086016020860162004013565b601f01601f19169290920160200192915050565b8281526040602082015260006200408b604083018462004042565b949350505050565b600181811c90821680620040a857607f821691505b6020821081141562003fc757634e487b7160e01b600052602260045260246000fd5b6040516060810167ffffffffffffffff81118282101715620040fc57634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b03811681146200411a57600080fd5b919050565b6000606082840312156200413257600080fd5b6200413c620040ca565b620041478362004102565b815260208301516020820152620041616040840162004102565b60408201529392505050565b801515811462003f8c57600080fd5b80358252602081013562004190816200416d565b8015156020840152505050565b60408101620041ad82846200417c565b92915050565b600060a08284031215620041c657600080fd5b60405160a0810181811067ffffffffffffffff82111715620041f857634e487b7160e01b600052604160045260246000fd5b604052905080620042098362004102565b8152620042196020840162004102565b602082015260408301516040820152620042366060840162004102565b6060820152608083015160808201525092915050565b600060a082840312156200425f57600080fd5b62003e808383620041b3565b6000602082840312156200427e57600080fd5b6040516020810181811067ffffffffffffffff82111715620042b057634e487b7160e01b600052604160045260246000fd5b604052620042be8362004102565b81529392505050565b8135815260608101620041ad60208084019085016200417c565b600060208284031215620042f457600080fd5b813562003e80816200416d565b6000604082840312156200431457600080fd5b6040516040810181811067ffffffffffffffff821117156200434657634e487b7160e01b600052604160045260246000fd5b604052620043548362004102565b8152620043646020840162004102565b60208201529392505050565b6000608082840312156200438357600080fd5b6040516080810181811067ffffffffffffffff82111715620043b557634e487b7160e01b600052604160045260246000fd5b604052620043c38362004102565b8152620043d36020840162004102565b602082015260408301516040820152620043f06060840162004102565b60608201529392505050565b6000606082840312156200440f57600080fd5b62004419620040ca565b620044248362004102565b8152620044346020840162004102565b6020820152604083015160408201528091505092915050565b80356001600160c01b0319811681146200411a57600080fd5b813581526020808301359082015261012081016001600160c01b031962004490604085016200444d565b166040830152606083013560608301526080830135608083015260a083013560a083015260c083013560c083015260e083013560e083015261010080840135818401525092915050565b600060208284031215620044ed57600080fd5b62003e80826200444d565b60c0815260006200450d60c083018962004042565b828103602084015262004521818962004042565b9050828103604084015262004537818862004042565b905082810360608401526200454d818762004042565b6080840195909552505060a00152949350505050565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606092830151169181019190915260800190565b600060c08284031215620045af57600080fd5b60405160c0810181811067ffffffffffffffff82111715620045e157634e487b7160e01b600052604160045260246000fd5b604052620045ef8362004102565b8152620045ff6020840162004102565b6020820152604083015160408201526200461c6060840162004102565b60608201526080830151608082015260a08301516200463b816200416d565b60a08201529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101562004672576200467262004647565b500390565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606080840151909116908201526080808301519082015260a08101620041ad565b600060c08284031215620046d057600080fd5b60405160c0810181811067ffffffffffffffff821117156200470257634e487b7160e01b600052604160045260246000fd5b604052905080620047138362004102565b8152620047236020840162004102565b602082015260408301516040820152620047406060840162004102565b60608201526080830151608082015260a083015160a08201525092915050565b600060c082840312156200477357600080fd5b62003e808383620046bd565b60008160001904831182151516156200479c576200479c62004647565b500290565b600082620047bf57634e487b7160e01b600052601260045260246000fd5b500490565b81516001600160a01b03908116825260208084015182169083015260408084015190830152606080840151909116908201526080808301519082015260a0808301519082015260c08101620041ad565b81516001600160a01b03908116825260208084015190830152604092830151169181019190915260600190565b600082516200485581846020870162004013565b9190910192915050565b6000602082840312156200487257600080fd5b815162003e80816200416d56fe60806040523480156200001157600080fd5b5060405162000f7538038062000f75833981016040819052620000349162000341565b8551869086906200004d906003906020850190620001ce565b50805162000063906004906020840190620001ce565b506200006f9150503390565b600580546001600160a01b0319166001600160a01b039290921691821790556200009a9083620000e6565b8351620000af906006906020870190620001ce565b508251620000c5906007906020860190620001ce565b506008805460ff191660ff9290921691909117905550620004709350505050565b6001600160a01b038216620001415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200015591906200040c565b90915550506001600160a01b03821660009081526020819052604081208054839290620001849084906200040c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001dc9062000433565b90600052602060002090601f0160209004810192826200020057600085556200024b565b82601f106200021b57805160ff19168380011785556200024b565b828001600101855582156200024b579182015b828111156200024b5782518255916020019190600101906200022e565b50620002599291506200025d565b5090565b5b808211156200025957600081556001016200025e565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200029c57600080fd5b81516001600160401b0380821115620002b957620002b962000274565b604051601f8301601f19908116603f01168101908282118183101715620002e457620002e462000274565b816040528381526020925086838588010111156200030157600080fd5b600091505b8382101562000325578582018301518183018401529082019062000306565b83821115620003375760008385830101525b9695505050505050565b60008060008060008060c087890312156200035b57600080fd5b86516001600160401b03808211156200037357600080fd5b620003818a838b016200028a565b975060208901519150808211156200039857600080fd5b620003a68a838b016200028a565b96506040890151915080821115620003bd57600080fd5b620003cb8a838b016200028a565b95506060890151915080821115620003e257600080fd5b50620003f189828a016200028a565b9350506080870151915060a087015190509295509295509295565b600082198211156200042e57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200044857607f821691505b602082108114156200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b610af580620004806000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806383197ef01161006657806383197ef01461019b57806395d89b41146101a5578063a9059cbb146101ad578063dd62ed3e146101c057600080fd5b806342966c68146101575780635600f04f1461016a57806370a082311461017257600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a578063392f37e91461014f575b600080fd5b6100dc6101f9565b6040516100e991906108fa565b60405180910390f35b61010561010036600461096b565b61028b565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610995565b6102a1565b60085460405160ff90911681526020016100e9565b6100dc610357565b6101056101653660046109d1565b610366565b6100dc6103dc565b6101196101803660046109ea565b6001600160a01b031660009081526020819052604090205490565b6101a36103eb565b005b6100dc610492565b6101056101bb36600461096b565b6104a1565b6101196101ce366004610a0c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020890610a3f565b80601f016020809104026020016040519081016040528092919081815260200182805461023490610a3f565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050905090565b60006102983384846104ae565b50600192915050565b60006102ae8484846105d3565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103385760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61034c85336103478685610a90565b6104ae565b506001949350505050565b60606007805461020890610a3f565b6005546000906001600160a01b0316336001600160a01b0316146103be5760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b6005546103d4906001600160a01b0316836107ab565b506001919050565b60606006805461020890610a3f565b6005546001600160a01b0316336001600160a01b0316146104405760405162461bcd60e51b815260206004820152600f60248201526e36bab9ba1031329031b932b0ba37b960891b604482015260640161032f565b600254156104845760405162461bcd60e51b81526020600482015260116024820152706d757374206265206e6f20737570706c7960781b604482015260640161032f565b6005546001600160a01b0316ff5b60606004805461020890610a3f565b60006102983384846105d3565b6001600160a01b0383166105105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032f565b6001600160a01b0382166105715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032f565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032f565b6001600160a01b038316600090815260208190526040902054818110156107115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032f565b61071b8282610a90565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610751908490610aa7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161079d91815260200190565b60405180910390a350505050565b6001600160a01b03821661080b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032f565b6001600160a01b0382166000908152602081905260409020548181101561087f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032f565b6108898282610a90565b6001600160a01b038416600090815260208190526040812091909155600280548492906108b7908490610a90565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105c6565b600060208083528351808285015260005b818110156109275785810183015185820160400152820161090b565b81811115610939576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461096657600080fd5b919050565b6000806040838503121561097e57600080fd5b6109878361094f565b946020939093013593505050565b6000806000606084860312156109aa57600080fd5b6109b38461094f565b92506109c16020850161094f565b9150604084013590509250925092565b6000602082840312156109e357600080fd5b5035919050565b6000602082840312156109fc57600080fd5b610a058261094f565b9392505050565b60008060408385031215610a1f57600080fd5b610a288361094f565b9150610a366020840161094f565b90509250929050565b600181811c90821680610a5357607f821691505b60208210811415610a7457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610aa257610aa2610a7a565b500390565b60008219821115610aba57610aba610a7a565b50019056fea264697066735822122031be63d0f5320250996e497a8bfa3440d5b23e1f35d28e15161e842fd946ebff64736f6c63430008090033a2646970667358221220408a2d217661da2475597ce094d31625cd6d99bb309585fc143843a0d70e92e764736f6c63430008090033`,\n  BytecodeLen: 23523,\n  Which: `oD`,\n  version: 5,\n  views: {\n    }\n  };\nexport const _Connectors = {\n  ALGO: _ALGO,\n  ETH: _ETH\n  };\nexport const _Participants = {\n  \"ProjectOwner\": ProjectOwner,\n  \"Sponsor\": Sponsor\n  };\nexport const _APIs = {\n  };\n"]},"metadata":{},"sourceType":"module"}